//--- OBJECT WRITE BEGIN
$ThisPrefab = new SimGroup() {
    canSave = "1";
    canSaveDynamicFields = "1";
    groupPosition = "0.000000 0.000000 0.000000";

    
    new BeamNGVehicle(ego) {
        JBeam = "etk800";
        color = "White";
        colorPalette0 = "White";
        colorPalette1 = "White";
        renderDistance = "500";
        renderFade = "0.1";
        dataBlock = "default_vehicle";
        position = "1.0 -4.999684125323278 0";
        rotationMatrix = "6.123233995736766e-17 1.0 0.0 -1.0 6.123233995736766e-17 0.0 0.0 0.0 1.0";
        scale = "1 1 1";
        canSave = "1";
        canSaveDynamicFields = "1";
        annotation = "CAR";
        licenseText = "ego";
        
    };
    

    
    new DecalRoad(road_0) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "1.0 0.0 0.01 12.000000000000005";
        
        Node = "2.123 0.0 0.01 12.000000000000002";
        
        Node = "3.247 0.0 0.01 11.999999999999996";
        
        Node = "4.37 0.0 0.01 12.000000000000002";
        
        Node = "5.494 -0.0 0.01 12.0";
        
        Node = "6.617 -0.0 0.01 12.0";
        
        Node = "7.74 -0.0 0.01 12.0";
        
        Node = "8.864 0.0 0.01 12.000000000000002";
        
        Node = "9.987 0.0 0.01 12.000000000000004";
        
        Node = "11.111 0.0 0.01 12.000000000000004";
        
        Node = "12.234 -0.0 0.01 12.000000000000004";
        
        Node = "13.357 -0.0 0.01 12.000000000000002";
        
        Node = "14.481 -0.0 0.01 12.000000000000002";
        
        Node = "15.604 0.0 0.01 12.000000000000004";
        
        Node = "16.728 0.0 0.01 12.000000000000002";
        
        Node = "17.851 0.0 0.01 12.0";
        
        Node = "18.974 -0.0 0.01 12.000000000000002";
        
        Node = "20.098 -0.0 0.01 11.999999999999996";
        
        Node = "21.221 -0.0 0.01 11.999999999999996";
        
        Node = "22.345 0.0 0.01 11.999999999999998";
        
        Node = "23.468 0.0 0.01 11.999999999999998";
        
        Node = "24.591 0.0 0.01 12.000000000000004";
        
        Node = "25.715 -0.0 0.01 12.000000000000002";
        
        Node = "26.838 -0.0 0.01 12.000000000000002";
        
        Node = "27.962 0.0 0.01 11.999999999999996";
        
        Node = "29.085 0.0 0.01 11.999999999999996";
        
        Node = "30.209 -0.0 0.01 12.000000000000002";
        
        Node = "31.332 -0.001 0.01 12.000000000000002";
        
        Node = "32.455 0.0 0.01 12.000000000000004";
        
        Node = "33.579 0.005 0.01 12.0";
        
        Node = "34.702 0.01 0.01 11.999999999999998";
        
        Node = "35.826 0.011 0.01 11.999999999999998";
        
        Node = "36.949 0.01 0.01 12.0";
        
        Node = "38.072 0.01 0.01 12.000000000000002";
        
        Node = "39.196 0.01 0.01 12.000000000000005";
        
        Node = "40.319 0.009 0.01 12.0";
        
        Node = "41.443 0.012 0.01 12.0";
        
        Node = "42.566 0.018 0.01 12.0";
        
        Node = "43.689 0.021 0.01 12.000000000000002";
        
        Node = "44.813 0.02 0.01 12.0";
        
        Node = "45.936 0.019 0.01 11.999999999999998";
        
        Node = "47.06 0.025 0.01 12.0";
        
        Node = "48.183 0.03 0.01 12.000000000000004";
        
        Node = "49.306 0.03 0.01 11.999999999999996";
        
        Node = "50.43 0.038 0.01 11.999999999999996";
        
        Node = "51.553 0.048 0.01 11.999999999999998";
        
        Node = "52.676 0.05 0.01 12.0";
        
        Node = "53.8 0.055 0.01 12.000000000000002";
        
        Node = "54.923 0.067 0.01 12.000000000000002";
        
        Node = "56.047 0.077 0.01 11.999999999999998";
        
        Node = "57.17 0.089 0.01 11.999999999999998";
        
        Node = "58.293 0.102 0.01 12.000000000000004";
        
        Node = "59.417 0.116 0.01 12.000000000000002";
        
        Node = "60.54 0.132 0.01 12.0";
        
        Node = "61.663 0.157 0.01 12.0";
        
        Node = "62.786 0.185 0.01 11.999999999999998";
        
        Node = "63.909 0.214 0.01 11.999999999999998";
        
        Node = "65.032 0.251 0.01 12.0";
        
        Node = "66.154 0.289 0.01 12.0";
        
        Node = "67.278 0.308 0.01 12.0";
        
        Node = "68.401 0.304 0.01 12.0";
        
        Node = "69.523 0.259 0.01 12.0";
        
        Node = "70.64 0.137 0.01 12.000000000000004";
        
        Node = "71.74 -0.089 0.01 12.000000000000002";
        
        Node = "72.811 -0.425 0.01 12.000000000000002";
        
        Node = "73.818 -0.923 0.01 11.999999999999996";
        
        Node = "74.724 -1.585 0.01 11.999999999999998";
        
        Node = "75.498 -2.398 0.01 12.0";
        
        Node = "76.129 -3.327 0.01 11.999999999999996";
        
        Node = "76.62 -4.337 0.01 11.999999999999996";
        
        Node = "76.989 -5.397 0.01 11.999999999999998";
        
        Node = "77.267 -6.485 0.01 11.999999999999993";
        
        Node = "77.458 -7.593 0.01 12.0";
        
        Node = "77.582 -8.709 0.01 12.000000000000002";
        
        Node = "77.656 -9.83 0.01 12.000000000000002";
        
        Node = "77.681 -10.953 0.01 11.999999999999998";
        
        Node = "77.667 -12.076 0.01 12.000000000000007";
        
        Node = "77.621 -13.199 0.01 12.0";
        
        Node = "77.546 -14.32 0.01 12.000000000000002";
        
        Node = "77.45 -15.439 0.01 12.000000000000004";
        
        Node = "77.329 -16.556 0.01 12.000000000000002";
        
        Node = "77.186 -17.67 0.01 12.0";
        
        Node = "77.031 -18.783 0.01 11.999999999999996";
        
        Node = "76.869 -19.895 0.01 12.000000000000004";
        
        Node = "76.697 -21.005 0.01 12.000000000000002";
        
        Node = "76.538 -22.117 0.01 11.999999999999998";
        
        Node = "76.364 -23.227 0.01 12.000000000000004";
        
        Node = "76.198 -24.338 0.01 11.999999999999996";
        
        Node = "76.03 -25.449 0.01 12.0";
        
        Node = "75.868 -26.56 0.01 11.999999999999998";
        
        Node = "75.696 -27.67 0.01 12.000000000000002";
        
        Node = "75.537 -28.782 0.01 11.999999999999998";
        
        Node = "75.363 -29.892 0.01 11.999999999999998";
        
        Node = "75.203 -31.004 0.01 12.000000000000002";
        
        Node = "75.031 -32.114 0.01 12.000000000000004";
        
        Node = "74.866 -33.226 0.01 12.000000000000002";
        
        Node = "74.696 -34.336 0.01 12.0";
        
        Node = "74.535 -35.448 0.01 12.0";
        
        Node = "74.363 -36.558 0.01 12.000000000000002";
        
        Node = "74.202 -37.67 0.01 12.0";
        
        Node = "74.03 -38.78 0.01 12.0";
        
    };
    
    new DecalRoad(road_0_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "1.0 5.775 0.01 0.15";
        
        Node = "30.209 5.775 0.01 0.15";
        
        Node = "31.332 5.774002289614645 0.01 0.15";
        
        Node = "32.43958409067314 5.774988562179804 0.01 0.15";
        
        Node = "33.55329931488053 5.779942811397808 0.01 0.15";
        
        Node = "34.676287877290854 5.784942760473544 0.01 0.15";
        
        Node = "34.696862101677524 5.784997714458495 0.01 0.15";
        
        Node = "35.82086210167753 5.785997714458495 0.01 0.15";
        
        Node = "35.831142473473186 5.785997710386263 0.01 0.15";
        
        Node = "36.95157123724573 5.785 0.01 0.15";
        
        Node = "39.196 5.785 0.01 0.15";
        
        Node = "40.313864397386325 5.78400686272472 0.01 0.15";
        
        Node = "41.41986592922463 5.786958824108629 0.01 0.15";
        
        Node = "42.53514558730746 5.792917575621093 0.01 0.15";
        
        Node = "42.55057262851227 5.792979393574403 0.01 0.15";
        
        Node = "43.67357262851227 5.795979393574403 0.01 0.15";
        
        Node = "43.694137898322474 5.795997714458495 0.01 0.15";
        
        Node = "44.818137898322476 5.7949977144584945 0.01 0.15";
        
        Node = "45.92315763071943 5.7940137253842625 0.01 0.15";
        
        Node = "47.02917303707003 5.799917722215316 0.01 0.15";
        
        Node = "48.157287877290855 5.804942760473544 0.01 0.15";
        
        Node = "48.183 5.805000000000001 0.01 0.15";
        
        Node = "49.285448658845304 5.805000000000001 0.01 0.15";
        
        Node = "50.38373752396555 5.812817002598721 0.01 0.15";
        
        Node = "51.50157728359656 5.822771052105676 0.01 0.15";
        
        Node = "51.54271506528662 5.822990841561392 0.01 0.15";
        
        Node = "52.65801287684415 5.824977124395867 0.01 0.15";
        
        Node = "53.756301859579594 5.829862751543266 0.01 0.15";
        
        Node = "54.86129381666617 5.841670323658172 0.01 0.15";
        
        Node = "54.871623029721704 5.8417714592808805 0.01 0.15";
        
        Node = "55.990458377968835 5.851725510421869 0.01 0.15";
        
        Node = "57.105723044204254 5.863642853248962 0.01 0.15";
        
        Node = "58.223613622210884 5.876583705888398 0.01 0.15";
        
        Node = "59.33990179594339 5.8904876511128235 0.01 0.15";
        
        Node = "60.434597658117085 5.90608438645991 0.01 0.15";
        
        Node = "61.52676244650028 5.930397939184381 0.01 0.15";
        
        Node = "62.63948663694126 5.958141730219419 0.01 0.15";
        
        Node = "63.73937260458323 5.986544840692809 0.01 0.15";
        
        Node = "64.83917767829745 6.022780626736822 0.01 0.15";
        
        Node = "65.95852384281386 6.060690746390675 0.01 0.15";
        
        Node = "66.0563938373485 6.063175095804807 0.01 0.15";
        
        Node = "67.1803938373485 6.082175095804807 0.01 0.15";
        
        Node = "67.2985697715637 6.082963366506996 0.01 0.15";
        
        Node = "68.4215697715637 6.078963366506996 0.01 0.15";
        
        Node = "68.63243158517861 6.0743608571199195 0.01 0.15";
        
        Node = "69.75443158517861 6.0293608571199195 0.01 0.15";
        
        Node = "70.15002314260158 5.9998594285735685 0.01 0.15";
        
        Node = "71.26702314260159 5.877859428573569 0.01 0.15";
        
        Node = "71.80222388768843 5.793841931226856 0.01 0.15";
        
        Node = "72.90222388768842 5.567841931226856 0.01 0.15";
        
        Node = "73.46868893045303 5.421195965819106 0.01 0.15";
        
        Node = "74.53968893045304 5.085195965819106 0.01 0.15";
        
        Node = "74.96183032728496 4.9345292613466825 0.01 0.15";
        
        Node = "75.37101514481307 4.751576808889029 0.01 0.15";
        
        Node = "76.37801514481306 4.2535768088890284 0.01 0.15";
        
        Node = "76.81258715487938 4.014921908235427 0.01 0.15";
        
        Node = "77.22508772086914 3.739872318893445 0.01 0.15";
        
        Node = "78.13108772086915 3.077872318893445 0.01 0.15";
        
        Node = "78.53409932241512 2.754788952625682 0.01 0.15";
        
        Node = "78.90663056207532 2.39698776758462 0.01 0.15";
        
        Node = "79.68063056207532 1.58398776758462 0.01 0.15";
        
        Node = "79.99306347510623 1.2276074463137783 0.01 0.15";
        
        Node = "80.27522148879211 0.8468081371666534 0.01 0.15";
        
        Node = "80.90622148879211 -0.08219186283334645 0.01 0.15";
        
        Node = "81.32279319067996 -0.8020965776001412 0.01 0.15";
        
        Node = "81.81379319067996 -1.812096577600141 0.01 0.15";
        
        Node = "82.0739829284209 -2.4383965088798973 0.01 0.15";
        
        Node = "82.4429829284209 -3.498396508879898 0.01 0.15";
        
        Node = "82.58423741436998 -3.967334557725361 0.01 0.15";
        
        Node = "82.86223741436997 -5.055334557725361 0.01 0.15";
        
        Node = "82.95806182135199 -5.503959559676675 0.01 0.15";
        
        Node = "83.14906182135199 -6.6119595596766745 0.01 0.15";
        
        Node = "83.19767856774016 -6.955257936917786 0.01 0.15";
        
        Node = "83.32167856774015 -8.071257936917785 0.01 0.15";
        
        Node = "83.34445826393207 -8.3286057881079 0.01 0.15";
        
        Node = "83.41845826393208 -9.4496057881079 0.01 0.15";
        
        Node = "83.42956952223665 -9.701469957207598 0.01 0.15";
        
        Node = "83.45456952223664 -10.824469957207597 0.01 0.15";
        
        Node = "83.45555128774285 -11.024989063248775 0.01 0.15";
        
        Node = "83.44155128774285 -12.147989063248776 0.01 0.15";
        
        Node = "83.43716126264908 -12.312355670598304 0.01 0.15";
        
        Node = "83.39116126264908 -13.435355670598303 0.01 0.15";
        
        Node = "83.38311814876592 -13.584511918962871 0.01 0.15";
        
        Node = "83.30811814876593 -14.705511918962872 0.01 0.15";
        
        Node = "83.29986437936944 -14.813629115656378 0.01 0.15";
        
        Node = "83.20386437936943 -15.932629115656377 0.01 0.15";
        
        Node = "83.19141196305799 -16.060943462426202 0.01 0.15";
        
        Node = "83.07041196305798 -17.177943462426203 0.01 0.15";
        
        Node = "83.05700013532659 -17.29128188451672 0.01 0.15";
        
        Node = "82.9140001353266 -18.40528188451672 0.01 0.15";
        
        Node = "82.90580071945774 -18.466558051676515 0.01 0.15";
        
        Node = "82.75080071945774 -19.579558051676514 0.01 0.15";
        
        Node = "82.74567521153423 -19.615533618946568 0.01 0.15";
        
        Node = "82.58367521153423 -20.727533618946566 0.01 0.15";
        
        Node = "82.57589220659396 -20.779311224805536 0.01 0.15";
        
        Node = "82.40906962497934 -21.855898815458033 0.01 0.15";
        
        Node = "82.25485545944481 -22.934428073787554 0.01 0.15";
        
        Node = "82.2433278110565 -23.011348683895307 0.01 0.15";
        
        Node = "82.0725357055582 -24.10088452931557 0.01 0.15";
        
        Node = "81.90959671570512 -25.191397889115315 0.01 0.15";
        
        Node = "81.90808554128951 -25.201451278970833 0.01 0.15";
        
        Node = "81.74236677681799 -26.297365251160482 0.01 0.15";
        
        Node = "81.58256826658135 -27.393267380005593 0.01 0.15";
        
        Node = "81.57489220659396 -27.44431122480553 0.01 0.15";
        
        Node = "81.4080696249794 -28.520898815457617 0.01 0.15";
        
        Node = "81.25385545944484 -29.599428073787482 0.01 0.15";
        
        Node = "81.2423278110565 -29.676348683895377 0.01 0.15";
        
        Node = "81.07395659387379 -30.750440931440234 0.01 0.15";
        
        Node = "80.91913296179906 -31.82646517435956 0.01 0.15";
        
        Node = "80.90989220659397 -31.88831122480554 0.01 0.15";
        
        Node = "80.74073343064116 -32.979975418454536 0.01 0.15";
        
        Node = "80.57845677417056 -34.0736217335775 0.01 0.15";
        
        Node = "80.57443978195886 -34.10026555219191 0.01 0.15";
        
        Node = "80.40801871648706 -35.18689721497837 0.01 0.15";
        
        Node = "80.25040621082707 -36.27550035966112 0.01 0.15";
        
        Node = "80.24189220659396 -36.33231122480554 0.01 0.15";
        
        Node = "80.0742904882621 -37.41392696520305 0.01 0.15";
        
        Node = "79.91740621082707 -38.497500359661124 0.01 0.15";
        
        Node = "79.90889220659396 -38.55431122480554 0.01 0.15";
        
        Node = "79.73689220659396 -39.66431122480554 0.01 0.15";
        
    };
    
    new DecalRoad(road_0_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "68.32310779340604 -37.895688775194465 0.01 0.15";
        
        Node = "68.4907095117379 -36.81407303479695 0.01 0.15";
        
        Node = "68.64759378917293 -35.73049964033888 0.01 0.15";
        
        Node = "68.65610779340604 -35.673688775194464 0.01 0.15";
        
        Node = "68.8237095117379 -34.59207303479695 0.01 0.15";
        
        Node = "68.98059378917293 -33.508499640338876 0.01 0.15";
        
        Node = "68.98756021804112 -33.46173444780809 0.01 0.15";
        
        Node = "69.15552064324214 -32.36505167149566 0.01 0.15";
        
        Node = "69.31854322582944 -31.2663782664225 0.01 0.15";
        
        Node = "69.32410779340604 -31.229688775194457 0.01 0.15";
        
        Node = "69.49131999369332 -30.150586784968393 0.01 0.15";
        
        Node = "69.64686703820094 -29.069534825640442 0.01 0.15";
        
        Node = "69.65767218894351 -28.997651316104623 0.01 0.15";
        
        Node = "69.82564936083917 -27.926072805735807 0.01 0.15";
        
        Node = "69.97914454055517 -26.85257192621252 0.01 0.15";
        
        Node = "69.98910779340603 -26.78568877519447 0.01 0.15";
        
        Node = "70.15715570295139 -25.701193544988943 0.01 0.15";
        
        Node = "70.31543173341865 -24.615732619994407 0.01 0.15";
        
        Node = "70.31991445871049 -24.58554872102917 0.01 0.15";
        
        Node = "70.48715444699383 -23.479574750893406 0.01 0.15";
        
        Node = "70.65240328429488 -22.373602110884686 0.01 0.15";
        
        Node = "70.6586721889435 -22.332651316104695 0.01 0.15";
        
        Node = "70.82664936083924 -21.261072805735292 0.01 0.15";
        
        Node = "70.98014454055519 -20.187571926212446 0.01 0.15";
        
        Node = "70.99010779340604 -20.120688775194463 0.01 0.15";
        
        Node = "71.15809892873979 -19.036559936703362 0.01 0.15";
        
        Node = "71.31370544068008 -17.968446101656497 0.01 0.15";
        
        Node = "71.46193557741303 -16.904058087567606 0.01 0.15";
        
        Node = "71.59373395706902 -15.877321060037636 0.01 0.15";
        
        Node = "71.7016456836891 -14.88114421181778 0.01 0.15";
        
        Node = "71.78750120962304 -13.880390737650153 0.01 0.15";
        
        Node = "71.85389571540776 -12.888014191187743 0.01 0.15";
        
        Node = "71.89347364882796 -11.92179638182075 0.01 0.15";
        
        Node = "71.90519870952122 -10.98127901335518 0.01 0.15";
        
        Node = "71.88523665273384 -10.084583422466235 0.01 0.15";
        
        Node = "71.82805264447286 -9.218322972999495 0.01 0.15";
        
        Node = "71.73747468112231 -8.40312130284442 0.01 0.15";
        
        Node = "71.61493406740321 -7.692257428494866 0.01 0.15";
        
        Node = "71.45443876930662 -7.064131945296707 0.01 0.15";
        
        Node = "71.27769252593833 -6.55640560933359 0.01 0.15";
        
        Node = "71.11750419193837 -6.226893965056676 0.01 0.15";
        
        Node = "70.98774792652343 -6.035858195531363 0.01 0.15";
        
        Node = "70.8985992919684 -5.942217575514247 0.01 0.15";
        
        Node = "70.81233630355443 -5.879186561904926 0.01 0.15";
        
        Node = "70.65367181153943 -5.800720904483405 0.01 0.15";
        
        Node = "70.29082417071095 -5.686886350498001 0.01 0.15";
        
        Node = "69.74340388416294 -5.574416364352683 0.01 0.15";
        
        Node = "69.09326571695733 -5.503407540360665 0.01 0.15";
        
        Node = "68.27495729190935 -5.470587683741094 0.01 0.15";
        
        Node = "67.3165222285126 -5.467173845581177 0.01 0.15";
        
        Node = "66.30055168937008 -5.484347724801557 0.01 0.15";
        
        Node = "65.22747615718613 -5.520690746390675 0.01 0.15";
        
        Node = "64.09916840468654 -5.557868066567268 0.01 0.15";
        
        Node = "64.0580820894842 -5.559075396233364 0.01 0.15";
        
        Node = "62.93508208948421 -5.588075396233365 0.01 0.15";
        
        Node = "61.80694457862123 -5.61620577827307 0.01 0.15";
        
        Node = "61.791530042792445 -5.616569522236635 0.01 0.15";
        
        Node = "60.66853004279245 -5.641569522236636 0.01 0.15";
        
        Node = "60.622271258382995 -5.642413947756437 0.01 0.15";
        
        Node = "59.499271258383 -5.658413947756437 0.01 0.15";
        
        Node = "59.48892502597866 -5.658552085715218 0.01 0.15";
        
        Node = "58.36492502597866 -5.672552085715218 0.01 0.15";
        
        Node = "57.23684770277929 -5.685613093933925 0.01 0.15";
        
        Node = "56.10870618333383 -5.697670323658172 0.01 0.15";
        
        Node = "56.098376970278295 -5.69777145928088 0.01 0.15";
        
        Node = "54.979541622031164 -5.707725510421869 0.01 0.15";
        
        Node = "53.86170618333383 -5.719670323658172 0.01 0.15";
        
        Node = "53.82568924760799 -5.719942862276418 0.01 0.15";
        
        Node = "52.701689247607995 -5.724942862276418 0.01 0.15";
        
        Node = "52.68628493471338 -5.724990841561392 0.01 0.15";
        
        Node = "51.583854216979766 -5.7269542088236065 0.01 0.15";
        
        Node = "50.481422716403436 -5.736771052105675 0.01 0.15";
        
        Node = "50.471102161785154 -5.736853730814018 0.01 0.15";
        
        Node = "49.34710216178515 -5.744853730814018 0.01 0.15";
        
        Node = "49.306 -5.745 0.01 0.15";
        
        Node = "48.19585612506703 -5.745 0.01 0.15";
        
        Node = "47.088269548364295 -5.7499313738944915 0.01 0.15";
        
        Node = "45.96682696292997 -5.755917722215315 0.01 0.15";
        
        Node = "45.930857526526815 -5.7559977103862625 0.01 0.15";
        
        Node = "44.80785981567957 -5.754997712424689 0.01 0.15";
        
        Node = "43.69414475289302 -5.754006862724701 0.01 0.15";
        
        Node = "42.589140933374956 -5.756958787442915 0.01 0.15";
        
        Node = "41.47385441269254 -5.762917575621094 0.01 0.15";
        
        Node = "41.45841364616608 -5.762979430224135 0.01 0.15";
        
        Node = "40.334413646166084 -5.765979430224134 0.01 0.15";
        
        Node = "40.31385752652682 -5.765997710386262 0.01 0.15";
        
        Node = "39.193428762754266 -5.765000000000001 0.01 0.15";
        
        Node = "36.949 -5.765000000000001 0.01 0.15";
        
        Node = "35.825997712423536 -5.764002287577622 0.01 0.15";
        
        Node = "34.71742505946116 -5.764988562179902 0.01 0.15";
        
        Node = "33.604712122709145 -5.769942760473544 0.01 0.15";
        
        Node = "32.48068924760799 -5.774942862276418 0.01 0.15";
        
        Node = "32.460142473473184 -5.774997710386263 0.01 0.15";
        
        Node = "31.337142473473186 -5.775997710386263 0.01 0.15";
        
        Node = "31.326857526526815 -5.775997710386263 0.01 0.15";
        
        Node = "30.20642876275427 -5.775 0.01 0.15";
        
        Node = "1.0 -5.775 0.01 0.15";
        
    };
    
    new DecalRoad(road_0_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "1.0 2.0 0.01 0.3";
        
        Node = "30.209 2.0 0.01 0.3";
        
        Node = "31.332 1.9990007929401368 0.01 0.3";
        
        Node = "32.449661156943115 1.9999960388501483 0.01 0.3";
        
        Node = "33.57009932987799 2.0049801944237022 0.01 0.3";
        
        Node = "34.69309536875873 2.009980176787374 0.01 0.3";
        
        Node = "34.7002206412736 2.0099992084704743 0.01 0.3";
        
        Node = "35.824220641273605 2.010999208470474 0.01 0.3";
        
        Node = "35.82778094319418 2.0109992070601774 0.01 0.3";
        
        Node = "36.94989047177379 2.01 0.01 0.3";
        
        Node = "39.196 2.01 0.01 0.3";
        
        Node = "40.31722143632428 2.0090023767012015 0.01 0.3";
        
        Node = "41.43498820059716 2.01198573995104 0.01 0.3";
        
        Node = "42.55531448911081 2.0179714547605516 0.01 0.3";
        
        Node = "42.56065718736356 2.0179928635755506 0.01 0.3";
        
        Node = "43.68365718736356 2.0209928635755507 0.01 0.3";
        
        Node = "43.690779358726395 2.0209992084704744 0.01 0.3";
        
        Node = "44.8147793587264 2.019999208470474 0.01 0.3";
        
        Node = "45.931552426223206 2.019004753379831 0.01 0.3";
        
        Node = "47.04932399552209 2.0249715055291135 0.01 0.3";
        
        Node = "48.174095368758735 2.029980176787374 0.01 0.3";
        
        Node = "48.183 2.03 0.01 0.3";
        
        Node = "49.29888265241395 2.03 0.01 0.3";
        
        Node = "50.413978363278105 2.037936624276613 0.01 0.3";
        
        Node = "51.53519126704643 2.047920710685948 0.01 0.3";
        
        Node = "51.549438117848176 2.047996828246369 0.01 0.3";
        
        Node = "52.66977069327937 2.049992077712854 0.01 0.3";
        
        Node = "53.78486644487602 2.0549524680669315 0.01 0.3";
        
        Node = "54.901629893217724 2.0668858263751244 0.01 0.3";
        
        Node = "54.90520710986033 2.066920851699006 0.01 0.3";
        
        Node = "56.027418485876886 2.0769049386742426 0.01 0.3";
        
        Node = "57.14773958240804 2.0888763128134893 0.01 0.3";
        
        Node = "58.26897008561437 2.101855828879101 0.01 0.3";
        
        Node = "59.39029932327057 2.115822563155958 0.01 0.3";
        
        Node = "60.503497024456166 2.131682904401701 0.01 0.3";
        
        Node = "61.61581816329001 2.156445173743505 0.01 0.3";
        
        Node = "62.73525944136472 2.1843564433660267 0.01 0.3";
        
        Node = "63.85025458167387 2.2131497283784625 0.01 0.3";
        
        Node = "64.96522170676957 2.249885065536558 0.01 0.3";
        
        Node = "66.08630262954593 2.2878539381439564 0.01 0.3";
        
        Node = "66.12019699994752 2.28871431889344 0.01 0.3";
        
        Node = "67.24419699994753 2.3077143188934395 0.01 0.3";
        
        Node = "67.28512373041167 2.3079873130760156 0.01 0.3";
        
        Node = "68.40812373041166 2.3039873130760156 0.01 0.3";
        
        Node = "68.48114946672852 2.302393370431141 0.01 0.3";
        
        Node = "69.60314946672852 2.257393370431141 0.01 0.3";
        
        Node = "69.74015087189665 2.2471764254800233 0.01 0.3";
        
        Node = "70.85715087189665 2.1251764254800234 0.01 0.3";
        
        Node = "71.04250177928604 2.0960794567019416 0.01 0.3";
        
        Node = "72.14250177928604 1.8700794567019416 0.01 0.3";
        
        Node = "72.33868014907463 1.8192929751754479 0.01 0.3";
        
        Node = "73.40968014907465 1.4832929751754478 0.01 0.3";
        
        Node = "73.55587630382163 1.4311140299036134 0.01 0.3";
        
        Node = "73.697585331537 1.3677538732083214 0.01 0.3";
        
        Node = "74.70458533153699 0.8697538732083214 0.01 0.3";
        
        Node = "74.85508646056428 0.7871028253629195 0.01 0.3";
        
        Node = "74.99794379943519 0.6918475563267341 0.01 0.3";
        
        Node = "75.9039437994352 0.029847556326734193 0.01 0.3";
        
        Node = "76.04351491685372 -0.08204278696945888 0.01 0.3";
        
        Node = "76.17253006478799 -0.20595661728671177 0.01 0.3";
        
        Node = "76.94653006478799 -1.018956617286712 0.01 0.3";
        
        Node = "77.05473193943074 -1.1423783735709863 0.01 0.3";
        
        Node = "77.15244900044749 -1.2742569221933668 0.01 0.3";
        
        Node = "77.78344900044749 -2.2032569221933667 0.01 0.3";
        
        Node = "77.92771625651254 -2.4525745723290533 0.01 0.3";
        
        Node = "78.41871625651254 -3.462574572329053 0.01 0.3";
        
        Node = "78.50882525659598 -3.6794749814302676 0.01 0.3";
        
        Node = "78.87782525659598 -4.739474981430268 0.01 0.3";
        
        Node = "78.92674455908917 -4.901877768909216 0.01 0.3";
        
        Node = "79.20474455908916 -5.989877768909216 0.01 0.3";
        
        Node = "79.23793050090111 -6.145245734952962 0.01 0.3";
        
        Node = "79.42893050090112 -7.25324573495296 0.01 0.3";
        
        Node = "79.44576746934723 -7.372136947850315 0.01 0.3";
        
        Node = "79.56976746934723 -8.488136947850315 0.01 0.3";
        
        Node = "79.5776565416215 -8.577261744799273 0.01 0.3";
        
        Node = "79.6516565416215 -9.698261744799273 0.01 0.3";
        
        Node = "79.6555045964456 -9.785487431067567 0.01 0.3";
        
        Node = "79.68050459644559 -10.908487431067567 0.01 0.3";
        
        Node = "79.6808446018157 -10.977931277315593 0.01 0.3";
        
        Node = "79.66684460181571 -12.100931277315594 0.01 0.3";
        
        Node = "79.66532424680487 -12.157854777696382 0.01 0.3";
        
        Node = "79.61932424680487 -13.280854777696382 0.01 0.3";
        
        Node = "79.61653875281937 -13.332510621285843 0.01 0.3";
        
        Node = "79.54153875281938 -14.453510621285844 0.01 0.3";
        
        Node = "79.53868030454353 -14.490953806287923 0.01 0.3";
        
        Node = "79.44268030454353 -15.609953806287923 0.01 0.3";
        
        Node = "79.43836777941402 -15.654391675299118 0.01 0.3";
        
        Node = "79.31736777941401 -16.771391675299117 0.01 0.3";
        
        Node = "79.3127229905893 -16.81064307688891 0.01 0.3";
        
        Node = "79.1697229905893 -17.92464307688891 0.01 0.3";
        
        Node = "79.16688336604598 -17.94586426032087 0.01 0.3";
        
        Node = "79.01188336604598 -19.05886426032087 0.01 0.3";
        
        Node = "79.01010829836683 -19.071323331236908 0.01 0.3";
        
        Node = "78.84810829836682 -20.183323331236906 0.01 0.3";
        
        Node = "78.8454128854005 -20.201254969629623 0.01 0.3";
        
        Node = "78.67520593072871 -21.29968357245344 0.01 0.3";
        
        Node = "78.51786336257828 -22.40009197360608 0.01 0.3";
        
        Node = "78.51387110339618 -22.42673114593777 0.01 0.3";
        
        Node = "78.34098206253104 -23.529643992836135 0.01 0.3";
        
        Node = "78.17604215262514 -24.63354905250747 0.01 0.3";
        
        Node = "78.17551880217819 -24.637030745963926 0.01 0.3";
        
        Node = "78.00830884045635 -25.74280614758873 0.01 0.3";
        
        Node = "77.84707126115372 -26.848577447620983 0.01 0.3";
        
        Node = "77.8444128854005 -26.866254969629622 0.01 0.3";
        
        Node = "77.67420593072885 -27.96468357245254 0.01 0.3";
        
        Node = "77.5168633625783 -29.065091973606055 0.01 0.3";
        
        Node = "77.5128711033962 -29.091731145937793 0.01 0.3";
        
        Node = "77.34082046541077 -30.18929556067231 0.01 0.3";
        
        Node = "77.1826131469434 -31.288836424020626 0.01 0.3";
        
        Node = "77.17941288540051 -31.310254969629625 0.01 0.3";
        
        Node = "77.00839685909634 -32.413904906825145 0.01 0.3";
        
        Node = "76.84434000837075 -33.51954865232121 0.01 0.3";
        
        Node = "76.84294884223684 -33.52877594881105 0.01 0.3";
        
        Node = "76.67418830008212 -34.630683018174224 0.01 0.3";
        
        Node = "76.51436145829508 -35.73458021113805 0.01 0.3";
        
        Node = "76.5114128854005 -35.75425496962962 0.01 0.3";
        
        Node = "76.34093609983103 -36.854424923014065 0.01 0.3";
        
        Node = "76.18136145829509 -37.95658021113805 0.01 0.3";
        
        Node = "76.1784128854005 -37.97625496962962 0.01 0.3";
        
        Node = "76.00641288540051 -39.08625496962962 0.01 0.3";
        
    };
    
    new DecalRoad(road_0_separator_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "72.0535871145995 -38.47374503037038 0.01 0.15";
        
        Node = "72.22406390016897 -37.37357507698594 0.01 0.15";
        
        Node = "72.38363854170491 -36.27141978886195 0.01 0.15";
        
        Node = "72.3865871145995 -36.25174503037038 0.01 0.15";
        
        Node = "72.55706390016897 -35.151575076985935 0.01 0.15";
        
        Node = "72.71663854170491 -34.04941978886195 0.01 0.15";
        
        Node = "72.71905115776316 -34.033224051188945 0.01 0.15";
        
        Node = "72.88834481151274 -32.92783607670645 0.01 0.15";
        
        Node = "73.05265999162926 -31.820451347678787 0.01 0.15";
        
        Node = "73.0545871145995 -31.807745030370373 0.01 0.15";
        
        Node = "73.22492900214495 -30.708445639815462 0.01 0.15";
        
        Node = "73.3833868530566 -29.607163575979374 0.01 0.15";
        
        Node = "73.38712889660381 -29.582268854062207 0.01 0.15";
        
        Node = "73.55904306868885 -28.48557499765773 0.01 0.15";
        
        Node = "73.7161366374217 -27.386908026393947 0.01 0.15";
        
        Node = "73.71958711459949 -27.363745030370378 0.01 0.15";
        
        Node = "73.89021842526446 -26.262577851078948 0.01 0.15";
        
        Node = "74.05092873884628 -25.160422552379018 0.01 0.15";
        
        Node = "74.0524811978218 -25.149969254036076 0.01 0.15";
        
        Node = "74.22021799030179 -24.040709870433272 0.01 0.15";
        
        Node = "74.38595784737485 -22.931450947492532 0.01 0.15";
        
        Node = "74.38812889660382 -22.917268854062232 0.01 0.15";
        
        Node = "74.56004306868891 -21.82057499765724 0.01 0.15";
        
        Node = "74.71713663742172 -20.72190802639392 0.01 0.15";
        
        Node = "74.7205871145995 -20.698745030370375 0.01 0.15";
        
        Node = "74.89119876320005 -19.597704739983044 0.01 0.15";
        
        Node = "75.05098456820068 -18.50090341183071 0.01 0.15";
        
        Node = "75.20364002680972 -17.404738731625105 0.01 0.15";
        
        Node = "75.34276067777284 -16.320959674471737 0.01 0.15";
        
        Node = "75.45922794240315 -15.245803190239968 0.01 0.15";
        
        Node = "75.55171470463134 -14.167754368017594 0.01 0.15";
        
        Node = "75.62373444689449 -13.091299286990983 0.01 0.15";
        
        Node = "75.66751035457244 -12.022596149548674 0.01 0.15";
        
        Node = "75.68072249680388 -10.962793597698658 0.01 0.15";
        
        Node = "75.65746723904203 -9.918167419035985 0.01 0.15";
        
        Node = "75.58929095912478 -8.88538890839788 0.01 0.15";
        
        Node = "75.47686569043198 -7.873561490162618 0.01 0.15";
        
        Node = "75.30957456879766 -6.903097810734199 0.01 0.15";
        
        Node = "75.0722688378551 -5.9743617126568385 0.01 0.15";
        
        Node = "74.76985022543319 -5.105625319249726 0.01 0.15";
        
        Node = "74.39341703616915 -4.33129228227074 0.01 0.15";
        
        Node = "73.93600793992152 -3.6578643101407233 0.01 0.15";
        
        Node = "73.39918590198039 -3.0939930997451772 0.01 0.15";
        
        Node = "72.7770775077245 -2.6394282465471717 0.01 0.15";
        
        Node = "72.06387335464568 -2.286721525362214 0.01 0.15";
        
        Node = "71.23812092492156 -2.0276619395664133 0.01 0.15";
        
        Node = "70.32949052265381 -1.8409796932823124 0.01 0.15";
        
        Node = "69.37417427427094 -1.736638975016681 0.01 0.15";
        
        Node = "68.35734884568288 -1.6958572064904218 0.01 0.15";
        
        Node = "67.29134103151952 -1.6920602062618793 0.01 0.15";
        
        Node = "66.20475383181646 -1.710427783481059 0.01 0.15";
        
        Node = "65.09969737045407 -1.7478539381439564 0.01 0.15";
        
        Node = "63.97485918777023 -1.7849153477289241 0.01 0.15";
        
        Node = "63.96063016086033 -1.7853334705570094 0.01 0.15";
        
        Node = "62.837630160860336 -1.8143334705570093 0.01 0.15";
        
        Node = "61.712850936319036 -1.842378624510154 0.01 0.15";
        
        Node = "61.707512568932444 -1.8425045964455877 0.01 0.15";
        
        Node = "60.584512568932446 -1.8675045964455879 0.01 0.15";
        
        Node = "60.56849221069541 -1.8677970381840474 0.01 0.15";
        
        Node = "59.44549221069541 -1.8837970381840472 0.01 0.15";
        
        Node = "59.44190909990603 -1.8838448781697723 0.01 0.15";
        
        Node = "58.317909099906025 -1.8978448781697723 0.01 0.15";
        
        Node = "57.19315071957725 -1.9108660065572034 0.01 0.15";
        
        Node = "56.068370106782275 -1.9228858263751243 0.01 0.15";
        
        Node = "56.06479289013967 -1.9229208516990062 0.01 0.15";
        
        Node = "54.94258151412324 -1.9329049386742414 0.01 0.15";
        
        Node = "53.821370106782275 -1.9448858263751243 0.01 0.15";
        
        Node = "53.808896709128305 -1.944980212043781 0.01 0.15";
        
        Node = "52.68489670912831 -1.9499802120437808 0.01 0.15";
        
        Node = "52.67956188215182 -1.9499968282463693 0.01 0.15";
        
        Node = "51.563685443109854 -1.951984141583933 0.01 0.15";
        
        Node = "50.44780873295357 -1.961920710685948 0.01 0.15";
        
        Node = "50.44423451490395 -1.9619493440048548 0.01 0.15";
        
        Node = "49.320234514903945 -1.9699493440048548 0.01 0.15";
        
        Node = "49.306 -1.97 0.01 0.15";
        
        Node = "48.1874523376855 -1.97 0.01 0.15";
        
        Node = "47.069790319780076 -1.9749762333833725 0.01 0.15";
        
        Node = "45.946676004477915 -1.9809715055291135 0.01 0.15";
        
        Node = "45.93421905680582 -1.9809992070601776 0.01 0.15";
        
        Node = "44.81121984940311 -1.9799992077659632 0.01 0.15";
        
        Node = "43.69078173260359 -1.979002376701195 0.01 0.15";
        
        Node = "42.57401417606072 -1.9819857272529569 0.01 0.15";
        
        Node = "41.45368551088919 -1.9879714547605518 0.01 0.15";
        
        Node = "41.44833805927829 -1.9879928762680985 0.01 0.15";
        
        Node = "40.3243380592783 -1.9909928762680986 0.01 0.15";
        
        Node = "40.317219056805826 -1.9909992070601776 0.01 0.15";
        
        Node = "39.19510952822645 -1.99 0.01 0.15";
        
        Node = "36.949 -1.99 0.01 0.15";
        
        Node = "35.82599920776565 -1.9890007922346744 0.01 0.15";
        
        Node = "34.70734201193454 -1.9899960388501823 0.01 0.15";
        
        Node = "33.587904631241265 -1.9949801767873743 0.01 0.15";
        
        Node = "32.463896709128306 -1.9999802120437808 0.01 0.15";
        
        Node = "32.456780943194175 -1.9999992070601775 0.01 0.15";
        
        Node = "31.333780943194178 -2.0009992070601776 0.01 0.15";
        
        Node = "31.330219056805824 -2.0009992070601776 0.01 0.15";
        
        Node = "30.20810952822646 -2.0 0.01 0.15";
        
        Node = "1.0 -2.0 0.01 0.15";
        
    };
    
    new DecalRoad(road_1) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "119.52 -59.54 0.01 14.999999999999996";
        
        Node = "119.066 -59.331 0.01 15.0";
        
        Node = "118.611 -59.122 0.01 14.999999999999993";
        
        Node = "118.157 -58.914 0.01 14.999999999999995";
        
        Node = "117.702 -58.707 0.01 14.999999999999993";
        
        Node = "117.246 -58.5 0.01 14.999999999999998";
        
        Node = "116.791 -58.293 0.01 14.999999999999996";
        
        Node = "116.336 -58.086 0.01 14.999999999999996";
        
        Node = "115.881 -57.879 0.01 14.999999999999996";
        
        Node = "115.426 -57.671 0.01 14.999999999999998";
        
        Node = "114.972 -57.463 0.01 14.999999999999998";
        
        Node = "114.517 -57.254 0.01 14.999999999999998";
        
        Node = "114.062 -57.046 0.01 15.000000000000002";
        
        Node = "113.607 -56.839 0.01 15.0";
        
        Node = "113.152 -56.632 0.01 15.000000000000005";
        
        Node = "112.697 -56.425 0.01 15.000000000000002";
        
        Node = "112.242 -56.218 0.01 15.000000000000002";
        
        Node = "111.787 -56.01 0.01 15.000000000000004";
        
        Node = "111.332 -55.802 0.01 15.000000000000002";
        
        Node = "110.878 -55.594 0.01 15.000000000000002";
        
        Node = "110.423 -55.385 0.01 15.000000000000005";
        
        Node = "109.968 -55.177 0.01 15.000000000000002";
        
        Node = "109.513 -54.97 0.01 15.000000000000005";
        
        Node = "109.058 -54.763 0.01 14.999999999999998";
        
        Node = "108.603 -54.556 0.01 15.000000000000002";
        
        Node = "108.148 -54.349 0.01 15.0";
        
        Node = "107.693 -54.141 0.01 15.000000000000002";
        
        Node = "107.239 -53.933 0.01 15.000000000000005";
        
        Node = "106.784 -53.724 0.01 15.000000000000004";
        
        Node = "106.329 -53.516 0.01 15.000000000000004";
        
        Node = "105.874 -53.309 0.01 15.0";
        
        Node = "105.419 -53.102 0.01 15.000000000000002";
        
        Node = "104.964 -52.895 0.01 15.000000000000002";
        
        Node = "104.509 -52.688 0.01 14.999999999999998";
        
        Node = "104.054 -52.48 0.01 15.0";
        
        Node = "103.599 -52.272 0.01 15.000000000000002";
        
        Node = "103.145 -52.063 0.01 15.000000000000004";
        
        Node = "102.69 -51.855 0.01 15.000000000000005";
        
        Node = "102.235 -51.648 0.01 15.000000000000004";
        
        Node = "101.78 -51.441 0.01 15.000000000000005";
        
        Node = "101.325 -51.234 0.01 15.000000000000005";
        
        Node = "100.87 -51.027 0.01 15.000000000000002";
        
        Node = "100.415 -50.819 0.01 15.000000000000002";
        
        Node = "99.96 -50.611 0.01 15.0";
        
        Node = "99.506 -50.403 0.01 15.000000000000004";
        
        Node = "99.051 -50.194 0.01 15.000000000000002";
        
        Node = "98.596 -49.986 0.01 15.000000000000002";
        
        Node = "98.141 -49.779 0.01 15.000000000000002";
        
        Node = "97.686 -49.572 0.01 14.999999999999998";
        
        Node = "97.231 -49.365 0.01 15.0";
        
        Node = "96.776 -49.158 0.01 14.999999999999998";
        
        Node = "96.321 -48.95 0.01 15.0";
        
        Node = "95.867 -48.742 0.01 14.999999999999996";
        
        Node = "95.412 -48.533 0.01 15.0";
        
        Node = "94.957 -48.325 0.01 14.999999999999998";
        
        Node = "94.502 -48.118 0.01 14.999999999999998";
        
        Node = "94.047 -47.911 0.01 15.000000000000002";
        
        Node = "93.592 -47.704 0.01 14.999999999999998";
        
        Node = "93.137 -47.497 0.01 15.0";
        
        Node = "92.682 -47.289 0.01 15.000000000000004";
        
        Node = "92.227 -47.081 0.01 15.000000000000004";
        
        Node = "91.773 -46.872 0.01 15.000000000000007";
        
        Node = "91.318 -46.664 0.01 15.000000000000005";
        
        Node = "90.863 -46.457 0.01 15.000000000000004";
        
        Node = "90.408 -46.25 0.01 15.000000000000004";
        
        Node = "89.953 -46.043 0.01 15.000000000000004";
        
        Node = "89.498 -45.836 0.01 15.000000000000002";
        
        Node = "89.043 -45.628 0.01 14.999999999999998";
        
        Node = "88.588 -45.42 0.01 14.999999999999995";
        
        Node = "88.134 -45.211 0.01 14.999999999999998";
        
        Node = "87.679 -45.003 0.01 15.0";
        
        Node = "87.224 -44.796 0.01 15.000000000000002";
        
        Node = "86.769 -44.589 0.01 14.999999999999998";
        
        Node = "86.313 -44.384 0.01 15.000000000000004";
        
        Node = "85.857 -44.178 0.01 15.0";
        
        Node = "85.402 -43.971 0.01 15.000000000000002";
        
        Node = "84.948 -43.762 0.01 15.0";
        
        Node = "84.494 -43.553 0.01 15.0";
        
        Node = "84.04 -43.343 0.01 14.999999999999998";
        
        Node = "83.585 -43.134 0.01 15.000000000000002";
        
        Node = "83.13 -42.927 0.01 15.000000000000002";
        
        Node = "82.674 -42.722 0.01 14.999999999999996";
        
        Node = "82.219 -42.516 0.01 14.999999999999998";
        
        Node = "81.763 -42.31 0.01 14.999999999999998";
        
        Node = "81.308 -42.102 0.01 14.999999999999996";
        
        Node = "80.854 -41.892 0.01 15.0";
        
        Node = "80.4 -41.683 0.01 15.000000000000002";
        
        Node = "79.946 -41.474 0.01 15.000000000000002";
        
        Node = "79.491 -41.266 0.01 15.000000000000004";
        
        Node = "79.036 -41.06 0.01 15.000000000000002";
        
        Node = "78.58 -40.854 0.01 15.000000000000005";
        
        Node = "78.124 -40.648 0.01 15.000000000000005";
        
        Node = "77.669 -40.441 0.01 15.000000000000002";
        
        Node = "77.214 -40.233 0.01 15.000000000000004";
        
        Node = "76.76 -40.023 0.01 15.000000000000002";
        
        Node = "76.306 -39.814 0.01 15.000000000000005";
        
        Node = "75.852 -39.604 0.01 15.000000000000004";
        
        Node = "75.398 -39.396 0.01 15.000000000000004";
        
        Node = "74.943 -39.188 0.01 15.000000000000004";
        
        Node = "74.487 -38.983 0.01 15.000000000000005";
        
        Node = "74.03 -38.78 0.01 15.0";
        
    };
    
    new DecalRoad(road_1_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "116.47781462190382 -66.14838354859172 0.01 0.15";
        
        Node = "116.02657415517734 -65.9406539064203 0.01 0.15";
        
        Node = "115.57758677490295 -65.73441574712942 0.01 0.15";
        
        Node = "115.13561018584252 -65.53192427020306 0.01 0.15";
        
        Node = "114.69212859771706 -65.33016451472619 0.01 0.15";
        
        Node = "114.23886749769541 -65.12440783116374 0.01 0.15";
        
        Node = "112.86839072678265 -64.5009189338835 0.01 0.15";
        
        Node = "112.8563477440518 -64.4954268098867 0.01 0.15";
        
        Node = "112.4013477440518 -64.2874268098867 0.01 0.15";
        
        Node = "111.9418402694542 -64.07690633494146 0.01 0.15";
        
        Node = "111.48633874651078 -63.86767983958224 0.01 0.15";
        
        Node = "111.04336673730838 -63.66517834966115 0.01 0.15";
        
        Node = "109.68439072678265 -63.046918933883504 0.01 0.15";
        
        Node = "109.22939072678274 -62.83991893388355 0.01 0.15";
        
        Node = "109.21734774405172 -62.834426809886665 0.01 0.15";
        
        Node = "108.76234774405172 -62.62642680988665 0.01 0.15";
        
        Node = "108.30734774405188 -62.41842680988674 0.01 0.15";
        
        Node = "107.84784026945414 -62.20790633494141 0.01 0.15";
        
        Node = "107.39233874651079 -61.99867983958224 0.01 0.15";
        
        Node = "106.94936673730838 -61.79617834966115 0.01 0.15";
        
        Node = "106.04539072678266 -61.3849189338835 0.01 0.15";
        
        Node = "105.59039072678272 -61.17791893388353 0.01 0.15";
        
        Node = "105.13539072678265 -60.970918933883496 0.01 0.15";
        
        Node = "105.1233477440518 -60.96542680988671 0.01 0.15";
        
        Node = "104.6683477440518 -60.75742680988671 0.01 0.15";
        
        Node = "104.20884026945414 -60.54690633494141 0.01 0.15";
        
        Node = "103.75333874650926 -60.33767983958154 0.01 0.15";
        
        Node = "103.31036673730998 -60.13517834966187 0.01 0.15";
        
        Node = "102.40639072678265 -59.723918933883496 0.01 0.15";
        
        Node = "101.95139072678273 -59.516918933883545 0.01 0.15";
        
        Node = "101.49639072678265 -59.30991893388351 0.01 0.15";
        
        Node = "101.48434774405172 -59.304426809886664 0.01 0.15";
        
        Node = "101.02934774405172 -59.09642680988665 0.01 0.15";
        
        Node = "100.5743477440518 -58.88842680988671 0.01 0.15";
        
        Node = "100.5568146219039 -58.880383548591766 0.01 0.15";
        
        Node = "100.11157585119933 -58.67541680172559 0.01 0.15";
        
        Node = "99.67136673731174 -58.47417834966268 0.01 0.15";
        
        Node = "99.22239072678273 -58.269918933883545 0.01 0.15";
        
        Node = "97.85739072678265 -57.64891893388351 0.01 0.15";
        
        Node = "97.84534774405181 -57.643426809886705 0.01 0.15";
        
        Node = "97.39034774405181 -57.43542680988671 0.01 0.15";
        
        Node = "96.9353477440518 -57.227426809886694 0.01 0.15";
        
        Node = "96.47584026945414 -57.01690633494141 0.01 0.15";
        
        Node = "96.02033874650755 -56.80767983958076 0.01 0.15";
        
        Node = "95.57736673731175 -56.60517834966268 0.01 0.15";
        
        Node = "95.12839072678274 -56.400918933883545 0.01 0.15";
        
        Node = "94.67339072678266 -56.19391893388351 0.01 0.15";
        
        Node = "94.21839072678272 -55.986918933883544 0.01 0.15";
        
        Node = "93.76339072678265 -55.77991893388351 0.01 0.15";
        
        Node = "93.7513477440518 -55.774426809886705 0.01 0.15";
        
        Node = "93.2963477440518 -55.56642680988671 0.01 0.15";
        
        Node = "92.83684026945406 -55.35590633494138 0.01 0.15";
        
        Node = "92.38133874650772 -55.14667983958083 0.01 0.15";
        
        Node = "91.93836673731313 -54.944178349663304 0.01 0.15";
        
        Node = "90.12439072678265 -54.118918933883506 0.01 0.15";
        
        Node = "90.1123477440518 -54.113426809886704 0.01 0.15";
        
        Node = "89.2023477440518 -53.69742680988671 0.01 0.15";
        
        Node = "89.18481462190381 -53.689383548591735 0.01 0.15";
        
        Node = "88.73957585120154 -53.48441680172658 0.01 0.15";
        
        Node = "88.29936673731153 -53.28317834966258 0.01 0.15";
        
        Node = "86.48539072678265 -52.457918933883505 0.01 0.15";
        
        Node = "86.47334774405181 -52.4524268098867 0.01 0.15";
        
        Node = "86.01834774405181 -52.244426809886704 0.01 0.15";
        
        Node = "85.56334774405188 -52.036426809886734 0.01 0.15";
        
        Node = "85.54581462190373 -52.02838354859169 0.01 0.15";
        
        Node = "85.10057585120238 -51.823416801726964 0.01 0.15";
        
        Node = "84.66036673731153 -51.622178349662576 0.01 0.15";
        
        Node = "83.77118905123078 -51.21765135841265 0.01 0.15";
        
        Node = "83.33001731827592 -51.01931757495707 0.01 0.15";
        
        Node = "83.31792750561173 -51.01386921087882 0.01 0.15";
        
        Node = "83.04343730510207 -50.88986705889418 0.01 0.15";
        
        Node = "82.86192750561173 -50.807869210878806 0.01 0.15";
        
        Node = "82.84439072678265 -50.799918933883504 0.01 0.15";
        
        Node = "82.38939072678265 -50.592918933883496 0.01 0.15";
        
        Node = "82.3598146219039 -50.579383548591764 0.01 0.15";
        
        Node = "81.98225896943096 -50.405574889193446 0.01 0.15";
        
        Node = "81.90581462190389 -50.370383548591775 0.01 0.15";
        
        Node = "81.45181462190374 -50.16138354859169 0.01 0.15";
        
        Node = "81.43981912127097 -50.15584818544285 0.01 0.15";
        
        Node = "80.9945715837241 -49.94989668129122 0.01 0.15";
        
        Node = "80.56035274191049 -49.75044231219442 0.01 0.15";
        
        Node = "80.13218905123261 -49.555651358413485 0.01 0.15";
        
        Node = "79.69101731827585 -49.35731757495705 0.01 0.15";
        
        Node = "79.67346367652374 -49.34939819020252 0.01 0.15";
        
        Node = "79.22119508186951 -49.14463482646896 0.01 0.15";
        
        Node = "79.03331378581858 -49.05975862693717 0.01 0.15";
        
        Node = "78.76792750561175 -48.939869210878825 0.01 0.15";
        
        Node = "78.73834774405172 -48.926426809886664 0.01 0.15";
        
        Node = "78.28334774405172 -48.718426809886665 0.01 0.15";
        
        Node = "78.25381912127106 -48.704848185442884 0.01 0.15";
        
        Node = "78.11971489522465 -48.64281759630248 0.01 0.15";
        
        Node = "77.80581435859716 -48.49762131284042 0.01 0.15";
        
        Node = "77.35781462190374 -48.29138354859168 0.01 0.15";
        
        Node = "76.91257585120154 -48.086416801726585 0.01 0.15";
        
        Node = "76.47839572128976 -47.88793445662405 0.01 0.15";
        
        Node = "76.03819508186815 -47.688634826468345 0.01 0.15";
        
        Node = "75.58492750561173 -47.48386921087882 0.01 0.15";
        
        Node = "75.12892750561181 -47.27786921087886 0.01 0.15";
        
        Node = "75.1168519233879 -47.27239476061091 0.01 0.15";
        
        Node = "75.11139072678264 -47.2699189338835 0.01 0.15";
        
        Node = "74.65639072678265 -47.06291893388351 0.01 0.15";
        
        Node = "74.64434774405171 -47.057426809886664 0.01 0.15";
        
        Node = "74.18934774405172 -46.849426809886666 0.01 0.15";
        
        Node = "74.15981912127097 -46.83584818544284 0.01 0.15";
        
        Node = "74.12480684608363 -46.81965308017999 0.01 0.15";
        
        Node = "73.71181435859667 -46.628621312840195 0.01 0.15";
        
        Node = "73.2638146219038 -46.422383548591725 0.01 0.15";
        
        Node = "73.25181912127088 -46.41684818544282 0.01 0.15";
        
        Node = "72.8098196463961 -46.21239908913509 0.01 0.15";
        
        Node = "72.37059348214834 -46.01116771873083 0.01 0.15";
        
        Node = "71.93915283053995 -45.813937706567 0.01 0.15";
        
        Node = "71.51884012872468 -45.624981338426366 0.01 0.15";
        
        Node = "71.07669256379506 -45.428578809584536 0.01 0.15";
        
    };
    
    new DecalRoad(road_1_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "76.98330743620494 -32.13142119041546 0.01 0.15";
        
        Node = "77.44030743620493 -32.334421190415455 0.01 0.15";
        
        Node = "77.46998268172416 -32.34768242504296 0.01 0.15";
        
        Node = "77.92598268172416 -32.55268242504297 0.01 0.15";
        
        Node = "77.9676522559482 -32.5715731901133 0.01 0.15";
        
        Node = "78.4226522559482 -32.7795731901133 0.01 0.15";
        
        Node = "78.8821597305458 -32.990093665058545 0.01 0.15";
        
        Node = "78.90618087872912 -33.00115181455718 0.01 0.15";
        
        Node = "79.35418564140515 -33.20837868716064 0.01 0.15";
        
        Node = "79.8021853780962 -33.41461645140828 0.01 0.15";
        
        Node = "79.81418087872903 -33.42015181455715 0.01 0.15";
        
        Node = "80.25343173299883 -33.6233295224793 0.01 0.15";
        
        Node = "80.68763326268684 -33.82182165033669 0.01 0.15";
        
        Node = "81.12784614430839 -34.02209432395353 0.01 0.15";
        
        Node = "81.57507249438818 -34.22413078912115 0.01 0.15";
        
        Node = "82.03107249438827 -34.430130789121186 0.01 0.15";
        
        Node = "82.49153632347625 -34.63860180979748 0.01 0.15";
        
        Node = "82.5156522559482 -34.649573190113294 0.01 0.15";
        
        Node = "82.9706522559482 -34.85757319011329 0.01 0.15";
        
        Node = "82.98818537809619 -34.86561645140827 0.01 0.15";
        
        Node = "83.4421853780962 -35.074616451408275 0.01 0.15";
        
        Node = "83.89618537809626 -35.283616451408314 0.01 0.15";
        
        Node = "83.90818087872894 -35.289151814557115 0.01 0.15";
        
        Node = "84.30776613561616 -35.47398199946089 0.01 0.15";
        
        Node = "84.34743173299807 -35.492329522478954 0.01 0.15";
        
        Node = "84.77287738400544 -35.68681896293947 0.01 0.15";
        
        Node = "84.89906000615134 -35.74382251592644 0.01 0.15";
        
        Node = "85.21407249438825 -35.886130789121175 0.01 0.15";
        
        Node = "85.66576474338363 -36.09063050100829 0.01 0.15";
        
        Node = "86.11298268172415 -36.29168242504296 0.01 0.15";
        
        Node = "86.14260927321735 -36.3050810661165 0.01 0.15";
        
        Node = "86.59760927321734 -36.512081066116494 0.01 0.15";
        
        Node = "86.6216652515645 -36.52307804085234 0.01 0.15";
        
        Node = "87.0766652515645 -36.73207804085234 0.01 0.15";
        
        Node = "87.09418087872903 -36.74015181455715 0.01 0.15";
        
        Node = "87.54218564140466 -36.94737868716041 0.01 0.15";
        
        Node = "87.99018537809626 -37.15361645140831 0.01 0.15";
        
        Node = "88.20531166315575 -37.25265035796653 0.01 0.15";
        
        Node = "88.42941245471442 -37.355815700336045 0.01 0.15";
        
        Node = "88.86084614430965 -37.55209432395409 0.01 0.15";
        
        Node = "88.9231849433568 -37.58025614983942 0.01 0.15";
        
        Node = "89.30203007086214 -37.7514010977914 0.01 0.15";
        
        Node = "89.75198268172409 -37.95368242504293 0.01 0.15";
        
        Node = "89.78160927321736 -37.96708106611649 0.01 0.15";
        
        Node = "90.69160927321735 -38.381081066116494 0.01 0.15";
        
        Node = "90.7036522559482 -38.386573190113296 0.01 0.15";
        
        Node = "91.1586522559482 -38.594573190113294 0.01 0.15";
        
        Node = "91.17618537809626 -38.60261645140831 0.01 0.15";
        
        Node = "91.62142414879865 -38.80758319827351 0.01 0.15";
        
        Node = "92.06765225594812 -39.01157319011326 0.01 0.15";
        
        Node = "92.51663326268847 -39.21682165033742 0.01 0.15";
        
        Node = "94.33060927321735 -40.042081066116495 0.01 0.15";
        
        Node = "94.3426522559482 -40.0475731901133 0.01 0.15";
        
        Node = "94.7976522559482 -40.255573190113296 0.01 0.15";
        
        Node = "94.81518537809619 -40.263616451408275 0.01 0.15";
        
        Node = "95.26042414879846 -40.46858319827342 0.01 0.15";
        
        Node = "96.15563326268847 -40.877821650337424 0.01 0.15";
        
        Node = "97.96960927321734 -41.703081066116496 0.01 0.15";
        
        Node = "97.9816522559481 -41.70857319011326 0.01 0.15";
        
        Node = "98.43665225594812 -41.91657319011326 0.01 0.15";
        
        Node = "98.44866525156449 -41.922078040852334 0.01 0.15";
        
        Node = "98.90041322509356 -42.12958425286898 0.01 0.15";
        
        Node = "99.34840651784525 -42.33483228126624 0.01 0.15";
        
        Node = "99.79463326268846 -42.538821650337425 0.01 0.15";
        
        Node = "100.24360927321734 -42.7430810661165 0.01 0.15";
        
        Node = "100.69860927321729 -42.95008106611647 0.01 0.15";
        
        Node = "101.15360927321736 -43.157081066116504 0.01 0.15";
        
        Node = "101.60860927321727 -43.364081066116455 0.01 0.15";
        
        Node = "101.62065225594829 -43.369573190113336 0.01 0.15";
        
        Node = "102.07565225594828 -43.57757319011334 0.01 0.15";
        
        Node = "102.08766525156449 -43.583078040852335 0.01 0.15";
        
        Node = "102.53941322509051 -43.79058425286759 0.01 0.15";
        
        Node = "102.9874065178558 -43.99583228127106 0.01 0.15";
        
        Node = "103.4396522559482 -44.202573190113306 0.01 0.15";
        
        Node = "103.88863326268847 -44.407821650337425 0.01 0.15";
        
        Node = "105.24760927321735 -45.026081066116504 0.01 0.15";
        
        Node = "105.70260927321726 -45.233081066116455 0.01 0.15";
        
        Node = "105.71465225594828 -45.238573190113335 0.01 0.15";
        
        Node = "106.16965225594828 -45.44657319011334 0.01 0.15";
        
        Node = "106.1871853780961 -45.454616451408235 0.01 0.15";
        
        Node = "106.63242414879947 -45.65958319827388 0.01 0.15";
        
        Node = "107.0786522559482 -45.86357319011329 0.01 0.15";
        
        Node = "107.52763326268685 -46.06882165033669 0.01 0.15";
        
        Node = "107.97660927321735 -46.273081066116504 0.01 0.15";
        
        Node = "108.43160927321726 -46.480081066116455 0.01 0.15";
        
        Node = "109.34160927321734 -46.8940810661165 0.01 0.15";
        
        Node = "109.3536522559481 -46.89957319011326 0.01 0.15";
        
        Node = "109.80865225594812 -47.10757319011326 0.01 0.15";
        
        Node = "109.82066525156458 -47.11307804085237 0.01 0.15";
        
        Node = "110.27241322508766 -47.320584252866276 0.01 0.15";
        
        Node = "110.72040651784874 -47.52583228126783 0.01 0.15";
        
        Node = "111.16663326269162 -47.729821650338856 0.01 0.15";
        
        Node = "111.61560927321734 -47.93408106611649 0.01 0.15";
        
        Node = "112.07060927321729 -48.141081066116456 0.01 0.15";
        
        Node = "112.98060927321735 -48.5550810661165 0.01 0.15";
        
        Node = "112.9926522559482 -48.560573190113296 0.01 0.15";
        
        Node = "113.4476522559482 -48.768573190113294 0.01 0.15";
        
        Node = "113.45966525156457 -48.77407804085237 0.01 0.15";
        
        Node = "113.91141322508766 -48.98158425286628 0.01 0.15";
        
        Node = "114.35940651785214 -49.18683228126939 0.01 0.15";
        
        Node = "114.81165225594812 -49.39357319011326 0.01 0.15";
        
        Node = "115.26063326268826 -49.59882165033733 0.01 0.15";
        
        Node = "115.70960927321727 -49.803081066116455 0.01 0.15";
        
        Node = "117.07460927321735 -50.4240810661165 0.01 0.15";
        
        Node = "117.0866522559482 -50.429573190113295 0.01 0.15";
        
        Node = "117.5416522559482 -50.637573190113294 0.01 0.15";
        
        Node = "117.55366525156457 -50.64307804085237 0.01 0.15";
        
        Node = "118.0054132250851 -50.85058425286511 0.01 0.15";
        
        Node = "118.45340651785166 -51.05583228126917 0.01 0.15";
        
        Node = "118.89963326269162 -51.25982165033886 0.01 0.15";
        
        Node = "120.25587140228293 -51.8768354852738 0.01 0.15";
        
        Node = "120.70913250230458 -52.08259216883627 0.01 0.15";
        
        Node = "121.16960927321735 -52.292081066116495 0.01 0.15";
        
        Node = "121.18715973054579 -52.30009366505855 0.01 0.15";
        
        Node = "121.6411597305458 -52.508093665058546 0.01 0.15";
        
        Node = "122.10266525156457 -52.72007804085238 0.01 0.15";
        
        Node = "122.56218537809617 -52.93161645140827 0.01 0.15";
        
    };
    
    new DecalRoad(road_1_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "118.47457547144461 -61.81092218164664 0.01 0.3";
        
        Node = "118.0215237646739 -61.60235873073238 0.01 0.3";
        
        Node = "117.56858995700955 -61.394307816882154 0.01 0.3";
        
        Node = "117.11872171334662 -61.188200780137905 0.01 0.3";
        
        Node = "116.66767993048428 -60.98300155145108 0.01 0.3";
        
        Node = "116.21262113322867 -60.776428807960045 0.01 0.3";
        
        Node = "114.8457390813686 -60.15457351679845 0.01 0.3";
        
        Node = "114.84160059933052 -60.1526861889645 0.01 0.3";
        
        Node = "114.38660059933052 -59.9446861889645 0.01 0.3";
        
        Node = "113.93070799637601 -59.735820046371636 0.01 0.3";
        
        Node = "113.47553565171887 -59.52674221291346 0.01 0.3";
        
        Node = "113.02466898189303 -59.320631735278795 0.01 0.3";
        
        Node = "111.66173908136861 -58.70057351679845 0.01 0.3";
        
        Node = "111.20673908136864 -58.49357351679847 0.01 0.3";
        
        Node = "111.2026005993305 -58.49168618896449 0.01 0.3";
        
        Node = "110.7476005993305 -58.28368618896449 0.01 0.3";
        
        Node = "110.29260059933054 -58.07568618896451 0.01 0.3";
        
        Node = "109.83670799637599 -57.86682004637162 0.01 0.3";
        
        Node = "109.38153565171888 -57.65774221291346 0.01 0.3";
        
        Node = "108.93066898189304 -57.451631735278795 0.01 0.3";
        
        Node = "108.02273908136861 -57.03857351679845 0.01 0.3";
        
        Node = "107.56773908136863 -56.831573516798464 0.01 0.3";
        
        Node = "107.1127390813686 -56.62457351679845 0.01 0.3";
        
        Node = "107.10860059933052 -56.6226861889645 0.01 0.3";
        
        Node = "106.65360059933052 -56.4146861889645 0.01 0.3";
        
        Node = "106.197707996376 -56.20582004637162 0.01 0.3";
        
        Node = "105.74253565171621 -55.99674221291224 0.01 0.3";
        
        Node = "105.29166898189573 -55.79063173528002 0.01 0.3";
        
        Node = "104.3837390813686 -55.37757351679845 0.01 0.3";
        
        Node = "103.92873908136863 -55.17057351679847 0.01 0.3";
        
        Node = "103.4737390813686 -54.963573516798455 0.01 0.3";
        
        Node = "103.46960059933049 -54.96168618896449 0.01 0.3";
        
        Node = "103.01460059933049 -54.75368618896449 0.01 0.3";
        
        Node = "102.55960059933052 -54.5456861889645 0.01 0.3";
        
        Node = "102.55357547144465 -54.54292218164665 0.01 0.3";
        
        Node = "102.10258620316249 -54.33530817928769 0.01 0.3";
        
        Node = "101.65266898189417 -54.12963173527931 0.01 0.3";
        
        Node = "101.19973908136863 -53.92357351679847 0.01 0.3";
        
        Node = "99.83473908136861 -53.302573516798454 0.01 0.3";
        
        Node = "99.83060059933052 -53.300686188964505 0.01 0.3";
        
        Node = "99.37560059933053 -53.09268618896451 0.01 0.3";
        
        Node = "98.92060059933051 -52.8846861889645 0.01 0.3";
        
        Node = "98.46470799637599 -52.67582004637162 0.01 0.3";
        
        Node = "98.009535651724 -52.466742212915804 0.01 0.3";
        
        Node = "97.55866898189417 -52.26063173527931 0.01 0.3";
        
        Node = "97.10573908136864 -52.05457351679847 0.01 0.3";
        
        Node = "96.65073908136861 -51.847573516798455 0.01 0.3";
        
        Node = "96.19573908136863 -51.64057351679847 0.01 0.3";
        
        Node = "95.7407390813686 -51.433573516798454 0.01 0.3";
        
        Node = "95.73660059933052 -51.431686188964505 0.01 0.3";
        
        Node = "95.28160059933052 -51.22368618896451 0.01 0.3";
        
        Node = "94.82570799637597 -51.014820046371604 0.01 0.3";
        
        Node = "94.37053565172191 -50.80574221291484 0.01 0.3";
        
        Node = "93.91966898189573 -50.59963173528003 0.01 0.3";
        
        Node = "92.1017390813686 -49.77257351679845 0.01 0.3";
        
        Node = "92.09760059933052 -49.770686188964504 0.01 0.3";
        
        Node = "91.18760059933052 -49.35468618896451 0.01 0.3";
        
        Node = "91.18157547144462 -49.35192218164664 0.01 0.3";
        
        Node = "90.73058620316323 -49.144308179288025 0.01 0.3";
        
        Node = "90.28066898189303 -48.9386317352788 0.01 0.3";
        
        Node = "88.46273908136861 -48.11157351679845 0.01 0.3";
        
        Node = "88.45860059933052 -48.1096861889645 0.01 0.3";
        
        Node = "88.00360059933053 -47.901686188964504 0.01 0.3";
        
        Node = "87.54860059933054 -47.69368618896451 0.01 0.3";
        
        Node = "87.54257547144458 -47.69092218164663 0.01 0.3";
        
        Node = "87.09158620316356 -47.48330817928818 0.01 0.3";
        
        Node = "86.64166898189303 -47.277631735278796 0.01 0.3";
        
        Node = "85.73882441623117 -46.86688706474691 0.01 0.3";
        
        Node = "85.28792004064465 -46.66417786080999 0.01 0.3";
        
        Node = "85.28376546584596 -46.662305570748735 0.01 0.3";
        
        Node = "84.97310175128835 -46.52196187513718 0.01 0.3";
        
        Node = "84.82776546584596 -46.45630557074873 0.01 0.3";
        
        Node = "84.8217390813686 -46.45357351679845 0.01 0.3";
        
        Node = "84.3667390813686 -46.24657351679845 0.01 0.3";
        
        Node = "84.35657547144464 -46.24192218164665 0.01 0.3";
        
        Node = "84.02477525841044 -46.08917714965514 0.01 0.3";
        
        Node = "83.90257547144464 -46.032922181646654 0.01 0.3";
        
        Node = "83.44857547144458 -45.82392218164662 0.01 0.3";
        
        Node = "83.44445330627869 -45.82201999499754 0.01 0.3";
        
        Node = "82.9934610253357 -45.61341123068471 0.01 0.3";
        
        Node = "82.5456023168073 -45.407691516217824 0.01 0.3";
        
        Node = "82.09982441623087 -45.204887064746785 0.01 0.3";
        
        Node = "81.64892004064463 -45.00217786080998 0.01 0.3";
        
        Node = "81.64288786134837 -44.99945642275001 0.01 0.3";
        
        Node = "81.18882648861405 -44.7938813836659 0.01 0.3";
        
        Node = "80.95838196168422 -44.68977705790374 0.01 0.3";
        
        Node = "80.73376546584596 -44.58830557074874 0.01 0.3";
        
        Node = "80.7236005993305 -44.58368618896449 0.01 0.3";
        
        Node = "80.2686005993305 -44.37568618896449 0.01 0.3";
        
        Node = "80.25845330627872 -44.37101999499755 0.01 0.3";
        
        Node = "80.15064660165571 -44.321153457616866 0.01 0.3";
        
        Node = "79.80651352529297 -44.161972959739835 0.01 0.3";
        
        Node = "79.35457547144459 -43.95392218164663 0.01 0.3";
        
        Node = "78.90358620316323 -43.74630817928802 0.01 0.3";
        
        Node = "78.45574079769429 -43.54157885107365 0.01 0.3";
        
        Node = "78.00582648861406 -43.3378813836659 0.01 0.3";
        
        Node = "77.55076546584596 -43.132305570748734 0.01 0.3";
        
        Node = "77.09476546584598 -42.92630557074875 0.01 0.3";
        
        Node = "77.0887390813686 -42.923573516798456 0.01 0.3";
        
        Node = "76.92906999097336 -42.85093285369557 0.01 0.3";
        
        Node = "76.6337390813686 -42.716573516798455 0.01 0.3";
        
        Node = "76.62960059933049 -42.71468618896449 0.01 0.3";
        
        Node = "76.17460059933049 -42.50668618896449 0.01 0.3";
        
        Node = "76.16445330627869 -42.50201999499754 0.01 0.3";
        
        Node = "76.15915137468389 -42.499567559678354 0.01 0.3";
        
        Node = "75.71251352529075 -42.2929729597388 0.01 0.3";
        
        Node = "75.26057547144461 -42.08492218164664 0.01 0.3";
        
        Node = "75.25645330627866 -42.08301999499753 0.01 0.3";
        
        Node = "74.8065771980755 -41.87492752204012 0.01 0.3";
        
        Node = "74.35765411757703 -41.669253511591485 0.01 0.3";
        
        Node = "73.91075011358748 -41.46495453833912 0.01 0.3";
        
        Node = "73.46701378994052 -41.26546781389256 0.01 0.3";
        
        Node = "73.0151177195172 -41.06473498611153 0.01 0.3";
        
    };
    
    new DecalRoad(road_1_separator_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "75.0448822804828 -36.49526501388847 0.01 0.15";
        
        Node = "75.50188228048279 -36.69826501388847 0.01 0.15";
        
        Node = "75.51207995935538 -36.70282213919002 0.01 0.15";
        
        Node = "75.96807995935538 -36.907822139190024 0.01 0.15";
        
        Node = "75.98239940066948 -36.9143138110355 0.01 0.15";
        
        Node = "76.43739940066948 -37.1223138110355 0.01 0.15";
        
        Node = "76.89329200362398 -37.331179953628364 0.01 0.15";
        
        Node = "76.90154669372134 -37.33498000500247 0.01 0.15";
        
        Node = "77.3534864747088 -37.544027040260985 0.01 0.15";
        
        Node = "77.80542452855539 -37.752077818353364 0.01 0.15";
        
        Node = "77.80954669372132 -37.75398000500246 0.01 0.15";
        
        Node = "78.25847825876185 -37.96163557473487 0.01 0.15";
        
        Node = "78.50183738010705 -38.07288545877839 0.01 0.15";
        
        Node = "78.70633101810643 -38.16636826472096 0.01 0.15";
        
        Node = "78.81918624856968 -38.217711193744904 0.01 0.15";
        
        Node = "79.15624953412576 -38.37105646871218 0.01 0.15";
        
        Node = "79.60923453415401 -38.57569442925125 0.01 0.15";
        
        Node = "80.06523453415404 -38.78169442925127 0.01 0.15";
        
        Node = "80.52211213865164 -38.98854357724999 0.01 0.15";
        
        Node = "80.53039940066948 -38.992313811035494 0.01 0.15";
        
        Node = "80.98539940066948 -39.20031381103549 0.01 0.15";
        
        Node = "80.99142452855538 -39.20307781835336 0.01 0.15";
        
        Node = "81.44542452855539 -39.41207781835336 0.01 0.15";
        
        Node = "81.89942452855541 -39.62107781835337 0.01 0.15";
        
        Node = "81.90354669372128 -39.62298000500245 0.01 0.15";
        
        Node = "82.27712436718689 -39.79578025043807 0.01 0.15";
        
        Node = "82.35247825876205 -39.83063557473495 0.01 0.15";
        
        Node = "82.79732212508775 -40.03399277076956 0.01 0.15";
        
        Node = "82.97410230430182 -40.11385399208118 0.01 0.15";
        
        Node = "83.24823453415404 -40.23769442925126 0.01 0.15";
        
        Node = "83.70209784996075 -40.44317886632621 0.01 0.15";
        
        Node = "84.15507995935538 -40.64682213919002 0.01 0.15";
        
        Node = "84.16526091863139 -40.65142648320155 0.01 0.15";
        
        Node = "84.62026091863139 -40.85842648320155 0.01 0.15";
        
        Node = "84.62852757785721 -40.86220551232039 0.01 0.15";
        
        Node = "85.08352757785723 -41.0712055123204 0.01 0.15";
        
        Node = "85.08954669372132 -41.07398000500246 0.01 0.15";
        
        Node = "85.54148647470979 -41.283027040261445 0.01 0.15";
        
        Node = "85.99342452855541 -41.491077818353375 0.01 0.15";
        
        Node = "86.1632806769845 -41.56927150782844 0.01 0.15";
        
        Node = "86.44234792258152 -41.69774079049314 0.01 0.15";
        
        Node = "86.88924953412622 -41.901056468712376 0.01 0.15";
        
        Node = "86.99363357753789 -41.94821241814835 0.01 0.15";
        
        Node = "87.34015809995219 -42.10475639099341 0.01 0.15";
        
        Node = "87.79407995935536 -42.308822139190006 0.01 0.15";
        
        Node = "87.8042609186314 -42.313426483201546 0.01 0.15";
        
        Node = "88.7142609186314 -42.72742648320155 0.01 0.15";
        
        Node = "88.71839940066948 -42.729313811035496 0.01 0.15";
        
        Node = "89.17339940066948 -42.937313811035494 0.01 0.15";
        
        Node = "89.17942452855542 -42.94007781835337 0.01 0.15";
        
        Node = "89.63041379683825 -43.14769182071266 0.01 0.15";
        
        Node = "90.08239940066946 -43.35431381103549 0.01 0.15";
        
        Node = "90.53533101810697 -43.5613682647212 0.01 0.15";
        
        Node = "92.35326091863139 -44.38842648320155 0.01 0.15";
        
        Node = "92.35739940066948 -44.3903138110355 0.01 0.15";
        
        Node = "92.81239940066948 -44.598313811035496 0.01 0.15";
        
        Node = "92.81842452855538 -44.60107781835336 0.01 0.15";
        
        Node = "93.26941379683677 -44.80869182071198 0.01 0.15";
        
        Node = "94.17433101810697 -45.222368264721204 0.01 0.15";
        
        Node = "95.99226091863139 -46.04942648320155 0.01 0.15";
        
        Node = "95.99639940066945 -46.05131381103549 0.01 0.15";
        
        Node = "96.45139940066946 -46.25931381103549 0.01 0.15";
        
        Node = "96.45552757785721 -46.261205512320394 0.01 0.15";
        
        Node = "96.90941004298199 -46.46969218311397 0.01 0.15";
        
        Node = "97.36134588242062 -46.67674648840745 0.01 0.15";
        
        Node = "97.81333101810696 -46.883368264721206 0.01 0.15";
        
        Node = "98.26626091863139 -47.08942648320155 0.01 0.15";
        
        Node = "98.72126091863137 -47.296426483201536 0.01 0.15";
        
        Node = "99.1762609186314 -47.50342648320155 0.01 0.15";
        
        Node = "99.63126091863137 -47.71042648320153 0.01 0.15";
        
        Node = "99.63539940066951 -47.71231381103551 0.01 0.15";
        
        Node = "100.09039940066951 -47.92031381103551 0.01 0.15";
        
        Node = "100.0945275778572 -47.922205512320396 0.01 0.15";
        
        Node = "100.54841004298098 -48.1306921831135 0.01 0.15";
        
        Node = "101.0003458824218 -48.33774648840798 0.01 0.15";
        
        Node = "101.45439940066949 -48.5453138110355 0.01 0.15";
        
        Node = "101.90733101810697 -48.752368264721206 0.01 0.15";
        
        Node = "103.2702609186314 -49.37242648320155 0.01 0.15";
        
        Node = "103.72526091863136 -49.57942648320153 0.01 0.15";
        
        Node = "103.72939940066951 -49.58131381103551 0.01 0.15";
        
        Node = "104.1843994006695 -49.78931381103551 0.01 0.15";
        
        Node = "104.19042452855535 -49.79207781835335 0.01 0.15";
        
        Node = "104.64141379683711 -49.99969182071212 0.01 0.15";
        
        Node = "105.09339940066948 -50.20631381103549 0.01 0.15";
        
        Node = "105.54633101810643 -50.41336826472096 0.01 0.15";
        
        Node = "105.99926091863139 -50.61942648320155 0.01 0.15";
        
        Node = "106.45426091863136 -50.82642648320153 0.01 0.15";
        
        Node = "107.36426091863139 -51.240426483201546 0.01 0.15";
        
        Node = "107.36839940066945 -51.24231381103549 0.01 0.15";
        
        Node = "107.82339940066946 -51.450313811035485 0.01 0.15";
        
        Node = "107.82752757785725 -51.4522055123204 0.01 0.15";
        
        Node = "108.28141004299147 -51.660692183118314 0.01 0.15";
        
        Node = "108.7333458824218 -51.86774648840798 0.01 0.15";
        
        Node = "109.18533101810696 -52.0743682647212 0.01 0.15";
        
        Node = "109.63826091863139 -52.280426483201545 0.01 0.15";
        
        Node = "110.09326091863137 -52.48742648320153 0.01 0.15";
        
        Node = "111.0032609186314 -52.90142648320155 0.01 0.15";
        
        Node = "111.00739940066948 -52.903313811035495 0.01 0.15";
        
        Node = "111.46239940066948 -53.111313811035494 0.01 0.15";
        
        Node = "111.46652757785725 -53.1132055123204 0.01 0.15";
        
        Node = "111.92041004299146 -53.321692183118316 0.01 0.15";
        
        Node = "112.37234588242762 -53.528746488410654 0.01 0.15";
        
        Node = "112.82639940066946 -53.73631381103549 0.01 0.15";
        
        Node = "113.27933101810584 -53.94336826472069 0.01 0.15";
        
        Node = "113.73226091863137 -54.14942648320153 0.01 0.15";
        
        Node = "115.09726091863139 -54.77042648320155 0.01 0.15";
        
        Node = "115.10139940066948 -54.772313811035495 0.01 0.15";
        
        Node = "115.55639940066948 -54.980313811035494 0.01 0.15";
        
        Node = "115.56052757785724 -54.9822055123204 0.01 0.15";
        
        Node = "116.01441004299045 -55.19069218311785 0.01 0.15";
        
        Node = "116.46634588242297 -55.397746488408515 0.01 0.15";
        
        Node = "116.91833101810697 -55.6043682647212 0.01 0.15";
        
        Node = "118.28032006951571 -56.22399844854892 0.01 0.15";
        
        Node = "118.73537886677133 -56.430571192039956 0.01 0.15";
        
        Node = "119.19226091863139 -56.63842648320155 0.01 0.15";
        
        Node = "119.19829200362398 -56.64117995362837 0.01 0.15";
        
        Node = "119.65229200362398 -56.849179953628365 0.01 0.15";
        
        Node = "120.10952757785725 -57.0592055123204 0.01 0.15";
        
        Node = "120.56542452855538 -57.26907781835336 0.01 0.15";
        
    };
    
    new DecalRoad(road_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "74.03 -38.78 0.01 15.0";
        
        Node = "73.53 -38.787 0.01 15.000000000000005";
        
        Node = "73.03 -38.793 0.01 15.000000000000002";
        
        Node = "72.53 -38.797 0.01 15.000000000000004";
        
        Node = "72.03 -38.8 0.01 15.0";
        
        Node = "71.53 -38.802 0.01 15.000000000000004";
        
        Node = "71.03 -38.804 0.01 15.0";
        
        Node = "70.53 -38.806 0.01 15.0";
        
        Node = "70.03 -38.809 0.01 15.0";
        
        Node = "69.53 -38.813 0.01 15.0";
        
        Node = "69.03 -38.817 0.01 14.999999999999998";
        
        Node = "68.53 -38.822 0.01 15.000000000000002";
        
        Node = "68.03 -38.827 0.01 15.0";
        
        Node = "67.53 -38.833 0.01 15.000000000000002";
        
        Node = "67.03 -38.838 0.01 15.000000000000005";
        
        Node = "66.53 -38.843 0.01 15.000000000000005";
        
        Node = "66.03 -38.848 0.01 15.000000000000005";
        
        Node = "65.53 -38.851 0.01 15.000000000000009";
        
        Node = "65.03 -38.853 0.01 15.000000000000007";
        
        Node = "64.53 -38.855 0.01 15.000000000000005";
        
        Node = "64.03 -38.858 0.01 15.000000000000007";
        
        Node = "63.53 -38.861 0.01 15.000000000000002";
        
        Node = "63.03 -38.865 0.01 15.000000000000002";
        
        Node = "62.53 -38.87 0.01 15.000000000000002";
        
        Node = "62.03 -38.875 0.01 15.000000000000002";
        
        Node = "61.53 -38.88 0.01 15.000000000000002";
        
        Node = "61.03 -38.885 0.01 15.000000000000002";
        
        Node = "60.53 -38.89 0.01 15.000000000000002";
        
        Node = "60.03 -38.894 0.01 15.000000000000002";
        
        Node = "59.53 -38.899 0.01 15.000000000000004";
        
        Node = "59.03 -38.904 0.01 15.0";
        
        Node = "58.53 -38.91 0.01 15.000000000000004";
        
        Node = "58.03 -38.915 0.01 15.0";
        
        Node = "57.53 -38.919 0.01 15.000000000000002";
        
        Node = "57.03 -38.922 0.01 15.000000000000002";
        
        Node = "56.53 -38.924 0.01 15.000000000000002";
        
        Node = "56.03 -38.926 0.01 15.000000000000002";
        
        Node = "55.53 -38.929 0.01 15.0";
        
        Node = "55.03 -38.932 0.01 15.0";
        
        Node = "54.53 -38.936 0.01 14.999999999999998";
        
        Node = "54.03 -38.941 0.01 15.000000000000002";
        
        Node = "53.53 -38.946 0.01 15.000000000000002";
        
        Node = "53.03 -38.952 0.01 14.999999999999998";
        
        Node = "52.53 -38.957 0.01 15.000000000000002";
        
        Node = "52.03 -38.963 0.01 14.999999999999998";
        
        Node = "51.53 -38.967 0.01 15.0";
        
        Node = "51.03 -38.971 0.01 15.000000000000005";
        
        Node = "50.53 -38.973 0.01 15.000000000000004";
        
        Node = "50.03 -38.975 0.01 15.000000000000004";
        
        Node = "49.53 -38.977 0.01 15.000000000000005";
        
        Node = "49.03 -38.98 0.01 15.000000000000009";
        
        Node = "48.53 -38.984 0.01 15.000000000000004";
        
        Node = "48.03 -38.988 0.01 15.000000000000004";
        
        Node = "47.53 -38.994 0.01 15.0";
        
        Node = "47.03 -38.999 0.01 14.999999999999996";
        
        Node = "46.53 -39.005 0.01 14.999999999999996";
        
        Node = "46.03 -39.01 0.01 14.999999999999998";
        
        Node = "45.53 -39.015 0.01 14.999999999999996";
        
        Node = "45.03 -39.019 0.01 14.999999999999996";
        
        Node = "44.53 -39.022 0.01 15.000000000000002";
        
        Node = "44.03 -39.024 0.01 15.000000000000004";
        
        Node = "43.53 -39.026 0.01 15.000000000000004";
        
        Node = "43.03 -39.028 0.01 15.000000000000007";
        
        Node = "42.53 -39.032 0.01 15.000000000000007";
        
        Node = "42.03 -39.036 0.01 15.000000000000004";
        
        Node = "41.53 -39.041 0.01 15.000000000000004";
        
        Node = "41.03 -39.047 0.01 15.0";
        
        Node = "40.53 -39.052 0.01 14.999999999999996";
        
        Node = "40.03 -39.057 0.01 14.999999999999996";
        
        Node = "39.53 -39.061 0.01 14.999999999999996";
        
        Node = "39.03 -39.066 0.01 14.999999999999995";
        
        Node = "38.53 -39.071 0.01 14.999999999999995";
        
        Node = "38.03 -39.076 0.01 15.0";
        
        Node = "37.53 -39.081 0.01 14.999999999999998";
        
        Node = "37.03 -39.086 0.01 15.0";
        
        Node = "36.53 -39.09 0.01 15.000000000000004";
        
        Node = "36.03 -39.093 0.01 15.000000000000002";
        
        Node = "35.53 -39.095 0.01 15.000000000000004";
        
        Node = "35.03 -39.097 0.01 15.000000000000005";
        
        Node = "34.53 -39.1 0.01 15.000000000000002";
        
        Node = "34.03 -39.103 0.01 15.000000000000002";
        
        Node = "33.53 -39.108 0.01 15.0";
        
        Node = "33.03 -39.113 0.01 14.999999999999998";
        
        Node = "32.53 -39.118 0.01 15.000000000000002";
        
        Node = "32.03 -39.124 0.01 14.999999999999996";
        
        Node = "31.53 -39.129 0.01 15.000000000000002";
        
        Node = "31.03 -39.134 0.01 15.000000000000004";
        
        Node = "30.53 -39.138 0.01 15.000000000000002";
        
        Node = "30.03 -39.141 0.01 15.0";
        
        Node = "29.53 -39.144 0.01 15.000000000000004";
        
        Node = "29.03 -39.146 0.01 15.000000000000005";
        
        Node = "28.53 -39.148 0.01 15.0";
        
        Node = "28.03 -39.151 0.01 15.0";
        
        Node = "27.53 -39.155 0.01 15.000000000000004";
        
        Node = "27.03 -39.16 0.01 14.999999999999998";
        
        Node = "26.53 -39.165 0.01 15.000000000000002";
        
        Node = "26.03 -39.171 0.01 15.0";
        
        Node = "25.53 -39.177 0.01 15.000000000000002";
        
        Node = "25.03 -39.182 0.01 15.0";
        
        Node = "24.53 -39.186 0.01 15.000000000000004";
        
        Node = "24.03 -39.19 0.01 15.0";
        
    };
    
    new DecalRoad(road_2_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "74.13184002016698 -46.054287154786536 0.01 0.15";
        
        Node = "73.63184002016698 -46.061287154786534 0.01 0.15";
        
        Node = "73.61729371507877 -46.06147625656361 0.01 0.15";
        
        Node = "73.11729371507877 -46.06747625656361 0.01 0.15";
        
        Node = "73.08819813768936 -46.0677672111738 0.01 0.15";
        
        Node = "72.58819813768936 -46.0717672111738 0.01 0.15";
        
        Node = "72.57364921432122 -46.07186905353554 0.01 0.15";
        
        Node = "72.07364921432122 -46.074869053535544 0.01 0.15";
        
        Node = "72.05909976720282 -46.07494180069839 0.01 0.15";
        
        Node = "71.18981590636386 -46.07841893614175 0.01 0.15";
        
        Node = "71.05909976720282 -46.078941800698395 0.01 0.15";
        
        Node = "70.56637452713491 -46.08091270165866 0.01 0.15";
        
        Node = "70.08092372692231 -46.08382540645994 0.01 0.15";
        
        Node = "69.58819813768946 -46.087767211173805 0.01 0.15";
        
        Node = "69.09547231569508 -46.09170901774976 0.01 0.15";
        
        Node = "68.60274636277283 -46.096636277278975 0.01 0.15";
        
        Node = "68.110020118924 -46.10156353971747 0.01 0.15";
        
        Node = "67.61729371507877 -46.10747625656361 0.01 0.15";
        
        Node = "67.60274636277283 -46.10763627727897 0.01 0.15";
        
        Node = "67.48848705291965 -46.108778870377506 0.01 0.15";
        
        Node = "66.60274636277283 -46.117636277278976 0.01 0.15";
        
        Node = "66.10274636277272 -46.12263627727898 0.01 0.15";
        
        Node = "66.07364921432122 -46.122869053535545 0.01 0.15";
        
        Node = "65.57364921432122 -46.125869053535546 0.01 0.15";
        
        Node = "65.55909976720282 -46.12594180069839 0.01 0.15";
        
        Node = "65.24089344190791 -46.12721462599957 0.01 0.15";
        
        Node = "65.05909976720282 -46.127941800698395 0.01 0.15";
        
        Node = "64.56637452713491 -46.12991270165866 0.01 0.15";
        
        Node = "63.58092372692232 -46.13582540645994 0.01 0.15";
        
        Node = "63.09547231569419 -46.139709017749766 0.01 0.15";
        
        Node = "62.60274636277273 -46.14463627727898 0.01 0.15";
        
        Node = "61.60274636277283 -46.15463627727898 0.01 0.15";
        
        Node = "61.10274636277273 -46.15963627727898 0.01 0.15";
        
        Node = "60.60274636277283 -46.16463627727897 0.01 0.15";
        
        Node = "60.58819813768936 -46.1647672111738 0.01 0.15";
        
        Node = "60.095472315695034 -46.168709017749755 0.01 0.15";
        
        Node = "59.700144267927584 -46.17266229822743 0.01 0.15";
        
        Node = "59.11002011892643 -46.178563539717445 0.01 0.15";
        
        Node = "58.61729371507867 -46.18447625656361 0.01 0.15";
        
        Node = "58.60274636277283 -46.18463627727897 0.01 0.15";
        
        Node = "58.10274636277283 -46.18963627727898 0.01 0.15";
        
        Node = "58.08819813768936 -46.1897672111738 0.01 0.15";
        
        Node = "57.58819813768936 -46.1937672111738 0.01 0.15";
        
        Node = "57.573649214321215 -46.19386905353554 0.01 0.15";
        
        Node = "57.073649214321215 -46.19686905353554 0.01 0.15";
        
        Node = "57.05909976720283 -46.19694180069839 0.01 0.15";
        
        Node = "56.43648819451317 -46.199432246989154 0.01 0.15";
        
        Node = "56.06637452713473 -46.200912701658666 0.01 0.15";
        
        Node = "55.080923726921874 -46.20682540645994 0.01 0.15";
        
        Node = "54.595472315695034 -46.21070901774976 0.01 0.15";
        
        Node = "54.10274636277283 -46.215636277278975 0.01 0.15";
        
        Node = "53.61002011892392 -46.22056353971747 0.01 0.15";
        
        Node = "53.117293715078766 -46.22647625656361 0.01 0.15";
        
        Node = "53.10274636277283 -46.22663627727897 0.01 0.15";
        
        Node = "53.02442188078419 -46.227419522098856 0.01 0.15";
        
        Node = "52.61002011892352 -46.23156353971747 0.01 0.15";
        
        Node = "52.117293715078766 -46.23747625656361 0.01 0.15";
        
        Node = "52.08819813768936 -46.237767211173804 0.01 0.15";
        
        Node = "51.08819813768936 -46.2457672111738 0.01 0.15";
        
        Node = "51.05909976720283 -46.24594180069839 0.01 0.15";
        
        Node = "50.48756573005703 -46.24822793684697 0.01 0.15";
        
        Node = "50.05909976720283 -46.249941800698394 0.01 0.15";
        
        Node = "49.56637452713488 -46.25191270165866 0.01 0.15";
        
        Node = "49.08092372692232 -46.254825406459936 0.01 0.15";
        
        Node = "48.58819813768946 -46.258767211173804 0.01 0.15";
        
        Node = "48.10274621730925 -46.26265082653684 0.01 0.15";
        
        Node = "47.617293715078766 -46.26847625656361 0.01 0.15";
        
        Node = "47.60274636277283 -46.26863627727897 0.01 0.15";
        
        Node = "47.11002011892352 -46.27356353971747 0.01 0.15";
        
        Node = "46.617293715078766 -46.27947625656361 0.01 0.15";
        
        Node = "46.60274636277273 -46.27963627727898 0.01 0.15";
        
        Node = "46.34869949364865 -46.28217674597022 0.01 0.15";
        
        Node = "46.10274636277273 -46.28463627727898 0.01 0.15";
        
        Node = "45.60274636277283 -46.28963627727897 0.01 0.15";
        
        Node = "45.58819813768936 -46.2897672111738 0.01 0.15";
        
        Node = "45.08819813768936 -46.2937672111738 0.01 0.15";
        
        Node = "45.073649214321215 -46.293869053535545 0.01 0.15";
        
        Node = "44.573649214321215 -46.296869053535545 0.01 0.15";
        
        Node = "44.55909976720283 -46.29694180069839 0.01 0.15";
        
        Node = "44.53864326560108 -46.2970236267048 0.01 0.15";
        
        Node = "43.55909976720283 -46.300941800698396 0.01 0.15";
        
        Node = "43.073649127028354 -46.30288360325909 0.01 0.15";
        
        Node = "42.58819813768936 -46.3067672111738 0.01 0.15";
        
        Node = "42.09547231569419 -46.310709017749765 0.01 0.15";
        
        Node = "41.61002011892392 -46.315563539717466 0.01 0.15";
        
        Node = "41.117293715078766 -46.32147625656361 0.01 0.15";
        
        Node = "41.10274636277283 -46.32163627727897 0.01 0.15";
        
        Node = "40.10274636277283 -46.331636277278974 0.01 0.15";
        
        Node = "40.08819813768936 -46.331767211173805 0.01 0.15";
        
        Node = "39.595472315695034 -46.33570901774976 0.01 0.15";
        
        Node = "39.10274636277283 -46.340636277278975 0.01 0.15";
        
        Node = "38.60274636277273 -46.34563627727898 0.01 0.15";
        
        Node = "38.560356708651284 -46.34606017382019 0.01 0.15";
        
        Node = "37.60274636277283 -46.355636277278975 0.01 0.15";
        
        Node = "37.10274636277273 -46.36063627727898 0.01 0.15";
        
        Node = "37.08819813768946 -46.3607672111738 0.01 0.15";
        
        Node = "36.58819813768946 -46.364767211173806 0.01 0.15";
        
        Node = "36.573649214321215 -46.36486905353555 0.01 0.15";
        
        Node = "36.073649214321215 -46.36786905353555 0.01 0.15";
        
        Node = "36.059099767202724 -46.3679418006984 0.01 0.15";
        
        Node = "35.73423801820566 -46.36924124769438 0.01 0.15";
        
        Node = "35.559099767202724 -46.36994180069839 0.01 0.15";
        
        Node = "35.06637452713473 -46.371912701658665 0.01 0.15";
        
        Node = "34.0881980213082 -46.37778176069363 0.01 0.15";
        
        Node = "33.60274636277273 -46.382636277278976 0.01 0.15";
        
        Node = "32.61002011892352 -46.39256353971747 0.01 0.15";
        
        Node = "32.117293715078766 -46.39847625656361 0.01 0.15";
        
        Node = "32.10274636277273 -46.39863627727898 0.01 0.15";
        
        Node = "31.884634321513133 -46.400817397691576 0.01 0.15";
        
        Node = "31.60274636277272 -46.40363627727898 0.01 0.15";
        
        Node = "31.102746362772827 -46.40863627727897 0.01 0.15";
        
        Node = "31.08819813768936 -46.4087672111738 0.01 0.15";
        
        Node = "30.58819813768936 -46.4127672111738 0.01 0.15";
        
        Node = "30.573649214321215 -46.412869053535545 0.01 0.15";
        
        Node = "29.984132188808218 -46.41640615568862 0.01 0.15";
        
        Node = "29.573649214321215 -46.418869053535545 0.01 0.15";
        
        Node = "29.55909976720283 -46.41894180069839 0.01 0.15";
        
        Node = "28.566374527134727 -46.42291270165867 0.01 0.15";
        
        Node = "28.080923726921874 -46.42582540645994 0.01 0.15";
        
        Node = "27.595472315694522 -46.429709017749765 0.01 0.15";
        
        Node = "27.10274636277272 -46.434636277278976 0.01 0.15";
        
        Node = "26.610020118923522 -46.43956353971747 0.01 0.15";
        
        Node = "25.617293715078766 -46.45147625656361 0.01 0.15";
        
        Node = "25.602746362772827 -46.45163627727898 0.01 0.15";
        
        Node = "25.2089119343718 -46.45557462156299 0.01 0.15";
        
        Node = "25.102746362772827 -46.456636277278974 0.01 0.15";
        
        Node = "25.08819813768936 -46.456767211173805 0.01 0.15";
        
        Node = "24.08819813768936 -46.4647672111738 0.01 0.15";
        
    };
    
    new DecalRoad(road_2_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "23.97180186231064 -31.91523278882619 0.01 0.15";
        
        Node = "24.964527684308468 -31.907290982250213 0.01 0.15";
        
        Node = "25.07333369773674 -31.90620292211593 0.01 0.15";
        
        Node = "25.449979881072977 -31.902436460282566 0.01 0.15";
        
        Node = "26.442706284921236 -31.890523743436386 0.01 0.15";
        
        Node = "26.457253637227176 -31.890363722721023 0.01 0.15";
        
        Node = "26.957253637227176 -31.88536372272102 0.01 0.15";
        
        Node = "27.45725363722728 -31.88036372272102 0.01 0.15";
        
        Node = "27.47180186231064 -31.880232788826195 0.01 0.15";
        
        Node = "27.97180186231064 -31.876232788826197 0.01 0.15";
        
        Node = "27.986350785678788 -31.876130946464457 0.01 0.15";
        
        Node = "28.486350785678788 -31.873130946464457 0.01 0.15";
        
        Node = "28.50090023279717 -31.87305819930161 0.01 0.15";
        
        Node = "29.49362547286528 -31.869087298341334 0.01 0.15";
        
        Node = "29.894090363911626 -31.866684508995057 0.01 0.15";
        
        Node = "30.479076273076352 -31.863174593540066 0.01 0.15";
        
        Node = "30.964527684308468 -31.85929098225021 0.01 0.15";
        
        Node = "31.457253637227176 -31.854363722721022 0.01 0.15";
        
        Node = "31.730953421218963 -31.851626724881108 0.01 0.15";
        
        Node = "31.94997988107429 -31.849436460282554 0.01 0.15";
        
        Node = "32.442706284921236 -31.84352374343639 0.01 0.15";
        
        Node = "32.457253637227176 -31.843363722721026 0.01 0.15";
        
        Node = "33.457253637227176 -31.83336372272102 0.01 0.15";
        
        Node = "33.957253637227275 -31.828363722721022 0.01 0.15";
        
        Node = "33.98635078567879 -31.828130946464455 0.01 0.15";
        
        Node = "34.98635078567879 -31.822130946464455 0.01 0.15";
        
        Node = "35.00090023279717 -31.82205819930161 0.01 0.15";
        
        Node = "35.50090023279717 -31.820058199301606 0.01 0.15";
        
        Node = "35.659131190824176 -31.8194252754695 0.01 0.15";
        
        Node = "35.99362547286512 -31.81808729834134 0.01 0.15";
        
        Node = "36.47907627307768 -31.815174593540064 0.01 0.15";
        
        Node = "36.964527684305814 -31.811290982250235 0.01 0.15";
        
        Node = "37.457253637227275 -31.806363722721024 0.01 0.15";
        
        Node = "38.38857314470137 -31.79705052764628 0.01 0.15";
        
        Node = "38.457253637227176 -31.796363722721022 0.01 0.15";
        
        Node = "38.957253637227275 -31.791363722721023 0.01 0.15";
        
        Node = "39.457253637227176 -31.786363722721024 0.01 0.15";
        
        Node = "39.47180186231064 -31.786232788826194 0.01 0.15";
        
        Node = "39.96452768430847 -31.782290982250213 0.01 0.15";
        
        Node = "40.94997988107298 -31.772436460282563 0.01 0.15";
        
        Node = "41.442706284921236 -31.766523743436384 0.01 0.15";
        
        Node = "41.457253637227275 -31.766363722721017 0.01 0.15";
        
        Node = "41.957253637227275 -31.761363722721022 0.01 0.15";
        
        Node = "41.97180186231054 -31.7612327888262 0.01 0.15";
        
        Node = "42.47180186231054 -31.757232788826194 0.01 0.15";
        
        Node = "42.97180186231064 -31.753232788826192 0.01 0.15";
        
        Node = "43.00090023279728 -31.753058199301606 0.01 0.15";
        
        Node = "43.50090023279728 -31.75105819930161 0.01 0.15";
        
        Node = "44.47378847620767 -31.747166646327965 0.01 0.15";
        
        Node = "44.493625472865276 -31.747087298341334 0.01 0.15";
        
        Node = "44.97907627307635 -31.744174593540066 0.01 0.15";
        
        Node = "45.46452768430847 -31.74029098225021 0.01 0.15";
        
        Node = "45.957253637227176 -31.735363722721022 0.01 0.15";
        
        Node = "46.15579615543256 -31.73337829753897 0.01 0.15";
        
        Node = "46.449979881074306 -31.730436460282554 0.01 0.15";
        
        Node = "46.942706284921236 -31.72452374343639 0.01 0.15";
        
        Node = "46.957253637227176 -31.724363722721026 0.01 0.15";
        
        Node = "47.44997988107298 -31.719436460282566 0.01 0.15";
        
        Node = "47.942706284921236 -31.713523743436387 0.01 0.15";
        
        Node = "47.97180186231064 -31.713232788826193 0.01 0.15";
        
        Node = "48.47180186231064 -31.709232788826196 0.01 0.15";
        
        Node = "48.97180186231054 -31.705232788826194 0.01 0.15";
        
        Node = "48.98635078567879 -31.70513094646445 0.01 0.15";
        
        Node = "49.48635078567879 -31.70213094646445 0.01 0.15";
        
        Node = "49.50090023279728 -31.702058199301604 0.01 0.15";
        
        Node = "50.00090023279728 -31.70005819930161 0.01 0.15";
        
        Node = "50.42963799335869 -31.69834324825936 0.01 0.15";
        
        Node = "50.98635087297082 -31.69611639674091 0.01 0.15";
        
        Node = "51.95725378269075 -31.688349173463155 0.01 0.15";
        
        Node = "52.442706284921236 -31.682523743436388 0.01 0.15";
        
        Node = "52.457253637227176 -31.682363722721025 0.01 0.15";
        
        Node = "52.81341587891548 -31.67880210030414 0.01 0.15";
        
        Node = "52.94997988107298 -31.677436460282564 0.01 0.15";
        
        Node = "53.442706284921236 -31.671523743436385 0.01 0.15";
        
        Node = "53.457253637227275 -31.67136372272102 0.01 0.15";
        
        Node = "53.957253637227275 -31.666363722721023 0.01 0.15";
        
        Node = "54.457253637227176 -31.661363722721024 0.01 0.15";
        
        Node = "54.47180186231064 -31.661232788826194 0.01 0.15";
        
        Node = "54.97180186231064 -31.657232788826196 0.01 0.15";
        
        Node = "54.98635078567879 -31.657130946464456 0.01 0.15";
        
        Node = "55.98635078567879 -31.651130946464455 0.01 0.15";
        
        Node = "56.00090023279717 -31.65105819930161 0.01 0.15";
        
        Node = "56.38548751050929 -31.64951985019076 0.01 0.15";
        
        Node = "56.993625472865276 -31.647087298341333 0.01 0.15";
        
        Node = "57.47907627307635 -31.644174593540065 0.01 0.15";
        
        Node = "57.96452768430847 -31.64029098225021 0.01 0.15";
        
        Node = "58.449979881073624 -31.635436460282556 0.01 0.15";
        
        Node = "58.942706284921336 -31.62952374343639 0.01 0.15";
        
        Node = "58.957253637227176 -31.629363722721028 0.01 0.15";
        
        Node = "59.471035602399844 -31.6242259030693 0.01 0.15";
        
        Node = "59.957253637227176 -31.619363722721022 0.01 0.15";
        
        Node = "59.97180186231064 -31.619232788826192 0.01 0.15";
        
        Node = "60.46452768430847 -31.61529098225021 0.01 0.15";
        
        Node = "60.957253637227176 -31.610363722721022 0.01 0.15";
        
        Node = "61.457253637227275 -31.605363722721023 0.01 0.15";
        
        Node = "62.457253637227176 -31.59536372272102 0.01 0.15";
        
        Node = "62.957253637227275 -31.590363722721023 0.01 0.15";
        
        Node = "62.97180186231054 -31.5902327888262 0.01 0.15";
        
        Node = "63.47180186231054 -31.586232788826194 0.01 0.15";
        
        Node = "63.48635078567879 -31.58613094646445 0.01 0.15";
        
        Node = "64.48635078567878 -31.58013094646445 0.01 0.15";
        
        Node = "64.50090023279728 -31.580058199301604 0.01 0.15";
        
        Node = "65.00090023279728 -31.57805819930161 0.01 0.15";
        
        Node = "65.20014479589244 -31.577261221049227 0.01 0.15";
        
        Node = "65.49362547286525 -31.576087298341335 0.01 0.15";
        
        Node = "65.97180197869183 -31.573218239306374 0.01 0.15";
        
        Node = "66.45725363722728 -31.568363722721024 0.01 0.15";
        
        Node = "67.23825861312925 -31.560553672962 0.01 0.15";
        
        Node = "67.44997988107298 -31.558436460282564 0.01 0.15";
        
        Node = "67.94270628492123 -31.552523743436385 0.01 0.15";
        
        Node = "67.95725363722728 -31.55236372272102 0.01 0.15";
        
        Node = "68.45725363722728 -31.547363722721023 0.01 0.15";
        
        Node = "68.95725363722717 -31.542363722721024 0.01 0.15";
        
        Node = "68.97180186231064 -31.542232788826194 0.01 0.15";
        
        Node = "69.47180186231064 -31.538232788826196 0.01 0.15";
        
        Node = "69.97180186231054 -31.534232788826195 0.01 0.15";
        
        Node = "69.98635078567878 -31.53413094646445 0.01 0.15";
        
        Node = "70.48635078567878 -31.53113094646445 0.01 0.15";
        
        Node = "70.50090023279728 -31.531058199301604 0.01 0.15";
        
        Node = "71.00090023279728 -31.52905819930161 0.01 0.15";
        
        Node = "71.15599431304321 -31.528437822980624 0.01 0.15";
        
        Node = "71.99362547286525 -31.525087298341333 0.01 0.15";
        
        Node = "72.47907627307637 -31.522174593540065 0.01 0.15";
        
        Node = "72.95725378269073 -31.518349173463154 0.01 0.15";
        
        Node = "73.43543303784287 -31.512611022401327 0.01 0.15";
        
        Node = "73.92815997983303 -31.505712845213466 0.01 0.15";
        
    };
    
    new DecalRoad(road_2_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "74.06499657050412 -41.27975503600912 0.01 0.3";
        
        Node = "73.56499657050412 -41.28675503600912 0.01 0.3";
        
        Node = "73.55999784023325 -41.28682001943767 0.01 0.3";
        
        Node = "73.05999784023325 -41.29282001943767 0.01 0.3";
        
        Node = "73.04999936003071 -41.2929200038398 0.01 0.3";
        
        Node = "72.54999936003071 -41.296920003839794 0.01 0.3";
        
        Node = "72.54499973000729 -41.29695500121496 0.01 0.3";
        
        Node = "72.04499973000729 -41.29995500121496 0.01 0.3";
        
        Node = "72.03999992000098 -41.29998000023999 0.01 0.3";
        
        Node = "71.17867409874131 -41.30342530352503 0.01 0.3";
        
        Node = "71.03999992000098 -41.303980000239996 0.01 0.3";
        
        Node = "70.54249983750518 -41.30597000056997 0.01 0.3";
        
        Node = "70.04749956251771 -41.3089400022199 0.01 0.3";
        
        Node = "69.54999936003074 -41.3129200038398 0.01 0.3";
        
        Node = "69.05249907755815 -41.31690000609958 0.01 0.3";
        
        Node = "68.55499875009376 -41.321875009374224 0.01 0.3";
        
        Node = "68.05749832265543 -41.3268500136486 0.01 0.3";
        
        Node = "67.55999784023325 -41.33282001943767 0.01 0.3";
        
        Node = "67.55499875009376 -41.33287500937422 0.01 0.3";
        
        Node = "67.40633256934069 -41.33436167118175 0.01 0.3";
        
        Node = "66.55499875009376 -41.342875009374225 0.01 0.3";
        
        Node = "66.05499875009372 -41.34787500937422 0.01 0.3";
        
        Node = "66.04499973000729 -41.34795500121496 0.01 0.3";
        
        Node = "65.54499973000729 -41.35095500121496 0.01 0.3";
        
        Node = "65.53999992000098 -41.35098000023999 0.01 0.3";
        
        Node = "65.22748276439141 -41.35223006886243 0.01 0.3";
        
        Node = "65.03999992000098 -41.352980000239995 0.01 0.3";
        
        Node = "64.54249983750518 -41.35497000056997 0.01 0.3";
        
        Node = "63.54749956251774 -41.3609400022199 0.01 0.3";
        
        Node = "63.05249907755783 -41.36490000609958 0.01 0.3";
        
        Node = "62.55499875009372 -41.36987500937422 0.01 0.3";
        
        Node = "61.55499875009376 -41.379875009374224 0.01 0.3";
        
        Node = "61.05499875009372 -41.38487500937422 0.01 0.3";
        
        Node = "60.55499875009376 -41.38987500937422 0.01 0.3";
        
        Node = "60.54999936003071 -41.3899200038398 0.01 0.3";
        
        Node = "60.05249907755815 -41.39390000609958 0.01 0.3";
        
        Node = "59.62492536049196 -41.398175743270244 0.01 0.3";
        
        Node = "59.05749832265501 -41.403850013648615 0.01 0.3";
        
        Node = "58.559997840233216 -41.40982001943767 0.01 0.3";
        
        Node = "58.55499875009376 -41.40987500937422 0.01 0.3";
        
        Node = "58.05499875009376 -41.41487500937422 0.01 0.3";
        
        Node = "58.04999936003071 -41.414920003839796 0.01 0.3";
        
        Node = "57.54999936003071 -41.418920003839794 0.01 0.3";
        
        Node = "57.54499973000729 -41.41895500121496 0.01 0.3";
        
        Node = "57.04499973000729 -41.42195500121496 0.01 0.3";
        
        Node = "57.03999992000097 -41.42198000023999 0.01 0.3";
        
        Node = "56.41971958955395 -41.42446112156178 0.01 0.3";
        
        Node = "56.042499837505126 -41.425970000569976 0.01 0.3";
        
        Node = "55.04749956251758 -41.4319400022199 0.01 0.3";
        
        Node = "54.55249907755815 -41.43590000609958 0.01 0.3";
        
        Node = "54.05499875009376 -41.440875009374224 0.01 0.3";
        
        Node = "53.5574983226554 -41.4458500136486 0.01 0.3";
        
        Node = "53.05999784023325 -41.45182001943767 0.01 0.3";
        
        Node = "53.05499875009376 -41.45187500937422 0.01 0.3";
        
        Node = "52.955147752903194 -41.45287351934613 0.01 0.3";
        
        Node = "52.55749832265524 -41.456850013648605 0.01 0.3";
        
        Node = "52.05999784023325 -41.46282001943767 0.01 0.3";
        
        Node = "52.04999936003071 -41.4629200038398 0.01 0.3";
        
        Node = "51.04999936003071 -41.470920003839794 0.01 0.3";
        
        Node = "51.03999992000097 -41.47098000023999 0.01 0.3";
        
        Node = "50.468528255203545 -41.473265886899185 0.01 0.3";
        
        Node = "50.03999992000097 -41.474980000239995 0.01 0.3";
        
        Node = "49.542499837505176 -41.47697000056997 0.01 0.3";
        
        Node = "49.04749956251774 -41.4799400022199 0.01 0.3";
        
        Node = "48.549999360030746 -41.4839200038398 0.01 0.3";
        
        Node = "48.05499870010669 -41.48788000911919 0.01 0.3";
        
        Node = "47.55999784023325 -41.49382001943767 0.01 0.3";
        
        Node = "47.55499875009376 -41.49387500937422 0.01 0.3";
        
        Node = "47.05749832265524 -41.49885001364861 0.01 0.3";
        
        Node = "46.55999784023325 -41.50482001943767 0.01 0.3";
        
        Node = "46.55499875009372 -41.504875009374224 0.01 0.3";
        
        Node = "46.28537014531777 -41.50757129542198 0.01 0.3";
        
        Node = "46.05499875009372 -41.50987500937422 0.01 0.3";
        
        Node = "45.55499875009376 -41.51487500937422 0.01 0.3";
        
        Node = "45.54999936003071 -41.5149200038398 0.01 0.3";
        
        Node = "45.04999936003071 -41.518920003839796 0.01 0.3";
        
        Node = "45.04499973000729 -41.51895500121496 0.01 0.3";
        
        Node = "44.54499973000729 -41.52195500121496 0.01 0.3";
        
        Node = "44.53999992000097 -41.52198000023999 0.01 0.3";
        
        Node = "44.51733692085365 -41.52207065223658 0.01 0.3";
        
        Node = "43.53999992000097 -41.52598000024 0.01 0.3";
        
        Node = "43.044999700011374 -41.52796000111995 0.01 0.3";
        
        Node = "42.54999936003071 -41.531920003839794 0.01 0.3";
        
        Node = "42.05249907755783 -41.53590000609958 0.01 0.3";
        
        Node = "41.5574983226554 -41.5408500136486 0.01 0.3";
        
        Node = "41.05999784023325 -41.54682001943767 0.01 0.3";
        
        Node = "41.05499875009376 -41.54687500937422 0.01 0.3";
        
        Node = "40.05499875009376 -41.556875009374224 0.01 0.3";
        
        Node = "40.04999936003071 -41.5569200038398 0.01 0.3";
        
        Node = "39.55249907755815 -41.56090000609958 0.01 0.3";
        
        Node = "39.05499875009376 -41.565875009374224 0.01 0.3";
        
        Node = "38.55499875009372 -41.57087500937422 0.01 0.3";
        
        Node = "38.50396293646607 -41.571385367510494 0.01 0.3";
        
        Node = "37.55499875009376 -41.580875009374225 0.01 0.3";
        
        Node = "37.05499875009372 -41.58587500937422 0.01 0.3";
        
        Node = "37.049999360030746 -41.585920003839796 0.01 0.3";
        
        Node = "36.549999360030746 -41.5899200038398 0.01 0.3";
        
        Node = "36.54499973000729 -41.58995500121497 0.01 0.3";
        
        Node = "36.04499973000729 -41.59295500121497 0.01 0.3";
        
        Node = "36.03999992000094 -41.59298000024 0.01 0.3";
        
        Node = "35.70957374601513 -41.59430170493594 0.01 0.3";
        
        Node = "35.53999992000094 -41.59498000023999 0.01 0.3";
        
        Node = "35.042499837505126 -41.596970000569975 0.01 0.3";
        
        Node = "34.04999932003777 -41.602925003674784 0.01 0.3";
        
        Node = "33.55499875009372 -41.60787500937422 0.01 0.3";
        
        Node = "32.55749832265524 -41.61785001364861 0.01 0.3";
        
        Node = "32.05999784023325 -41.62382001943767 0.01 0.3";
        
        Node = "32.05499875009372 -41.623875009374224 0.01 0.3";
        
        Node = "31.834185328880935 -41.62608314358635 0.01 0.3";
        
        Node = "31.554998750093716 -41.62887500937422 0.01 0.3";
        
        Node = "31.05499875009376 -41.63387500937422 0.01 0.3";
        
        Node = "31.04999936003071 -41.6339200038398 0.01 0.3";
        
        Node = "30.54999936003071 -41.637920003839795 0.01 0.3";
        
        Node = "30.54499973000729 -41.63795500121496 0.01 0.3";
        
        Node = "29.95456443043784 -41.641497613012376 0.01 0.3";
        
        Node = "29.54499973000729 -41.64395500121496 0.01 0.3";
        
        Node = "29.539999920000973 -41.64398000023999 0.01 0.3";
        
        Node = "28.542499837505126 -41.64797000056998 0.01 0.3";
        
        Node = "28.047499562517572 -41.650940002219905 0.01 0.3";
        
        Node = "27.552499077557954 -41.65490000609958 0.01 0.3";
        
        Node = "27.054998750093716 -41.65987500937422 0.01 0.3";
        
        Node = "26.557498322655277 -41.6648500136486 0.01 0.3";
        
        Node = "25.55999784023325 -41.67682001943767 0.01 0.3";
        
        Node = "25.55499875009376 -41.67687500937422 0.01 0.3";
        
        Node = "25.164407721295547 -41.680780919662205 0.01 0.3";
        
        Node = "25.05499875009376 -41.681875009374224 0.01 0.3";
        
        Node = "25.04999936003071 -41.6819200038398 0.01 0.3";
        
        Node = "24.04999936003071 -41.689920003839795 0.01 0.3";
        
    };
    
    new DecalRoad(road_2_separator_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "24.010000639969295 -36.6900799961602 0.01 0.15";
        
        Node = "25.007500922441853 -36.68209999390042 0.01 0.15";
        
        Node = "25.117817265408327 -36.68099683047076 0.01 0.15";
        
        Node = "25.50250167734472 -36.677149986351395 0.01 0.15";
        
        Node = "26.500002159766748 -36.66517998056233 0.01 0.15";
        
        Node = "26.505001249906247 -36.66512499062578 0.01 0.15";
        
        Node = "27.005001249906247 -36.660124990625775 0.01 0.15";
        
        Node = "27.505001249906282 -36.65512499062578 0.01 0.15";
        
        Node = "27.510000639969295 -36.655079996160204 0.01 0.15";
        
        Node = "28.010000639969295 -36.651079996160206 0.01 0.15";
        
        Node = "28.01500026999271 -36.65104499878504 0.01 0.15";
        
        Node = "28.51500026999271 -36.64804499878504 0.01 0.15";
        
        Node = "28.52000007999903 -36.64801999976001 0.01 0.15";
        
        Node = "29.517500162494876 -36.644029999430025 0.01 0.15";
        
        Node = "29.923622198077812 -36.64159326721653 0.01 0.15";
        
        Node = "30.512500437482434 -36.6380599977801 0.01 0.15";
        
        Node = "31.007500922441853 -36.63409999390042 0.01 0.15";
        
        Node = "31.505001249906247 -36.629124990625776 0.01 0.15";
        
        Node = "31.78137402766717 -36.62636126284817 0.01 0.15";
        
        Node = "32.002501677344604 -36.6241499863514 0.01 0.15";
        
        Node = "32.50000215976675 -36.61817998056233 0.01 0.15";
        
        Node = "32.50500124990624 -36.61812499062578 0.01 0.15";
        
        Node = "33.50500124990624 -36.608124990625775 0.01 0.15";
        
        Node = "34.00500124990628 -36.60312499062578 0.01 0.15";
        
        Node = "34.01500026999271 -36.60304499878504 0.01 0.15";
        
        Node = "35.01500026999271 -36.59704499878504 0.01 0.15";
        
        Node = "35.02000007999903 -36.59701999976001 0.01 0.15";
        
        Node = "35.52000007999903 -36.595019999760005 0.01 0.15";
        
        Node = "35.683763823879126 -36.59436494478449 0.01 0.15";
        
        Node = "36.01750016249483 -36.59302999943003 0.01 0.15";
        
        Node = "36.51250043748226 -36.5900599977801 0.01 0.15";
        
        Node = "37.00750092244217 -36.58609999390042 0.01 0.15";
        
        Node = "37.50500124990628 -36.58112499062578 0.01 0.15";
        
        Node = "38.44493078992442 -36.571725695225595 0.01 0.15";
        
        Node = "38.50500124990624 -36.571124990625776 0.01 0.15";
        
        Node = "39.00500124990628 -36.56612499062578 0.01 0.15";
        
        Node = "39.50500124990624 -36.56112499062578 0.01 0.15";
        
        Node = "39.51000063996929 -36.5610799961602 0.01 0.15";
        
        Node = "40.00750092244185 -36.55709999390042 0.01 0.15";
        
        Node = "41.00250167734476 -36.54714998635139 0.01 0.15";
        
        Node = "41.50000215976675 -36.541179980562326 0.01 0.15";
        
        Node = "41.50500124990628 -36.541124990625775 0.01 0.15";
        
        Node = "42.00500124990628 -36.53612499062578 0.01 0.15";
        
        Node = "42.010000639969256 -36.536079996160204 0.01 0.15";
        
        Node = "42.510000639969256 -36.5320799961602 0.01 0.15";
        
        Node = "43.01000063996929 -36.5280799961602 0.01 0.15";
        
        Node = "43.020000079999065 -36.528019999760005 0.01 0.15";
        
        Node = "43.520000079999065 -36.52601999976001 0.01 0.15";
        
        Node = "44.495050029251594 -36.522119799963 0.01 0.15";
        
        Node = "44.517500162494876 -36.522029999430025 0.01 0.15";
        
        Node = "45.01250043748242 -36.5190599977801 0.01 0.15";
        
        Node = "45.50750092244185 -36.51509999390042 0.01 0.15";
        
        Node = "46.00500124990624 -36.510124990625776 0.01 0.15";
        
        Node = "46.219080345894035 -36.5079841996659 0.01 0.15";
        
        Node = "46.502501677344604 -36.5051499863514 0.01 0.15";
        
        Node = "47.00000215976675 -36.49917998056233 0.01 0.15";
        
        Node = "47.00500124990624 -36.49912499062578 0.01 0.15";
        
        Node = "47.50250167734476 -36.494149986351395 0.01 0.15";
        
        Node = "48.00000215976675 -36.48817998056233 0.01 0.15";
        
        Node = "48.01000063996929 -36.4880799961602 0.01 0.15";
        
        Node = "48.51000063996929 -36.484079996160204 0.01 0.15";
        
        Node = "49.010000639969256 -36.4800799961602 0.01 0.15";
        
        Node = "49.01500026999271 -36.48004499878503 0.01 0.15";
        
        Node = "49.51500026999271 -36.47704499878503 0.01 0.15";
        
        Node = "49.520000079999065 -36.47701999976 0.01 0.15";
        
        Node = "50.020000079999065 -36.47501999976001 0.01 0.15";
        
        Node = "50.448621789639034 -36.47330551292145 0.01 0.15";
        
        Node = "51.01500029998865 -36.471039998880045 0.01 0.15";
        
        Node = "52.005001299893316 -36.46311999088081 0.01 0.15";
        
        Node = "52.50000215976675 -36.45717998056233 0.01 0.15";
        
        Node = "52.50500124990624 -36.45712499062578 0.01 0.15";
        
        Node = "52.88263710815287 -36.453348632043316 0.01 0.15";
        
        Node = "53.00250167734476 -36.452149986351394 0.01 0.15";
        
        Node = "53.50000215976675 -36.44617998056233 0.01 0.15";
        
        Node = "53.50500124990628 -36.446124990625776 0.01 0.15";
        
        Node = "54.00500124990628 -36.44112499062578 0.01 0.15";
        
        Node = "54.50500124990624 -36.43612499062578 0.01 0.15";
        
        Node = "54.51000063996929 -36.4360799961602 0.01 0.15";
        
        Node = "55.01000063996929 -36.432079996160205 0.01 0.15";
        
        Node = "55.01500026999271 -36.43204499878504 0.01 0.15";
        
        Node = "56.01500026999271 -36.42604499878504 0.01 0.15";
        
        Node = "56.02000007999903 -36.42601999976001 0.01 0.15";
        
        Node = "56.402193550025466 -36.424491225879905 0.01 0.15";
        
        Node = "57.017500162494876 -36.42202999943002 0.01 0.15";
        
        Node = "57.51250043748242 -36.419059997780096 0.01 0.15";
        
        Node = "58.00750092244185 -36.41509999390042 0.01 0.15";
        
        Node = "58.502501677344995 -36.410149986351385 0.01 0.15";
        
        Node = "59.00000215976679 -36.40417998056233 0.01 0.15";
        
        Node = "59.00500124990624 -36.40412499062578 0.01 0.15";
        
        Node = "59.54619387041155 -36.398713064420726 0.01 0.15";
        
        Node = "60.00500124990624 -36.39412499062578 0.01 0.15";
        
        Node = "60.01000063996929 -36.3940799961602 0.01 0.15";
        
        Node = "60.50750092244185 -36.39009999390042 0.01 0.15";
        
        Node = "61.00500124990624 -36.385124990625776 0.01 0.15";
        
        Node = "61.50500124990628 -36.38012499062578 0.01 0.15";
        
        Node = "62.50500124990624 -36.370124990625776 0.01 0.15";
        
        Node = "63.00500124990628 -36.36512499062578 0.01 0.15";
        
        Node = "63.010000639969256 -36.365079996160205 0.01 0.15";
        
        Node = "63.510000639969256 -36.3610799961602 0.01 0.15";
        
        Node = "63.51500026999271 -36.36104499878503 0.01 0.15";
        
        Node = "64.51500026999271 -36.35504499878503 0.01 0.15";
        
        Node = "64.52000007999906 -36.35501999976 0.01 0.15";
        
        Node = "65.02000007999906 -36.35301999976001 0.01 0.15";
        
        Node = "65.21347975539788 -36.35224608105841 0.01 0.15";
        
        Node = "65.5175001624949 -36.351029999430025 0.01 0.15";
        
        Node = "66.01000067996225 -36.34807499632522 0.01 0.15";
        
        Node = "66.50500124990629 -36.34312499062578 0.01 0.15";
        
        Node = "67.32034342638046 -36.334971568861036 0.01 0.15";
        
        Node = "67.50250167734477 -36.333149986351394 0.01 0.15";
        
        Node = "68.00000215976675 -36.32717998056233 0.01 0.15";
        
        Node = "68.00500124990629 -36.32712499062578 0.01 0.15";
        
        Node = "68.50500124990629 -36.32212499062578 0.01 0.15";
        
        Node = "69.00500124990624 -36.31712499062578 0.01 0.15";
        
        Node = "69.01000063996929 -36.3170799961602 0.01 0.15";
        
        Node = "69.51000063996929 -36.313079996160205 0.01 0.15";
        
        Node = "70.01000063996926 -36.3090799961602 0.01 0.15";
        
        Node = "70.01500026999271 -36.30904499878503 0.01 0.15";
        
        Node = "70.51500026999271 -36.30604499878503 0.01 0.15";
        
        Node = "70.52000007999906 -36.306019999760004 0.01 0.15";
        
        Node = "71.02000007999906 -36.30401999976001 0.01 0.15";
        
        Node = "71.16705151578476 -36.303431794016866 0.01 0.15";
        
        Node = "72.0175001624949 -36.30002999943002 0.01 0.15";
        
        Node = "72.51250043748242 -36.297059997780096 0.01 0.15";
        
        Node = "73.00500129989331 -36.29311999088081 0.01 0.15";
        
        Node = "73.49750276214621 -36.28720997333377 0.01 0.15";
        
        Node = "73.99500342949588 -36.28024496399088 0.01 0.15";
        
    };
    
    new DecalRoad(road_3) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "74.03 -38.78 0.01 12.000000000000002";
        
        Node = "73.837 -40.092 0.01 12.000000000000002";
        
        Node = "73.638 -41.404 0.01 11.999999999999998";
        
        Node = "73.446 -42.716 0.01 12.0";
        
        Node = "73.245 -44.027 0.01 11.999999999999996";
        
        Node = "73.052 -45.339 0.01 12.0";
        
        Node = "72.853 -46.651 0.01 12.000000000000004";
        
        Node = "72.66 -47.963 0.01 12.0";
        
        Node = "72.455 -49.274 0.01 11.999999999999996";
        
        Node = "72.261 -50.586 0.01 12.0";
        
        Node = "72.064 -51.897 0.01 12.000000000000002";
        
        Node = "71.869 -53.209 0.01 11.999999999999998";
        
        Node = "71.67 -54.521 0.01 12.0";
        
        Node = "71.478 -55.833 0.01 12.000000000000005";
        
        Node = "71.277 -57.144 0.01 12.0";
        
        Node = "71.085 -58.457 0.01 11.999999999999996";
        
        Node = "70.883 -59.767 0.01 11.999999999999996";
        
        Node = "70.693 -61.08 0.01 12.0";
        
        Node = "70.491 -62.391 0.01 12.0";
        
        Node = "70.29 -63.702 0.01 11.999999999999996";
        
        Node = "70.098 -65.014 0.01 12.000000000000004";
        
        Node = "69.9 -66.326 0.01 12.0";
        
        Node = "69.697 -67.637 0.01 12.000000000000005";
        
        Node = "69.552 -68.953 0.01 12.000000000000002";
        
        Node = "69.519 -70.28 0.01 12.0";
        
        Node = "69.473 -71.606 0.01 12.0";
        
        Node = "69.437 -72.932 0.01 11.999999999999996";
        
        Node = "69.398 -74.257 0.01 12.0";
        
        Node = "69.375 -75.584 0.01 12.000000000000002";
        
        Node = "69.352 -76.91 0.01 11.999999999999998";
        
        Node = "69.341 -78.236 0.01 12.000000000000002";
        
        Node = "69.33 -79.562 0.01 11.999999999999998";
        
        Node = "69.342 -80.889 0.01 12.000000000000002";
        
        Node = "69.355 -82.215 0.01 12.000000000000002";
        
        Node = "69.383 -83.541 0.01 12.000000000000004";
        
        Node = "69.423 -84.867 0.01 12.0";
        
        Node = "69.478 -86.192 0.01 12.0";
        
        Node = "69.547 -87.517 0.01 12.0";
        
        Node = "69.641 -88.84 0.01 12.000000000000002";
        
        Node = "69.741 -90.162 0.01 11.999999999999998";
        
        Node = "69.876 -91.482 0.01 12.000000000000002";
        
        Node = "70.022 -92.8 0.01 11.999999999999996";
        
        Node = "70.205 -94.114 0.01 12.000000000000002";
        
        Node = "70.4 -95.426 0.01 12.0";
        
        Node = "70.638 -96.731 0.01 11.999999999999996";
        
        Node = "70.891 -98.033 0.01 12.0";
        
        Node = "71.19 -99.325 0.01 11.999999999999998";
        
        Node = "71.513 -100.611 0.01 12.000000000000004";
        
        Node = "71.891 -101.883 0.01 11.999999999999996";
        
        Node = "72.296 -103.146 0.01 12.0";
        
        Node = "72.744 -104.394 0.01 12.000000000000002";
        
        Node = "73.245 -105.622 0.01 12.000000000000002";
        
        Node = "73.788 -106.832 0.01 12.000000000000002";
        
        Node = "74.379 -108.02 0.01 12.000000000000002";
        
        Node = "75.024 -109.179 0.01 11.999999999999995";
        
        Node = "75.704 -110.317 0.01 12.000000000000002";
        
        Node = "76.424 -111.431 0.01 12.000000000000004";
        
        Node = "77.165 -112.531 0.01 11.999999999999998";
        
        Node = "77.924 -113.619 0.01 11.999999999999995";
        
        Node = "78.693 -114.7 0.01 12.0";
        
        Node = "79.461 -115.781 0.01 12.0";
        
        Node = "80.226 -116.865 0.01 12.000000000000005";
        
        Node = "80.965 -117.966 0.01 12.0";
        
        Node = "81.681 -119.083 0.01 12.000000000000002";
        
        Node = "82.377 -120.212 0.01 12.0";
        
        Node = "83.019 -121.372 0.01 12.0";
        
        Node = "83.628 -122.551 0.01 12.0";
        
        Node = "84.174 -123.759 0.01 12.000000000000004";
        
        Node = "84.668 -124.99 0.01 12.000000000000002";
        
        Node = "85.091 -126.247 0.01 12.0";
        
        Node = "85.46 -127.521 0.01 11.999999999999998";
        
        Node = "85.749 -128.816 0.01 11.999999999999998";
        
        Node = "85.975 -130.123 0.01 12.0";
        
        Node = "86.139 -131.439 0.01 12.0";
        
        Node = "86.231 -132.762 0.01 12.000000000000002";
        
        Node = "86.256 -134.088 0.01 12.000000000000002";
        
        Node = "86.23 -135.414 0.01 12.000000000000004";
        
        Node = "86.153 -136.739 0.01 11.999999999999998";
        
        Node = "86.02 -138.058 0.01 12.0";
        
        Node = "85.837 -139.372 0.01 11.999999999999998";
        
        Node = "85.615 -140.68 0.01 12.0";
        
        Node = "85.351 -141.98 0.01 11.999999999999998";
        
        Node = "85.053 -143.272 0.01 12.000000000000002";
        
        Node = "84.723 -144.557 0.01 12.000000000000002";
        
        Node = "84.359 -145.832 0.01 12.0";
        
        Node = "83.969 -147.1 0.01 12.0";
        
        Node = "83.564 -148.363 0.01 12.000000000000002";
        
        Node = "83.163 -149.627 0.01 12.000000000000002";
        
        Node = "82.765 -150.893 0.01 12.000000000000004";
        
        Node = "82.356 -152.154 0.01 12.0";
        
        Node = "81.958 -153.42 0.01 11.999999999999998";
        
        Node = "81.554 -154.683 0.01 12.0";
        
        Node = "81.155 -155.948 0.01 12.000000000000002";
        
        Node = "80.754 -157.212 0.01 12.000000000000002";
        
        Node = "80.347 -158.474 0.01 12.000000000000002";
        
        Node = "79.95 -159.74 0.01 12.000000000000005";
        
        Node = "79.54 -161.002 0.01 11.999999999999998";
        
        Node = "79.144 -162.268 0.01 12.000000000000002";
        
        Node = "78.738 -163.53 0.01 12.000000000000002";
        
        Node = "78.337 -164.795 0.01 11.999999999999998";
        
        Node = "77.94 -166.06 0.01 12.0";
        
    };
    
    new DecalRoad(road_3_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "79.74351212730053 -39.62047853701905 0.01 0.15";
        
        Node = "79.55051212730054 -40.93247853701905 0.01 0.15";
        
        Node = "79.5466952361747 -40.95802846951125 0.01 0.15";
        
        Node = "79.34995534309223 -42.255127664105174 0.01 0.15";
        
        Node = "79.16013764537443 -43.552215265176784 0.01 0.15";
        
        Node = "79.15429882792877 -43.591185403824284 0.01 0.15";
        
        Node = "78.95595820859583 -44.88483989111526 0.01 0.15";
        
        Node = "78.76551212730054 -46.17947853701905 0.01 0.15";
        
        Node = "78.76169523617469 -46.20502846951129 0.01 0.15";
        
        Node = "78.56463225510714 -47.50425777182585 0.01 0.15";
        
        Node = "78.37351212730053 -48.80347853701906 0.01 0.15";
        
        Node = "78.36566573494962 -48.85519029417594 0.01 0.15";
        
        Node = "78.16437324008545 -50.142480346697525 0.01 0.15";
        
        Node = "77.97388356676362 -51.43074040545133 0.01 0.15";
        
        Node = "77.97188357889688 -51.44415718157339 0.01 0.15";
        
        Node = "77.77557144254604 -52.75057957119748 0.01 0.15";
        
        Node = "77.58125196686605 -54.05800086397778 0.01 0.15";
        
        Node = "77.5786952361747 -54.07502846951125 0.01 0.15";
        
        Node = "77.3819553430922 -55.37212766410538 0.01 0.15";
        
        Node = "77.19213764537443 -56.669215265176774 0.01 0.15";
        
        Node = "77.18629882792877 -56.70818540382429 0.01 0.15";
        
        Node = "76.9883324651973 -57.99939884432658 0.01 0.15";
        
        Node = "76.79922885972324 -59.29259172967777 0.01 0.15";
        
        Node = "76.7925440029242 -59.33709457144326 0.01 0.15";
        
        Node = "76.59462954450393 -60.62059922753512 0.01 0.15";
        
        Node = "76.40846892394678 -61.907067094859 0.01 0.15";
        
        Node = "76.40064507871642 -61.9594388298251 0.01 0.15";
        
        Node = "76.19897274570907 -63.268312238600544 0.01 0.15";
        
        Node = "76.00128471422428 -64.55771029470287 0.01 0.15";
        
        Node = "75.81213764537443 -65.85021526517677 0.01 0.15";
        
        Node = "75.80833896222941 -65.87577371533642 0.01 0.15";
        
        Node = "75.61033896222942 -67.18777371533642 0.01 0.15";
        
        Node = "75.60698831132798 -67.20969079115147 0.01 0.15";
        
        Node = "75.42338131498045 -68.39544828973088 0.01 0.15";
        
        Node = "75.31911863567677 -69.34172198603187 0.01 0.15";
        
        Node = "75.29221512975121 -70.42356902734122 0.01 0.15";
        
        Node = "75.29052816693559 -70.48021892585149 0.01 0.15";
        
        Node = "75.24528241916812 -71.7844767854094 0.01 0.15";
        
        Node = "75.20987284105087 -73.08872957939505 0.01 0.15";
        
        Node = "75.20950001518085 -73.10190754761665 0.01 0.15";
        
        Node = "75.1715275328364 -74.39199829393453 0.01 0.15";
        
        Node = "75.14913276263144 -75.6840791661948 0.01 0.15";
        
        Node = "75.12658456822497 -76.98403161997133 0.01 0.15";
        
        Node = "75.11580129998471 -78.28390559147805 0.01 0.15";
        
        Node = "75.10521660739126 -79.55984217137971 0.01 0.15";
        
        Node = "75.1167440216676 -80.83458206677207 0.01 0.15";
        
        Node = "75.12940233886438 -82.1257304208424 0.01 0.15";
        
        Node = "75.15616161416102 -83.3929732438197 0.01 0.15";
        
        Node = "75.1943878672075 -84.66017353230993 0.01 0.15";
        
        Node = "75.24676858676581 -85.92207268530593 0.01 0.15";
        
        Node = "75.31134677125439 -87.16216101062997 0.01 0.15";
        
        Node = "75.40054354137581 -88.41755810499842 0.01 0.15";
        
        Node = "75.49379435067323 -89.6503338039103 0.01 0.15";
        
        Node = "75.61856301600884 -90.87029408719178 0.01 0.15";
        
        Node = "75.75297092994767 -92.08364772124227 0.01 0.15";
        
        Node = "75.92114406720223 -93.2911859854637 0.01 0.15";
        
        Node = "76.09830799927153 -94.48318126174526 0.01 0.15";
        
        Node = "76.31331640277008 -95.66211389437386 0.01 0.15";
        
        Node = "76.54041208248488 -96.83080391409189 0.01 0.15";
        
        Node = "76.80415501061105 -97.9704556302759 0.01 0.15";
        
        Node = "77.08393502501495 -99.08437853592113 0.01 0.15";
        
        Node = "77.40909806305922 -100.17857796553037 0.01 0.15";
        
        Node = "77.76490524145925 -101.28816924039272 0.01 0.15";
        
        Node = "78.13771613281905 -102.3267138663236 0.01 0.15";
        
        Node = "78.55452578806572 -103.34835509714776 0.01 0.15";
        
        Node = "79.00972655470537 -104.36270671341659 0.01 0.15";
        
        Node = "79.49009368455793 -105.32831779677504 0.01 0.15";
        
        Node = "80.02698365399314 -106.2930549666594 0.01 0.15";
        
        Node = "80.60929071057068 -107.26756295252004 0.01 0.15";
        
        Node = "81.24432634312284 -108.25010419510768 0.01 0.15";
        
        Node = "81.74991760311221 -109.0006445270757 0.01 0.15";
        
        Node = "81.9283183765719 -109.2654769843033 0.01 0.15";
        
        Node = "82.64517426230454 -110.29306486793588 0.01 0.15";
        
        Node = "83.39877298717292 -111.35241496102135 0.01 0.15";
        
        Node = "84.16882919023263 -112.4363072913056 0.01 0.15";
        
        Node = "84.17935127167407 -112.45116722986099 0.01 0.15";
        
        Node = "84.94435127167407 -113.53516722986097 0.01 0.15";
        
        Node = "85.02101646234303 -113.6465466251848 0.01 0.15";
        
        Node = "85.76001646234303 -114.7475466251848 0.01 0.15";
        
        Node = "85.82690273334366 -114.8495072899964 0.01 0.15";
        
        Node = "86.54290273334365 -115.9665072899964 0.01 0.15";
        
        Node = "86.59693321594804 -116.05245126811353 0.01 0.15";
        
        Node = "87.29293321594804 -117.18145126811353 0.01 0.15";
        
        Node = "87.42977192192315 -117.41555209148731 0.01 0.15";
        
        Node = "88.07177192192316 -118.57555209148731 0.01 0.15";
        
        Node = "88.14992579726847 -118.72167446095295 0.01 0.15";
        
        Node = "88.75892579726846 -119.90067446095296 0.01 0.15";
        
        Node = "88.89042698399659 -120.17245270425317 0.01 0.15";
        
        Node = "89.4364269839966 -121.38045270425317 0.01 0.15";
        
        Node = "89.53354742163722 -121.60821492584176 0.01 0.15";
        
        Node = "90.02754742163722 -122.83921492584176 0.01 0.15";
        
        Node = "90.14139841917593 -123.14811652242534 0.01 0.15";
        
        Node = "90.56439841917592 -124.40511652242535 0.01 0.15";
        
        Node = "90.63801373617741 -124.64036886291251 0.01 0.15";
        
        Node = "91.00701373617741 -125.91436886291251 0.01 0.15";
        
        Node = "91.09635149117703 -126.26315785254813 0.01 0.15";
        
        Node = "91.38535149117703 -127.55815785254813 0.01 0.15";
        
        Node = "91.43955387182338 -127.83201746363268 0.01 0.15";
        
        Node = "91.66555387182338 -129.13901746363265 0.01 0.15";
        
        Node = "91.70567231326913 -129.40884326795126 0.01 0.15";
        
        Node = "91.86967231326913 -130.72484326795126 0.01 0.15";
        
        Node = "91.9000874620073 -131.03838016137212 0.01 0.15";
        
        Node = "91.9920874620073 -132.36138016137213 0.01 0.15";
        
        Node = "92.00497387752586 -132.65313925570274 0.01 0.15";
        
        Node = "92.02997387752586 -133.97913925570273 0.01 0.15";
        
        Node = "92.02989017006759 -134.2012135327464 0.01 0.15";
        
        Node = "92.00389017006759 -135.5272135327464 0.01 0.15";
        
        Node = "91.99527312400639 -135.74903851362149 0.01 0.15";
        
        Node = "91.91827312400639 -137.0740385136215 0.01 0.15";
        
        Node = "91.89886337431665 -137.31837818709946 0.01 0.15";
        
        Node = "91.76586337431664 -138.63737818709944 0.01 0.15";
        
        Node = "91.73979591066258 -138.8545925811653 0.01 0.15";
        
        Node = "91.55679591066259 -140.1685925811653 0.01 0.15";
        
        Node = "91.53057622487466 -140.3383409189008 0.01 0.15";
        
        Node = "91.30857622487466 -141.6463409189008 0.01 0.15";
        
        Node = "91.27447984291099 -141.82930975271424 0.01 0.15";
        
        Node = "91.010479842911 -143.12930975271422 0.01 0.15";
        
        Node = "90.97825593247362 -143.2779274519173 0.01 0.15";
        
        Node = "90.68025593247361 -144.5699274519173 0.01 0.15";
        
        Node = "90.64649636882696 -144.7084621025003 0.01 0.15";
        
        Node = "90.31649636882696 -145.9934621025003 0.01 0.15";
        
        Node = "90.27612938754362 -146.14236399769874 0.01 0.15";
        
        Node = "89.91212938754362 -147.41736399769874 0.01 0.15";
        
        Node = "89.87881198639437 -147.52973397057872 0.01 0.15";
        
        Node = "89.48881198639437 -148.79773397057872 0.01 0.15";
        
        Node = "89.46818679015152 -148.86339718924097 0.01 0.15";
        
        Node = "89.06592235783104 -150.1178662707737 0.01 0.15";
        
        Node = "88.66991082599242 -151.3661420220057 0.01 0.15";
        
        Node = "88.27417144391667 -152.62495121222656 0.01 0.15";
        
        Node = "88.25827722754514 -152.67472116262172 0.01 0.15";
        
        Node = "87.85733690376182 -153.91087213643772 0.01 0.15";
        
        Node = "87.46717144391667 -155.15195121222655 0.01 0.15";
        
        Node = "87.45845168109511 -155.1794477269694 0.01 0.15";
        
        Node = "87.05801429378077 -156.43131015315262 0.01 0.15";
        
        Node = "86.66253177366757 -157.68515824323586 0.01 0.15";
        
        Node = "86.65963144428832 -157.69432690598072 0.01 0.15";
        
        Node = "86.25863144428833 -158.9583269059807 0.01 0.15";
        
        Node = "86.2502403980203 -158.9845593042744 0.01 0.15";
        
        Node = "85.85041809004463 -160.22430316831685 0.01 0.15";
        
        Node = "85.46041530439994 -161.46798963337022 0.01 0.15";
        
        Node = "85.44241361327094 -161.52438160177581 0.01 0.15";
        
        Node = "85.04220076827646 -162.75625626124665 0.01 0.15";
        
        Node = "84.65565687539245 -163.9920253733455 0.01 0.15";
        
        Node = "84.64151151541398 -164.03661305487964 0.01 0.15";
        
        Node = "84.23929556091205 -165.2868508247846 0.01 0.15";
        
        Node = "83.84453860075399 -166.53215644722837 0.01 0.15";
        
        Node = "83.45002518495596 -167.78923320033797 0.01 0.15";
        
    };
    
    new DecalRoad(road_3_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "72.42997481504403 -164.33076679966203 0.01 0.15";
        
        Node = "72.82697481504404 -163.06576679966201 0.01 0.15";
        
        Node = "72.83197075988949 -163.0499274898938 0.01 0.15";
        
        Node = "73.23297075988948 -161.78492748989382 0.01 0.15";
        
        Node = "73.24048848458602 -161.76138694512036 0.01 0.15";
        
        Node = "73.6393255134288 -160.52165214118054 0.01 0.15";
        
        Node = "74.02834312460756 -159.2779746266545 0.01 0.15";
        
        Node = "74.04758638672907 -159.2176183982242 0.01 0.15";
        
        Node = "74.44844103041513 -157.98376825107346 0.01 0.15";
        
        Node = "74.83658469560005 -156.74601036662978 0.01 0.15";
        
        Node = "74.8507596019797 -156.70144069572558 0.01 0.15";
        
        Node = "75.25353280229264 -155.45254689033268 0.01 0.15";
        
        Node = "75.64891457413154 -154.20625621800258 0.01 0.15";
        
        Node = "76.04646822633244 -152.94584175676414 0.01 0.15";
        
        Node = "76.05354831890489 -152.92355227303057 0.01 0.15";
        
        Node = "76.45315410124506 -151.6742896416057 0.01 0.15";
        
        Node = "76.84682855608332 -150.42204878777343 0.01 0.15";
        
        Node = "76.86272277245487 -150.37227883737827 0.01 0.15";
        
        Node = "77.2636630962386 -149.13612786356092 0.01 0.15";
        
        Node = "77.65382855608333 -147.89504878777345 0.01 0.15";
        
        Node = "77.65836855571166 -147.88067309401933 0.01 0.15";
        
        Node = "78.05936855571166 -146.61667309401932 0.01 0.15";
        
        Node = "78.06481320984847 -146.59960281075902 0.01 0.15";
        
        Node = "78.45930496517279 -145.36937296637723 0.01 0.15";
        
        Node = "78.8219591388389 -144.19028196071406 0.01 0.15";
        
        Node = "79.14869257086808 -143.04581732929321 0.01 0.15";
        
        Node = "79.44176865493417 -141.9045968201268 0.01 0.15";
        
        Node = "79.70665365312543 -140.7561692440761 0.01 0.15";
        
        Node = "79.9369975792131 -139.62189991106862 0.01 0.15";
        
        Node = "80.12905161913838 -138.4903382704278 0.01 0.15";
        
        Node = "80.2851128180433 -137.36976769468419 0.01 0.15";
        
        Node = "80.39483852835156 -136.28158565034903 0.01 0.15";
        
        Node = "80.4582862086781 -135.18979115122337 0.01 0.15";
        
        Node = "80.47993264691982 -134.085822800896 0.01 0.15";
        
        Node = "80.45977956358983 -133.0169032610738 0.01 0.15";
        
        Node = "80.3888429004526 -131.99680320313297 0.01 0.15";
        
        Node = "80.26119959798729 -130.97254353213086 0.01 0.15";
        
        Node = "80.08223665754782 -129.93756758896987 0.01 0.15";
        
        Node = "79.86287833659053 -128.95462978398822 0.01 0.15";
        
        Node = "79.57828296071295 -127.97204303908842 0.01 0.15";
        
        Node = "79.24712291299952 -126.9879575072307 0.01 0.15";
        
        Node = "78.86057089572478 -126.02470743989227 0.01 0.15";
        
        Node = "78.42777021254328 -125.06715574523432 0.01 0.15";
        
        Node = "77.92610281063993 -124.09594742529333 0.01 0.15";
        
        Node = "77.38989866907642 -123.12710505112875 0.01 0.15";
        
        Node = "76.79170431563354 -122.15675817607556 0.01 0.15";
        
        Node = "76.13600213643433 -121.13382614511812 0.01 0.15";
        
        Node = "75.46866413624069 -120.13959185795548 0.01 0.15";
        
        Node = "74.74789805604267 -119.11827103320434 0.01 0.15";
        
        Node = "73.98619846696896 -118.04613918972947 0.01 0.15";
        
        Node = "73.21822701282709 -116.96658503897865 0.01 0.15";
        
        Node = "73.18762432029612 -116.92314443096993 0.01 0.15";
        
        Node = "72.42862432029612 -115.83514443096993 0.01 0.15";
        
        Node = "72.37537232182807 -115.75746737229582 0.01 0.15";
        
        Node = "71.63437232182807 -114.6574673722958 0.01 0.15";
        
        Node = "71.5738476649384 -114.56574836736482 0.01 0.15";
        
        Node = "70.85384766493839 -113.45174836736481 0.01 0.15";
        
        Node = "70.76967683996084 -113.31635210915886 0.01 0.15";
        
        Node = "70.74660524500229 -113.27923939665942 0.01 0.15";
        
        Node = "70.0666052450023 -112.14123939665944 0.01 0.15";
        
        Node = "69.97779682379387 -111.98728390737958 0.01 0.15";
        
        Node = "69.33279682379387 -110.82828390737956 0.01 0.15";
        
        Node = "69.20847077686585 -110.59220771958951 0.01 0.15";
        
        Node = "68.61747077686584 -109.4042077195895 0.01 0.15";
        
        Node = "68.51921186752541 -109.19642310407741 0.01 0.15";
        
        Node = "67.97621186752542 -107.9864231040774 0.01 0.15";
        
        Node = "67.89788791986149 -107.8035172248774 0.01 0.15";
        
        Node = "67.39688791986148 -106.57551722487739 0.01 0.15";
        
        Node = "67.30860077635113 -106.34516895207906 0.01 0.15";
        
        Node = "66.86060077635113 -105.09716895207904 0.01 0.15";
        
        Node = "66.79681320984848 -104.90939718924099 0.01 0.15";
        
        Node = "66.39181320984848 -103.64639718924099 0.01 0.15";
        
        Node = "66.35525980744364 -103.52805486854271 0.01 0.15";
        
        Node = "65.97725980744364 -102.25605486854272 0.01 0.15";
        
        Node = "65.91196763248588 -102.01779117784378 0.01 0.15";
        
        Node = "65.58896763248588 -100.73179117784377 0.01 0.15";
        
        Node = "65.56369926847236 -100.62706185659962 0.01 0.15";
        
        Node = "65.26469926847237 -99.33506185659962 0.01 0.15";
        
        Node = "65.2220352050881 -99.13457303618486 0.01 0.15";
        
        Node = "64.96903520508812 -97.83257303618487 0.01 0.15";
        
        Node = "64.95670934114659 -97.76712810483303 0.01 0.15";
        
        Node = "64.71870934114659 -96.46212810483303 0.01 0.15";
        
        Node = "64.68774803313397 -96.27500086397782 0.01 0.15";
        
        Node = "64.49274803313396 -94.96300086397784 0.01 0.15";
        
        Node = "64.48520408933742 -94.9105925811653 0.01 0.15";
        
        Node = "64.30220408933742 -93.59659258116528 0.01 0.15";
        
        Node = "64.28210931165626 -93.43583007625051 0.01 0.15";
        
        Node = "64.13610931165626 -92.11783007625053 0.01 0.15";
        
        Node = "64.13096752985093 -92.06956013899253 0.01 0.15";
        
        Node = "63.99596752985094 -90.74956013899254 0.01 0.15";
        
        Node = "63.98245130007155 -90.59759369893555 0.01 0.15";
        
        Node = "63.88245130007156 -89.27559369893555 0.01 0.15";
        
        Node = "63.88052170138734 -89.24928568410405 0.01 0.15";
        
        Node = "63.78652170138733 -87.92628568410402 0.01 0.15";
        
        Node = "63.77981459015997 -87.81732890058788 0.01 0.15";
        
        Node = "63.71081459015997 -86.49232890058789 0.01 0.15";
        
        Node = "63.70796883791597 -86.4315107274827 0.01 0.15";
        
        Node = "63.65296883791598 -85.10651072748271 0.01 0.15";
        
        Node = "63.65062578190259 -85.04112893568924 0.01 0.15";
        
        Node = "63.610625781902584 -83.71512893568922 0.01 0.15";
        
        Node = "63.6092870807681 -83.66291852318133 0.01 0.15";
        
        Node = "63.58128708076811 -82.33691852318134 0.01 0.15";
        
        Node = "63.58027751748016 -82.27161492629924 0.01 0.15";
        
        Node = "63.56727751748016 -80.94561492629924 0.01 0.15";
        
        Node = "63.55523611088249 -79.61422092439292 0.01 0.15";
        
        Node = "63.55519870001528 -79.514094408522 0.01 0.15";
        
        Node = "63.56619870001528 -78.18809440852203 0.01 0.15";
        
        Node = "63.57719870001529 -76.86209440852195 0.01 0.15";
        
        Node = "63.57786854561694 -76.80984538201298 0.01 0.15";
        
        Node = "63.600867891248384 -75.48388310778239 0.01 0.15";
        
        Node = "63.62386723736856 -74.1569208338052 0.01 0.15";
        
        Node = "63.62549998481914 -74.08709245238336 0.01 0.15";
        
        Node = "63.664306051172275 -72.76868122371934 0.01 0.15";
        
        Node = "63.70012715894914 -71.44927042060493 0.01 0.15";
        
        Node = "63.70147183306441 -71.4057810741485 0.01 0.15";
        
        Node = "63.74648936151542 -70.10810188445214 0.01 0.15";
        
        Node = "63.77878487024879 -68.80943097265879 0.01 0.15";
        
        Node = "63.81173871513057 -68.320524402503 0.01 0.15";
        
        Node = "63.95673871513057 -67.00452440250302 0.01 0.15";
        
        Node = "63.990011688672034 -66.75330920884852 0.01 0.15";
        
        Node = "64.19131532685266 -65.45326453074603 0.01 0.15";
        
        Node = "64.385733106951 -64.16500126059941 0.01 0.15";
        
        Node = "64.57586235462557 -62.86578473482322 0.01 0.15";
        
        Node = "64.58170117207123 -62.82681459617572 0.01 0.15";
        
        Node = "64.78270117207123 -61.515814596175716 0.01 0.15";
        
        Node = "64.9813229438995 -60.2267291026032 0.01 0.15";
        
        Node = "65.16753107605321 -58.939932905141006 0.01 0.15";
        
        Node = "65.17545599707579 -58.88690542855673 0.01 0.15";
        
        Node = "65.3740268700986 -57.59914382628 0.01 0.15";
        
        Node = "65.56277114027675 -56.30840827032222 0.01 0.15";
        
        Node = "65.56870117207123 -56.2688145961757 0.01 0.15";
        
        Node = "65.7667152857757 -54.97728970529727 0.01 0.15";
        
        Node = "65.95586235462557 -53.68478473482321 0.01 0.15";
        
        Node = "65.9603047638253 -53.65497153048875 0.01 0.15";
        
        Node = "66.15801370627626 -52.35148342749548 0.01 0.15";
        
        Node = "66.35174803313394 -51.04799913602221 0.01 0.15";
        
        Node = "66.35311642110311 -51.038842818426616 0.01 0.15";
        
        Node = "66.54910854842596 -49.734550032029404 0.01 0.15";
        
        Node = "66.74211643323638 -48.429259594548654 0.01 0.15";
        
        Node = "66.74933426505038 -48.381809705824054 0.01 0.15";
        
        Node = "66.95029398050566 -47.096647818205156 0.01 0.15";
        
        Node = "67.13948787269946 -45.810521462980944 0.01 0.15";
        
        Node = "67.14330476382531 -45.78497153048869 0.01 0.15";
        
        Node = "67.34036774489286 -44.48574222817416 0.01 0.15";
        
        Node = "67.53148787269947 -43.18652146298095 0.01 0.15";
        
        Node = "67.53670117207123 -43.15181459617571 0.01 0.15";
        
        Node = "67.7347152857757 -41.860289705297276 0.01 0.15";
        
        Node = "67.92386235462557 -40.56778473482322 0.01 0.15";
        
        Node = "67.92830476382531 -40.53797153048876 0.01 0.15";
        
        Node = "68.12536774489303 -39.23874222817295 0.01 0.15";
        
        Node = "68.31648787269947 -37.93952146298096 0.01 0.15";
        
    };
    
    new DecalRoad(road_3_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "76.00870549863222 -39.07107481801526 0.01 0.3";
        
        Node = "75.81570549863223 -40.383074818015245 0.01 0.3";
        
        Node = "75.81438363157565 -40.391923279484416 0.01 0.3";
        
        Node = "75.61616635258636 -41.698762827393665 0.01 0.3";
        
        Node = "75.42492212826821 -43.00559836023439 0.01 0.3";
        
        Node = "75.42290002698832 -43.01909451214695 0.01 0.3";
        
        Node = "75.22282102462206 -44.32408740817765 0.01 0.3";
        
        Node = "75.03070549863223 -45.63007481801526 0.01 0.3";
        
        Node = "75.02938363157566 -45.63892327948443 0.01 0.3";
        
        Node = "74.83105446064326 -46.94650052703862 0.01 0.3";
        
        Node = "74.63870549863222 -48.254074818015255 0.01 0.3";
        
        Node = "74.63598813331588 -48.271983651662666 0.01 0.3";
        
        Node = "74.43227211777851 -49.57477241444067 0.01 0.3";
        
        Node = "74.2394878153294 -50.878550789766706 0.01 0.3";
        
        Node = "74.23879517883874 -50.88319729231978 0.01 0.3";
        
        Node = "74.04203340001582 -52.19261197270981 0.01 0.3";
        
        Node = "73.84726907943413 -53.50302627323906 0.01 0.3";
        
        Node = "73.84638363157565 -53.50892327948442 0.01 0.3";
        
        Node = "73.64816635258633 -54.81576282739387 0.01 0.3";
        
        Node = "73.4569221282682 -56.12259836023438 0.01 0.3";
        
        Node = "73.45490002698831 -56.13609451214694 0.01 0.3";
        
        Node = "73.25495063729772 -57.44024202400949 0.01 0.3";
        
        Node = "73.06395371765306 -58.746382417204416 0.01 0.3";
        
        Node = "73.06163861573133 -58.761794656776885 0.01 0.3";
        
        Node = "72.86105352190611 -60.06261878009879 0.01 0.3";
        
        Node = "72.67238317712443 -61.36643016272174 0.01 0.3";
        
        Node = "72.66967362033469 -61.384567560112586 0.01 0.3";
        
        Node = "72.4677870980806 -62.69483107830622 0.01 0.3";
        
        Node = "72.26793410016444 -63.998349885610196 0.01 0.3";
        
        Node = "72.07692212826821 -65.30359836023437 0.01 0.3";
        
        Node = "72.07560656700585 -65.31244977154508 0.01 0.3";
        
        Node = "71.87760656700586 -66.62444977154507 0.01 0.3";
        
        Node = "71.87644616842528 -66.63204010083167 0.01 0.3";
        
        Node = "71.68016236016638 -67.89966607436577 0.01 0.3";
        
        Node = "71.54927052317811 -69.08762233282474 0.01 0.3";
        
        Node = "71.51838186311731 -70.32972087526969 0.01 0.3";
        
        Node = "71.51779763357077 -70.34933988774078 0.01 0.3";
        
        Node = "71.47205884646516 -71.66781014213281 0.01 0.3";
        
        Node = "71.43626332157605 -72.98627864221474 0.01 0.3";
        
        Node = "71.43613420439164 -72.99084244073305 0.01 0.3";
        
        Node = "71.39749005466197 -74.30375265590766 0.01 0.3";
        
        Node = "71.37469965805418 -75.61865945149604 0.01 0.3";
        
        Node = "71.3518561275238 -76.93563865626628 0.01 0.3";
        
        Node = "71.34093118614189 -78.25259068103136 0.01 0.3";
        
        Node = "71.33007501554675 -79.56125270004495 0.01 0.3";
        
        Node = "71.34191134949528 -80.87015396251923 0.01 0.3";
        
        Node = "71.35479301778854 -82.18408412843051 0.01 0.3";
        
        Node = "71.38236332957956 -83.48973532253437 0.01 0.3";
        
        Node = "71.42174904492036 -84.79537178608173 0.01 0.3";
        
        Node = "71.47584193481065 -86.09851867889341 0.01 0.3";
        
        Node = "71.5433105701314 -87.39411203831348 0.01 0.3";
        
        Node = "71.63564711389644 -88.69369977662363 0.01 0.3";
        
        Node = "71.73330973183488 -89.9847995857698 0.01 0.3";
        
        Node = "71.86476641247064 -91.27015379643056 0.01 0.3";
        
        Node = "72.00675183721128 -92.55191263073304 0.01 0.3";
        
        Node = "72.18461699297039 -93.82904276552796 0.01 0.3";
        
        Node = "72.37343999974776 -95.09948268805053 0.01 0.3";
        
        Node = "72.60347754208472 -96.36082299372168 0.01 0.3";
        
        Node = "72.84750634891256 -97.61665503518357 0.01 0.3";
        
        Node = "73.13429610757092 -98.8558937247709 0.01 0.3";
        
        Node = "73.4423281471913 -100.08229992586006 0.01 0.3";
        
        Node = "73.80202963222833 -101.29272397074655 0.01 0.3";
        
        Node = "74.18999315721527 -102.50259540792806 0.01 0.3";
        
        Node = "74.61195363907159 -103.67805675024209 0.01 0.3";
        
        Node = "75.08379680971964 -104.83459050983453 0.01 0.3";
        
        Node = "75.59639014881571 -105.97683349382392 0.01 0.3";
        
        Node = "76.14907573491178 -107.08781568719469 0.01 0.3";
        
        Node = "76.75663503168603 -108.17953851659216 0.01 0.3";
        
        Node = "77.40280197768683 -109.26091790563468 0.01 0.3";
        
        Node = "78.09337708852735 -110.32939106324069 0.01 0.3";
        
        Node = "78.15589078566681 -110.42219142336675 0.01 0.3";
        
        Node = "78.81463406980843 -111.40008293828683 0.01 0.3";
        
        Node = "79.55903870556045 -112.46716099322516 0.01 0.3";
        
        Node = "80.32270493062265 -113.5406631899641 0.01 0.3";
        
        Node = "81.0914170355784 -114.62266486278982 0.01 0.3";
        
        Node = "81.09506104646721 -114.62781116185663 0.01 0.3";
        
        Node = "81.86006104646721 -115.71181116185662 0.01 0.3";
        
        Node = "81.8866117618504 -115.75038411261811 0.01 0.3";
        
        Node = "82.62561176185041 -116.8513841126181 0.01 0.3";
        
        Node = "82.64877583838742 -116.88669516536672 0.01 0.3";
        
        Node = "83.3647758383874 -118.00369516536672 0.01 0.3";
        
        Node = "83.38348769383482 -118.03345931363239 0.01 0.3";
        
        Node = "84.07948769383482 -119.1624593136324 0.01 0.3";
        
        Node = "84.12687772187815 -119.24353319185708 0.01 0.3";
        
        Node = "84.76887772187816 -120.40353319185708 0.01 0.3";
        
        Node = "84.79594399905402 -120.45413834145558 0.01 0.3";
        
        Node = "85.40494399905401 -121.63313834145558 0.01 0.3";
        
        Node = "85.45048553558324 -121.72726067679764 0.01 0.3";
        
        Node = "85.99648553558325 -122.93526067679764 0.01 0.3";
        
        Node = "86.03012031918172 -123.01413936825689 0.01 0.3";
        
        Node = "86.52412031918172 -124.24513936825689 0.01 0.3";
        
        Node = "86.56354923607825 -124.35211827616462 0.01 0.3";
        
        Node = "86.98654923607823 -125.60911827616462 0.01 0.3";
        
        Node = "87.01204371815668 -125.69059094819481 0.01 0.3";
        
        Node = "87.38104371815668 -126.96459094819481 0.01 0.3";
        
        Node = "87.41198320040763 -127.08538367187815 0.01 0.3";
        
        Node = "87.70098320040763 -128.38038367187815 0.01 0.3";
        
        Node = "87.71975458764446 -128.4752268272321 0.01 0.3";
        
        Node = "87.94575458764446 -129.78222682723208 0.01 0.3";
        
        Node = "87.95964842017979 -129.87567299322987 0.01 0.3";
        
        Node = "88.12364842017979 -131.19167299322987 0.01 0.3";
        
        Node = "88.13418180502417 -131.3002571987436 0.01 0.3";
        
        Node = "88.22618180502417 -132.6232571987436 0.01 0.3";
        
        Node = "88.23064463290939 -132.72429930933427 0.01 0.3";
        
        Node = "88.2556446329094 -134.05029930933426 0.01 0.3";
        
        Node = "88.25561564331345 -134.1272081498689 0.01 0.3";
        
        Node = "88.22961564331345 -135.45320814986889 0.01 0.3";
        
        Node = "88.22663138493728 -135.53003065406804 0.01 0.3";
        
        Node = "88.14963138493728 -136.85503065406806 0.01 0.3";
        
        Node = "88.14290939370274 -136.93965045440675 0.01 0.3";
        
        Node = "88.00990939370273 -138.25865045440673 0.01 0.3";
        
        Node = "88.00088170066236 -138.33387621858537 0.01 0.3";
        
        Node = "87.81788170066237 -139.6478762185854 0.01 0.3";
        
        Node = "87.80880128999989 -139.70666352169727 0.01 0.3";
        
        Node = "87.58680128999988 -141.01466352169726 0.01 0.3";
        
        Node = "87.57499301918995 -141.07802935158935 0.01 0.3";
        
        Node = "87.31099301918995 -142.37802935158933 0.01 0.3";
        
        Node = "87.29983322336749 -142.42949868464666 0.01 0.3";
        
        Node = "87.00183322336748 -143.72149868464666 0.01 0.3";
        
        Node = "86.99014159959376 -143.76947605281396 0.01 0.3";
        
        Node = "86.66014159959376 -145.05447605281395 0.01 0.3";
        
        Node = "86.6461616926558 -145.10604380872684 0.01 0.3";
        
        Node = "86.28216169265579 -146.38104380872684 0.01 0.3";
        
        Node = "86.2706231987513 -146.41995981665062 0.01 0.3";
        
        Node = "85.8806231987513 -147.68795981665062 0.01 0.3";
        
        Node = "85.87348027364554 -147.71070032527825 0.01 0.3";
        
        Node = "85.46942765639285 -148.97074589463665 0.01 0.3";
        
        Node = "85.07015526441228 -150.22930026736344 0.01 0.3";
        
        Node = "84.67293816239538 -151.49280994362826 0.01 0.3";
        
        Node = "84.6674336718771 -151.51004629008546 0.01 0.3";
        
        Node = "84.26122490173545 -152.76244056673247 0.01 0.3";
        
        Node = "83.86593816239538 -154.01980994362825 0.01 0.3";
        
        Node = "83.8629183311152 -154.0293325461366 0.01 0.3";
        
        Node = "83.46015213637303 -155.2884753777192 0.01 0.3";
        
        Node = "83.06237031122686 -156.5496132444107 0.01 0.3";
        
        Node = "83.0613658681518 -156.5527885388678 0.01 0.3";
        
        Node = "82.6603658681518 -157.81678853886777 0.01 0.3";
        
        Node = "82.65745987810227 -157.82587335212966 0.01 0.3";
        
        Node = "82.25294565889003 -159.08016559941674 0.01 0.3";
        
        Node = "81.85836893658873 -160.33843796826676 0.01 0.3";
        
        Node = "81.85213458468259 -160.35796765429467 0.01 0.3";
        
        Node = "81.44552407559314 -161.609534635931 0.01 0.3";
        
        Node = "81.05279891788484 -162.86506506436208 0.01 0.3";
        
        Node = "81.04790009191827 -162.8805066856726 0.01 0.3";
        
        Node = "80.64321058386565 -164.1384331860726 0.01 0.3";
        
        Node = "80.24437267558623 -165.39661262241538 0.01 0.3";
        
        Node = "79.84823383028778 -166.6588686408097 0.01 0.3";
        
    };
    
    new DecalRoad(road_3_separator_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "76.03176616971221 -165.46113135919032 0.01 0.15";
        
        Node = "76.42876616971222 -164.1961313591903 0.01 0.15";
        
        Node = "76.4304963670613 -164.1906458839459 0.01 0.15";
        
        Node = "76.83149636706129 -162.92564588394592 0.01 0.15";
        
        Node = "76.83409990808174 -162.9174933143274 0.01 0.15";
        
        Node = "77.23761922542957 -161.66320420473883 0.01 0.15";
        
        Node = "77.63120108211518 -160.40493493563793 0.01 0.15";
        
        Node = "77.63786541531742 -160.38403234570535 0.01 0.15";
        
        Node = "78.04469819235163 -159.13178121249274 0.01 0.15";
        
        Node = "78.43863106341126 -157.87556203173324 0.01 0.15";
        
        Node = "78.44354012189773 -157.86012664787032 0.01 0.15";
        
        Node = "78.84907629516685 -156.60266558972384 0.01 0.15";
        
        Node = "79.24813058844421 -155.34479869021612 0.01 0.15";
        
        Node = "79.64662968877315 -154.0813867555893 0.01 0.15";
        
        Node = "79.6490816688848 -154.07366745386338 0.01 0.15";
        
        Node = "80.05155986190358 -152.81542498410414 0.01 0.15";
        
        Node = "80.44806183760461 -151.55419005637174 0.01 0.15";
        
        Node = "80.45356632812289 -151.53695370991454 0.01 0.15";
        
        Node = "80.85977509826455 -150.28455943326753 0.01 0.15";
        
        Node = "81.25506183760461 -149.02719005637175 0.01 0.15";
        
        Node = "81.25663413184819 -149.02221146113223 0.01 0.15";
        
        Node = "81.65763413184818 -147.75821146113222 0.01 0.15";
        
        Node = "81.65951972635445 -147.75229967472174 0.01 0.15";
        
        Node = "82.06088050741911 -146.5006486463645 0.01 0.15";
        
        Node = "82.44141009137275 -145.26343964007424 0.01 0.15";
        
        Node = "82.7925039206469 -144.03364669412773 0.01 0.15";
        
        Node = "83.1097164172933 -142.79844045718642 0.01 0.15";
        
        Node = "83.39624801839842 -141.55616250877088 0.01 0.15";
        
        Node = "83.64859223522525 -140.31355841076004 0.01 0.15";
        
        Node = "83.86022133996138 -139.06666260447687 0.01 0.15";
        
        Node = "84.03389188503664 -137.8196511496742 0.01 0.15";
        
        Node = "84.15883152497024 -136.58058810401695 0.01 0.15";
        
        Node = "84.2311380809275 -135.33635191384357 0.01 0.15";
        
        Node = "84.25563035391163 -134.0872459916525 0.01 0.15";
        
        Node = "84.23230893977136 -132.85027818565308 0.01 0.15";
        
        Node = "84.14760360188836 -131.63217859848777 0.01 0.15";
        
        Node = "83.99619466596961 -130.4172142102617 0.01 0.15";
        
        Node = "83.78648455672652 -129.20442167583377 0.01 0.15";
        
        Node = "83.52160288713091 -128.01749516328593 0.01 0.15";
        
        Node = "83.18183392578801 -126.84441750271455 0.01 0.15";
        
        Node = "82.79063996986994 -125.68193333583739 0.01 0.15";
        
        Node = "82.33385139245891 -124.54366058524431 0.01 0.15";
        
        Node = "81.82705461906255 -123.42239592908538 0.01 0.15";
        
        Node = "81.25522608160696 -122.31535841568612 0.01 0.15";
        
        Node = "80.64986533993991 -121.22156019086714 0.01 0.15";
        
        Node = "79.98773742532725 -120.14750499604287 0.01 0.15";
        
        Node = "79.29261978750978 -119.06308264766005 0.01 0.15";
        
        Node = "78.5784377961005 -117.99905778630466 0.01 0.15";
        
        Node = "77.82875690252685 -116.93676485998594 0.01 0.15";
        
        Node = "77.06293886301123 -115.85883608301151 0.01 0.15";
        
        Node = "76.29429506937736 -114.77833681003591 0.01 0.15";
        
        Node = "76.28369673430169 -114.76329244362594 0.01 0.15";
        
        Node = "75.52469673430168 -113.67529244362595 0.01 0.15";
        
        Node = "75.50625448374998 -113.64839129776479 0.01 0.15";
        
        Node = "74.76525448374998 -112.5483912977648 0.01 0.15";
        
        Node = "74.74429356361503 -112.5166271402129 0.01 0.15";
        
        Node = "74.35302231209559 -111.91124356494532 0.01 0.15";
        
        Node = "74.02429356361502 -111.40262714021293 0.01 0.15";
        
        Node = "73.98715333160251 -111.34288377373485 0.01 0.15";
        
        Node = "73.30715333160252 -110.20488377373488 0.01 0.15";
        
        Node = "73.27639716841345 -110.15156585536954 0.01 0.15";
        
        Node = "72.63139716841346 -108.99256585536955 0.01 0.15";
        
        Node = "72.58834052878471 -108.91080786825609 0.01 0.15";
        
        Node = "71.9973405287847 -107.7228078682561 0.01 0.15";
        
        Node = "71.96331146927287 -107.65084782825193 0.01 0.15";
        
        Node = "71.42031146927287 -106.44084782825192 0.01 0.15";
        
        Node = "71.39318629259273 -106.37750380082332 0.01 0.15";
        
        Node = "70.89218629259273 -105.14950380082334 0.01 0.15";
        
        Node = "70.86161065847658 -105.06972950721354 0.01 0.15";
        
        Node = "70.41361065847659 -103.82172950721352 0.01 0.15";
        
        Node = "70.39151972635446 -103.75670032527825 0.01 0.15";
        
        Node = "69.98651972635446 -102.49370032527827 0.01 0.15";
        
        Node = "69.97386053937443 -102.45271597178967 0.01 0.15";
        
        Node = "69.59586053937443 -101.18071597178968 0.01 0.15";
        
        Node = "69.57324853073105 -101.09820040791126 0.01 0.15";
        
        Node = "69.25024853073104 -99.81220040791126 0.01 0.15";
        
        Node = "69.24149758215493 -99.77593051310811 0.01 0.15";
        
        Node = "68.94249758215494 -98.48393051310808 0.01 0.15";
        
        Node = "68.92772214894826 -98.41449715538869 0.01 0.15";
        
        Node = "68.67472214894826 -97.1124971553887 0.01 0.15";
        
        Node = "68.67045345147935 -97.08983224409803 0.01 0.15";
        
        Node = "68.43245345147935 -95.78483224409803 0.01 0.15";
        
        Node = "68.42173092056588 -95.72002627323909 0.01 0.15";
        
        Node = "68.22673092056587 -94.4080262732391 0.01 0.15";
        
        Node = "68.22411829933763 -94.38987621858539 0.01 0.15";
        
        Node = "68.04111829933764 -93.07587621858539 0.01 0.15";
        
        Node = "68.03415906897187 -93.02020089220798 0.01 0.15";
        
        Node = "67.88815906897187 -91.70220089220797 0.01 0.15";
        
        Node = "67.88637836531635 -91.68548403081991 0.01 0.15";
        
        Node = "67.75137836531634 -90.36548403081991 0.01 0.15";
        
        Node = "67.7466974199382 -90.31285496067034 0.01 0.15";
        
        Node = "67.6466974199382 -88.99085496067033 0.01 0.15";
        
        Node = "67.64602916065363 -88.98174395986285 0.01 0.15";
        
        Node = "67.55202916065362 -87.65874395986287 0.01 0.15";
        
        Node = "67.54970635157055 -87.62101000886162 0.01 0.15";
        
        Node = "67.48070635157055 -86.2960100088616 0.01 0.15";
        
        Node = "67.47972080966787 -86.27494743808924 0.01 0.15";
        
        Node = "67.42472080966787 -84.94994743808925 0.01 0.15";
        
        Node = "67.42390936169787 -84.92730439331228 0.01 0.15";
        
        Node = "67.38390936169786 -83.60130439331229 0.01 0.15";
        
        Node = "67.38344574225735 -83.58322286517102 0.01 0.15";
        
        Node = "67.35544574225736 -82.25722286517103 0.01 0.15";
        
        Node = "67.35509610994984 -82.23460690088285 0.01 0.15";
        
        Node = "67.34209610994984 -80.90860690088283 0.01 0.15";
        
        Node = "67.3300817700026 -79.58008516862094 0.01 0.15";
        
        Node = "67.3300688138581 -79.54540931896867 0.01 0.15";
        
        Node = "67.3410688138581 -78.21940931896867 0.01 0.15";
        
        Node = "67.35206881385811 -76.89340931896862 0.01 0.15";
        
        Node = "67.35230079501886 -76.87531441801315 0.01 0.15";
        
        Node = "67.37530056838048 -75.5493274842083 0.01 0.15";
        
        Node = "67.39830034194581 -74.22234054850395 0.01 0.15";
        
        Node = "67.39886579560836 -74.19815755926697 0.01 0.15";
        
        Node = "67.43779863244067 -72.87543938483591 0.01 0.15";
        
        Node = "67.47373667842395 -71.55172135778525 0.01 0.15";
        
        Node = "67.47420236642924 -71.5366601122592 0.01 0.15";
        
        Node = "67.51986211654211 -70.22046818509264 0.01 0.15";
        
        Node = "67.5526181368827 -68.90327912473032 0.01 0.15";
        
        Node = "67.56403072385476 -68.73396083203568 0.01 0.15";
        
        Node = "67.70903072385475 -67.41796083203567 0.01 0.15";
        
        Node = "67.72055383157473 -67.3309598991683 0.01 0.15";
        
        Node = "67.92296634696214 -66.02375395004077 0.01 0.15";
        
        Node = "68.11972575132455 -64.71997446254835 0.01 0.15";
        
        Node = "68.3110778717318 -63.41240163976562 0.01 0.15";
        
        Node = "68.31309997301169 -63.39890548785306 0.01 0.15";
        
        Node = "68.51409997301168 -62.08790548785305 0.01 0.15";
        
        Node = "68.71493002386124 -60.784494927308856 0.01 0.15";
        
        Node = "68.90361682287556 -59.48056983727827 0.01 0.15";
        
        Node = "68.90636138426866 -59.462205343223104 0.01 0.15";
        
        Node = "69.1071738078265 -58.159906952823235 0.01 0.15";
        
        Node = "69.29804628234693 -56.85461758279558 0.01 0.15";
        
        Node = "69.30009997301168 -56.840905487853064 0.01 0.15";
        
        Node = "69.50006589983556 -55.5366501143898 0.01 0.15";
        
        Node = "69.69107787173179 -54.23140163976561 0.01 0.15";
        
        Node = "69.69261636842435 -54.22107672051558 0.01 0.15";
        
        Node = "69.89116924892676 -52.91202456363544 0.01 0.15";
        
        Node = "70.08573092056587 -51.60297372676095 0.01 0.15";
        
        Node = "70.08620482116125 -51.599802707680226 0.01 0.15";
        
        Node = "70.28285577434606 -50.2911255522219 0.01 0.15";
        
        Node = "70.47651218467061 -48.98144921023331 0.01 0.15";
        
        Node = "70.47901186668412 -48.96501634833734 0.01 0.15";
        
        Node = "70.6826126339412 -47.66296461236641 0.01 0.15";
        
        Node = "70.87429450136777 -46.35992518198475 0.01 0.15";
        
        Node = "70.87561636842435 -46.35107672051558 0.01 0.15";
        
        Node = "71.07394553935674 -45.04349947296137 0.01 0.15";
        
        Node = "71.26629450136778 -43.735925181984754 0.01 0.15";
        
        Node = "71.26809997301169 -43.723905487853074 0.01 0.15";
        
        Node = "71.46806589983557 -42.41965011438981 0.01 0.15";
        
        Node = "71.6590778717318 -41.11440163976562 0.01 0.15";
        
        Node = "71.66061636842436 -41.10407672051559 0.01 0.15";
        
        Node = "71.85894553935663 -39.7964994729621 0.01 0.15";
        
        Node = "72.05129450136778 -38.48892518198474 0.01 0.15";
        
    };
    
    new DecalRoad(road_4) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "120.5 -192.3 0.01 12.0";
        
        Node = "120.077 -192.034 0.01 12.000000000000004";
        
        Node = "119.652 -191.77 0.01 12.0";
        
        Node = "119.227 -191.506 0.01 12.000000000000002";
        
        Node = "118.802 -191.244 0.01 12.0";
        
        Node = "118.375 -190.982 0.01 12.000000000000004";
        
        Node = "117.949 -190.721 0.01 12.000000000000002";
        
        Node = "117.523 -190.46 0.01 12.000000000000004";
        
        Node = "117.096 -190.199 0.01 12.000000000000002";
        
        Node = "116.67 -189.938 0.01 12.000000000000002";
        
        Node = "116.244 -189.677 0.01 12.0";
        
        Node = "115.818 -189.415 0.01 12.0";
        
        Node = "115.392 -189.152 0.01 11.999999999999995";
        
        Node = "114.968 -188.888 0.01 12.0";
        
        Node = "114.543 -188.624 0.01 12.000000000000002";
        
        Node = "114.119 -188.36 0.01 11.999999999999998";
        
        Node = "113.694 -188.096 0.01 12.0";
        
        Node = "113.269 -187.833 0.01 12.0";
        
        Node = "112.843 -187.571 0.01 11.999999999999998";
        
        Node = "112.416 -187.31 0.01 11.999999999999998";
        
        Node = "111.989 -187.05 0.01 12.0";
        
        Node = "111.563 -186.789 0.01 12.000000000000002";
        
        Node = "111.137 -186.528 0.01 12.000000000000002";
        
        Node = "110.711 -186.266 0.01 12.000000000000002";
        
        Node = "110.285 -186.003 0.01 12.000000000000005";
        
        Node = "109.86 -185.74 0.01 12.000000000000005";
        
        Node = "109.435 -185.476 0.01 12.000000000000004";
        
        Node = "109.011 -185.212 0.01 12.000000000000002";
        
        Node = "108.587 -184.947 0.01 12.0";
        
        Node = "108.161 -184.684 0.01 12.0";
        
        Node = "107.736 -184.422 0.01 11.999999999999996";
        
        Node = "107.309 -184.161 0.01 12.0";
        
        Node = "106.883 -183.9 0.01 11.999999999999998";
        
        Node = "106.456 -183.639 0.01 11.999999999999998";
        
        Node = "106.03 -183.378 0.01 11.999999999999998";
        
        Node = "105.604 -183.116 0.01 11.999999999999998";
        
        Node = "105.178 -182.854 0.01 12.000000000000002";
        
        Node = "104.753 -182.591 0.01 12.0";
        
        Node = "104.327 -182.329 0.01 12.000000000000002";
        
        Node = "103.902 -182.066 0.01 12.0";
        
        Node = "103.477 -181.803 0.01 12.0";
        
        Node = "103.051 -181.54 0.01 11.999999999999998";
        
        Node = "102.626 -181.277 0.01 12.0";
        
        Node = "102.2 -181.015 0.01 11.999999999999998";
        
        Node = "101.775 -180.753 0.01 12.0";
        
        Node = "101.349 -180.491 0.01 12.0";
        
        Node = "100.923 -180.229 0.01 12.000000000000002";
        
        Node = "100.497 -179.967 0.01 11.999999999999998";
        
        Node = "100.071 -179.705 0.01 12.0";
        
        Node = "99.646 -179.442 0.01 12.000000000000002";
        
        Node = "99.22 -179.18 0.01 12.0";
        
        Node = "98.795 -178.917 0.01 12.0";
        
        Node = "98.369 -178.654 0.01 11.999999999999996";
        
        Node = "97.944 -178.391 0.01 11.999999999999998";
        
        Node = "97.519 -178.129 0.01 11.999999999999995";
        
        Node = "97.093 -177.866 0.01 11.999999999999996";
        
        Node = "96.668 -177.604 0.01 12.000000000000002";
        
        Node = "96.242 -177.342 0.01 12.000000000000002";
        
        Node = "95.816 -177.08 0.01 12.000000000000004";
        
        Node = "95.39 -176.818 0.01 12.000000000000004";
        
        Node = "94.964 -176.556 0.01 12.000000000000002";
        
        Node = "94.538 -176.294 0.01 12.000000000000002";
        
        Node = "94.113 -176.031 0.01 11.999999999999998";
        
        Node = "93.687 -175.769 0.01 11.999999999999998";
        
        Node = "93.262 -175.506 0.01 11.999999999999998";
        
        Node = "92.837 -175.243 0.01 11.999999999999998";
        
        Node = "92.411 -174.98 0.01 12.000000000000002";
        
        Node = "91.986 -174.717 0.01 12.000000000000004";
        
        Node = "91.56 -174.455 0.01 12.0";
        
        Node = "91.135 -174.193 0.01 12.0";
        
        Node = "90.709 -173.931 0.01 11.999999999999995";
        
        Node = "90.283 -173.669 0.01 11.999999999999996";
        
        Node = "89.857 -173.407 0.01 11.999999999999995";
        
        Node = "89.431 -173.145 0.01 11.999999999999996";
        
        Node = "89.006 -172.882 0.01 11.999999999999996";
        
        Node = "88.58 -172.62 0.01 11.999999999999995";
        
        Node = "88.155 -172.357 0.01 11.999999999999996";
        
        Node = "87.729 -172.094 0.01 12.0";
        
        Node = "87.304 -171.831 0.01 11.999999999999998";
        
        Node = "86.879 -171.569 0.01 12.0";
        
        Node = "86.453 -171.306 0.01 11.999999999999998";
        
        Node = "86.028 -171.044 0.01 12.0";
        
        Node = "85.602 -170.782 0.01 11.999999999999998";
        
        Node = "85.176 -170.52 0.01 12.0";
        
        Node = "84.75 -170.258 0.01 12.000000000000004";
        
        Node = "84.324 -169.996 0.01 12.000000000000004";
        
        Node = "83.898 -169.734 0.01 12.000000000000002";
        
        Node = "83.473 -169.471 0.01 12.000000000000002";
        
        Node = "83.047 -169.209 0.01 12.000000000000002";
        
        Node = "82.622 -168.946 0.01 12.0";
        
        Node = "82.197 -168.683 0.01 12.0";
        
        Node = "81.771 -168.42 0.01 12.0";
        
        Node = "81.346 -168.157 0.01 11.999999999999998";
        
        Node = "80.92 -167.895 0.01 12.0";
        
        Node = "80.495 -167.633 0.01 11.999999999999998";
        
        Node = "80.069 -167.371 0.01 11.999999999999998";
        
        Node = "79.643 -167.109 0.01 11.999999999999998";
        
        Node = "79.217 -166.847 0.01 12.0";
        
        Node = "78.791 -166.585 0.01 11.999999999999998";
        
        Node = "78.366 -166.322 0.01 12.0";
        
        Node = "77.94 -166.06 0.01 12.0";
        
    };
    
    new DecalRoad(road_4_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "117.42576261998337 -197.18873087122913 0.01 0.15";
        
        Node = "117.01623591382224 -196.93120343898593 0.01 0.15";
        
        Node = "116.60475570325929 -196.67560161407155 0.01 0.15";
        
        Node = "116.18810211269309 -196.4167862072257 0.01 0.15";
        
        Node = "115.77661556672685 -196.16311685418296 0.01 0.15";
        
        Node = "115.35639416601853 -195.90527608840878 0.01 0.15";
        
        Node = "114.50858756327541 -195.3858452825028 0.01 0.15";
        
        Node = "114.08415943780713 -195.1264173182236 0.01 0.15";
        
        Node = "114.07901733120784 -195.12327056285577 0.01 0.15";
        
        Node = "113.65301733120783 -194.86227056285574 0.01 0.15";
        
        Node = "113.5415651056569 -194.7939864528351 0.01 0.15";
        
        Node = "113.22701733120807 -194.6012705628559 0.01 0.15";
        
        Node = "113.2186260026495 -194.59611955294395 0.01 0.15";
        
        Node = "112.7926260026495 -194.33411955294395 0.01 0.15";
        
        Node = "112.78426100233543 -194.3289650684604 0.01 0.15";
        
        Node = "112.35826100233542 -194.0659650684604 0.01 0.15";
        
        Node = "112.33957493539774 -194.05437964920995 0.01 0.15";
        
        Node = "112.1000817783533 -193.9052612684087 0.01 0.15";
        
        Node = "111.91816446835819 -193.79199199992118 0.01 0.15";
        
        Node = "111.49575570325906 -193.52960161407137 0.01 0.15";
        
        Node = "111.49057493539782 -193.52637964920999 0.01 0.15";
        
        Node = "111.06916446836901 -193.26399199992792 0.01 0.15";
        
        Node = "110.65092451113844 -193.00419117943645 0.01 0.15";
        
        Node = "110.23685611546608 -192.74795591340862 0.01 0.15";
        
        Node = "109.82438701785355 -192.4942777360037 0.01 0.15";
        
        Node = "109.4083642702809 -192.2399874851455 0.01 0.15";
        
        Node = "108.9855734831498 -191.9825504719041 0.01 0.15";
        
        Node = "108.97201733120784 -191.97427056285576 0.01 0.15";
        
        Node = "108.54601733120784 -191.71327056285574 0.01 0.15";
        
        Node = "108.34261951842791 -191.58865359305395 0.01 0.15";
        
        Node = "108.12001733120808 -191.4522705628559 0.01 0.15";
        
        Node = "108.1116260026495 -191.44711955294395 0.01 0.15";
        
        Node = "107.6856260026495 -191.18511955294395 0.01 0.15";
        
        Node = "107.67726100233543 -191.1799650684604 0.01 0.15";
        
        Node = "107.25126100233543 -190.9169650684604 0.01 0.15";
        
        Node = "107.24609771423441 -190.91377365570523 0.01 0.15";
        
        Node = "106.82109771423441 -190.65077365570525 0.01 0.15";
        
        Node = "106.81275570325906 -190.64560161407138 0.01 0.15";
        
        Node = "106.77766081187067 -190.62380149330306 0.01 0.15";
        
        Node = "106.38775570325906 -190.38160161407137 0.01 0.15";
        
        Node = "106.38257493539757 -190.37837964920985 0.01 0.15";
        
        Node = "105.95857493539756 -190.11437964920984 0.01 0.15";
        
        Node = "105.9502561214817 -190.10919020562943 0.01 0.15";
        
        Node = "105.53973547577841 -189.8526148020649 0.01 0.15";
        
        Node = "105.12886323677628 -189.59895424136639 0.01 0.15";
        
        Node = "104.71480188094324 -189.3436975937705 0.01 0.15";
        
        Node = "104.2971594378072 -189.08841731822363 0.01 0.15";
        
        Node = "104.29201733120807 -189.0852705628559 0.01 0.15";
        
        Node = "103.86858756327541 -188.8258452825028 0.01 0.15";
        
        Node = "103.44415943780713 -188.56641731822359 0.01 0.15";
        
        Node = "103.43901733120784 -188.56327056285576 0.01 0.15";
        
        Node = "103.01301733120783 -188.30227056285574 0.01 0.15";
        
        Node = "103.00462600264974 -188.29711955294408 0.01 0.15";
        
        Node = "102.69157559749046 -188.10458620517008 0.01 0.15";
        
        Node = "102.57862600264974 -188.0351195529441 0.01 0.15";
        
        Node = "102.1526260026495 -187.77311955294397 0.01 0.15";
        
        Node = "102.13909771423417 -187.7647736557051 0.01 0.15";
        
        Node = "101.78534804779346 -187.54586503859005 0.01 0.15";
        
        Node = "101.72085611546608 -187.50595591340863 0.01 0.15";
        
        Node = "101.62323138231409 -187.44591441085976 0.01 0.15";
        
        Node = "101.3016260026495 -187.24811955294396 0.01 0.15";
        
        Node = "101.28809771423417 -187.2397736557051 0.01 0.15";
        
        Node = "101.07792793749798 -187.10971565268952 0.01 0.15";
        
        Node = "100.44067851967681 -186.71537071883782 0.01 0.15";
        
        Node = "100.01726100233543 -186.4539650684604 0.01 0.15";
        
        Node = "100.01209771423417 -186.4507736557051 0.01 0.15";
        
        Node = "99.59385611546608 -186.1919559134086 0.01 0.15";
        
        Node = "99.1746260026495 -185.93411955294394 0.01 0.15";
        
        Node = "99.16946611591943 -185.93094236921462 0.01 0.15";
        
        Node = "98.74704522583964 -185.67053231462424 0.01 0.15";
        
        Node = "98.32362600264975 -185.4101195529441 0.01 0.15";
        
        Node = "97.34985452156643 -184.8112272335924 0.01 0.15";
        
        Node = "97.0456260026495 -184.62411955294397 0.01 0.15";
        
        Node = "97.03209771423417 -184.6157736557051 0.01 0.15";
        
        Node = "96.83340727567945 -184.4928193372583 0.01 0.15";
        
        Node = "96.61385611546608 -184.35695591340863 0.01 0.15";
        
        Node = "96.28151030637888 -184.15255543927518 0.01 0.15";
        
        Node = "96.1946260026495 -184.09911955294396 0.01 0.15";
        
        Node = "96.18109771423417 -184.0907736557051 0.01 0.15";
        
        Node = "96.12598716538184 -184.0566699513565 0.01 0.15";
        
        Node = "95.7586785196768 -183.82937071883782 0.01 0.15";
        
        Node = "95.33526100233543 -183.5679650684604 0.01 0.15";
        
        Node = "95.33009771423417 -183.5647736557051 0.01 0.15";
        
        Node = "94.90927971424773 -183.30436157571347 0.01 0.15";
        
        Node = "94.48846611591944 -183.04494236921462 0.01 0.15";
        
        Node = "94.06086323677452 -182.78095424136532 0.01 0.15";
        
        Node = "93.64004522584399 -182.52153231462697 0.01 0.15";
        
        Node = "92.00813344563664 -181.51786826201118 0.01 0.15";
        
        Node = "91.5126260026495 -181.21311955294397 0.01 0.15";
        
        Node = "91.49909771423417 -181.2047736557051 0.01 0.15";
        
        Node = "91.17404639326138 -181.00362425002078 0.01 0.15";
        
        Node = "91.08085611546608 -180.94595591340862 0.01 0.15";
        
        Node = "90.93978923045047 -180.8591964676948 0.01 0.15";
        
        Node = "90.6616260026495 -180.68811955294396 0.01 0.15";
        
        Node = "90.64809771423417 -180.6797736557051 0.01 0.15";
        
        Node = "90.46662628296593 -180.56747486412027 0.01 0.15";
        
        Node = "89.80067851967681 -180.15537071883782 0.01 0.15";
        
        Node = "89.37726100233543 -179.8939650684604 0.01 0.15";
        
        Node = "89.37209771423441 -179.89077365570523 0.01 0.15";
        
        Node = "88.95385611546814 -179.63195591340988 0.01 0.15";
        
        Node = "88.5346260026495 -179.37411955294397 0.01 0.15";
        
        Node = "88.52946611591943 -179.37094236921465 0.01 0.15";
        
        Node = "88.10704522584399 -179.11053231462697 0.01 0.15";
        
        Node = "86.66641236970418 -178.2245092904283 0.01 0.15";
        
        Node = "86.4056260026495 -178.06411955294396 0.01 0.15";
        
        Node = "86.39209771423417 -178.0557736557051 0.01 0.15";
        
        Node = "86.22210562114707 -177.95057854868887 0.01 0.15";
        
        Node = "85.97385611546608 -177.79695591340862 0.01 0.15";
        
        Node = "85.59806815451394 -177.56583749610942 0.01 0.15";
        
        Node = "85.5546260026495 -177.53911955294396 0.01 0.15";
        
        Node = "85.54109771423417 -177.5307736557051 0.01 0.15";
        
        Node = "85.51468551084868 -177.51442916278654 0.01 0.15";
        
        Node = "85.1186785196768 -177.26937071883782 0.01 0.15";
        
        Node = "84.69526100233543 -177.0079650684604 0.01 0.15";
        
        Node = "84.69009771423417 -177.0047736557051 0.01 0.15";
        
        Node = "84.26927971424773 -176.74436157571347 0.01 0.15";
        
        Node = "83.84846611591944 -176.48494236921462 0.01 0.15";
        
        Node = "83.42086323678419 -176.22095424137126 0.01 0.15";
        
        Node = "83.00004522584399 -175.96153231462696 0.01 0.15";
        
        Node = "81.32469129377236 -174.93115031884582 0.01 0.15";
        
        Node = "80.8726260026495 -174.65311955294396 0.01 0.15";
        
        Node = "80.85909771423417 -174.6447736557051 0.01 0.15";
        
        Node = "80.56274473872922 -174.46138346145148 0.01 0.15";
        
        Node = "80.44085611546608 -174.38595591340862 0.01 0.15";
        
        Node = "80.2563470785852 -174.27247852452882 0.01 0.15";
        
        Node = "80.0216260026495 -174.12811955294396 0.01 0.15";
        
        Node = "80.00809771423417 -174.1197736557051 0.01 0.15";
        
        Node = "79.85532462843311 -174.02523407555057 0.01 0.15";
        
        Node = "79.16067851967681 -173.5953707188378 0.01 0.15";
        
        Node = "78.73726100233543 -173.3339650684604 0.01 0.15";
        
        Node = "78.73209771423441 -173.33077365570523 0.01 0.15";
        
        Node = "78.31385611546814 -173.07195591340988 0.01 0.15";
        
        Node = "77.8946260026495 -172.81411955294396 0.01 0.15";
        
        Node = "77.88946611591943 -172.81094236921464 0.01 0.15";
        
        Node = "77.46704522584399 -172.55053231462696 0.01 0.15";
        
        Node = "75.98297021784015 -171.6377913472631 0.01 0.15";
        
        Node = "75.7656260026495 -171.50411955294396 0.01 0.15";
        
        Node = "75.75209771423417 -171.4957736557051 0.01 0.15";
        
        Node = "75.61080396661511 -171.40833776011965 0.01 0.15";
        
        Node = "75.33385611546608 -171.23695591340862 0.01 0.15";
        
        Node = "74.9146260026495 -170.97911955294396 0.01 0.15";
        
    };
    
    new DecalRoad(road_4_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "80.9653739973505 -161.14088044705605 0.01 0.15";
        
        Node = "81.3913739973505 -161.40288044705605 0.01 0.15";
        
        Node = "81.40490228576583 -161.4112263442949 0.01 0.15";
        
        Node = "81.68792955644292 -161.58637027885507 0.01 0.15";
        
        Node = "81.82314388453392 -161.6700440865914 0.01 0.15";
        
        Node = "82.02507481206483 -161.79423634718552 0.01 0.15";
        
        Node = "83.5203739973505 -162.71388044705606 0.01 0.15";
        
        Node = "83.52553388408057 -162.71705763078538 0.01 0.15";
        
        Node = "83.94795477415602 -162.97746768537306 0.01 0.15";
        
        Node = "84.3713739973505 -163.23788044705606 0.01 0.15";
        
        Node = "84.38490228576559 -163.24622634429477 0.01 0.15";
        
        Node = "84.807321480318 -163.50762928115893 0.01 0.15";
        
        Node = "85.23073899766457 -163.76903493153958 0.01 0.15";
        
        Node = "85.23590228576583 -163.7722263442949 0.01 0.15";
        
        Node = "85.95544461174877 -164.2174960660208 0.01 0.15";
        
        Node = "86.07914388453392 -164.29404408659138 0.01 0.15";
        
        Node = "86.26387807092904 -164.40765994770763 0.01 0.15";
        
        Node = "86.4983739973505 -164.55188044705605 0.01 0.15";
        
        Node = "86.51190228576583 -164.5602263442949 0.01 0.15";
        
        Node = "86.66669712096184 -164.65601703054563 0.01 0.15";
        
        Node = "86.93014388453392 -164.8190440865914 0.01 0.15";
        
        Node = "87.3235788856473 -165.0610158478395 0.01 0.15";
        
        Node = "89.0533739973505 -166.12488044705606 0.01 0.15";
        
        Node = "89.05853388408057 -166.12805763078538 0.01 0.15";
        
        Node = "89.48353388408057 -166.39005763078538 0.01 0.15";
        
        Node = "89.91113676322549 -166.65404575863468 0.01 0.15";
        
        Node = "90.33453388408057 -166.91505763078536 0.01 0.15";
        
        Node = "90.34290228576583 -166.9202263442949 0.01 0.15";
        
        Node = "90.7653214803232 -167.18162928116217 0.01 0.15";
        
        Node = "91.18873899766457 -167.4430349315396 0.01 0.15";
        
        Node = "91.19390228576583 -167.4462263442949 0.01 0.15";
        
        Node = "91.61214388453392 -167.70504408659139 0.01 0.15";
        
        Node = "92.0313739973505 -167.96288044705605 0.01 0.15";
        
        Node = "92.04490228576583 -167.9712263442949 0.01 0.15";
        
        Node = "92.35671719469966 -168.16418474676453 0.01 0.15";
        
        Node = "92.46314388453392 -168.2300440865914 0.01 0.15";
        
        Node = "92.62208295922912 -168.32779534849314 0.01 0.15";
        
        Node = "94.1603739973505 -169.27388044705606 0.01 0.15";
        
        Node = "94.16553388408057 -169.27705763078538 0.01 0.15";
        
        Node = "94.58795477415602 -169.53746768537306 0.01 0.15";
        
        Node = "95.0113739973505 -169.79788044705606 0.01 0.15";
        
        Node = "95.02490228576559 -169.80622634429477 0.01 0.15";
        
        Node = "95.447321480318 -170.06762928115893 0.01 0.15";
        
        Node = "95.87073899766457 -170.32903493153958 0.01 0.15";
        
        Node = "95.87590228576583 -170.3322263442949 0.01 0.15";
        
        Node = "96.6242322500048 -170.79531053392984 0.01 0.15";
        
        Node = "96.71914388453392 -170.8540440865914 0.01 0.15";
        
        Node = "96.86088621809222 -170.94121894901457 0.01 0.15";
        
        Node = "97.1383739973505 -171.11188044705605 0.01 0.15";
        
        Node = "97.15190228576583 -171.1202263442949 0.01 0.15";
        
        Node = "97.33548475921864 -171.23383149845512 0.01 0.15";
        
        Node = "97.57014388453392 -171.3790440865914 0.01 0.15";
        
        Node = "97.92058703281164 -171.59457484914716 0.01 0.15";
        
        Node = "99.6933739973505 -172.68488044705606 0.01 0.15";
        
        Node = "99.69853388408058 -172.68805763078538 0.01 0.15";
        
        Node = "100.12353388408057 -172.95005763078538 0.01 0.15";
        
        Node = "100.55113676321582 -173.21404575862874 0.01 0.15";
        
        Node = "100.97453388408057 -173.47505763078536 0.01 0.15";
        
        Node = "100.98290228576583 -173.4802263442949 0.01 0.15";
        
        Node = "101.4053214803232 -173.74162928116218 0.01 0.15";
        
        Node = "101.82873899766457 -174.0030349315396 0.01 0.15";
        
        Node = "101.83390228576583 -174.0062263442949 0.01 0.15";
        
        Node = "102.25214388453392 -174.2650440865914 0.01 0.15";
        
        Node = "102.6713739973505 -174.52288044705605 0.01 0.15";
        
        Node = "102.68490228576583 -174.5312263442949 0.01 0.15";
        
        Node = "103.02550483295637 -174.741999214674 0.01 0.15";
        
        Node = "103.10314388453392 -174.7900440865914 0.01 0.15";
        
        Node = "103.21909110639304 -174.8613543498005 0.01 0.15";
        
        Node = "104.3743739973505 -175.57188044705606 0.01 0.15";
        
        Node = "104.80037399735026 -175.8338804470559 0.01 0.15";
        
        Node = "104.80553388408057 -175.83705763078535 0.01 0.15";
        
        Node = "105.22795477415602 -176.09746768537303 0.01 0.15";
        
        Node = "105.6513739973505 -176.35788044705603 0.01 0.15";
        
        Node = "105.66490228576583 -176.3662263442949 0.01 0.15";
        
        Node = "106.0873214803232 -176.62762928116217 0.01 0.15";
        
        Node = "106.51073899766457 -176.88903493153958 0.01 0.15";
        
        Node = "106.51590228576583 -176.8922263442949 0.01 0.15";
        
        Node = "107.293019888262 -177.37312500183958 0.01 0.15";
        
        Node = "107.35914388453392 -177.4140440865914 0.01 0.15";
        
        Node = "107.45789436525617 -177.47477795032196 0.01 0.15";
        
        Node = "107.7783739973505 -177.67188044705605 0.01 0.15";
        
        Node = "107.79190228576583 -177.6802263442949 0.01 0.15";
        
        Node = "108.00427239747508 -177.8116459663644 0.01 0.15";
        
        Node = "108.21014388453392 -177.9390440865914 0.01 0.15";
        
        Node = "108.51759517997928 -178.12813385045686 0.01 0.15";
        
        Node = "108.6293739973505 -178.19688044705606 0.01 0.15";
        
        Node = "109.051180528646 -178.45630136536454 0.01 0.15";
        
        Node = "109.47041243672882 -178.7131547174998 0.01 0.15";
        
        Node = "109.89484056219287 -178.97258268177643 0.01 0.15";
        
        Node = "109.89998266879192 -178.9757294371441 0.01 0.15";
        
        Node = "110.32341243671519 -179.23515471749147 0.01 0.15";
        
        Node = "110.7478405621928 -179.49458268177636 0.01 0.15";
        
        Node = "110.76653388408057 -179.50605763078536 0.01 0.15";
        
        Node = "111.19153388408057 -179.76805763078536 0.01 0.15";
        
        Node = "111.62073899766457 -180.0330349315396 0.01 0.15";
        
        Node = "111.6477438785183 -180.04980979437056 0.01 0.15";
        
        Node = "112.0675866742142 -180.31221154168048 0.01 0.15";
        
        Node = "112.48483553163678 -180.5720080000757 0.01 0.15";
        
        Node = "112.90307548886459 -180.83180882056544 0.01 0.15";
        
        Node = "112.98303996199414 -180.88129271805502 0.01 0.15";
        
        Node = "113.32132148031799 -181.09062928115893 0.01 0.15";
        
        Node = "113.74055868996315 -181.34945413124504 0.01 0.15";
        
        Node = "114.15818052865127 -181.60630136536778 0.01 0.15";
        
        Node = "114.2818176111421 -181.6820508454854 0.01 0.15";
        
        Node = "114.57998266879193 -181.8647294371441 0.01 0.15";
        
        Node = "114.99921028652717 -182.12158016068614 0.01 0.15";
        
        Node = "115.4194265168502 -182.37744952809592 0.01 0.15";
        
        Node = "115.4278405621928 -182.38258268177637 0.01 0.15";
        
        Node = "115.8548405621928 -182.64358268177637 0.01 0.15";
        
        Node = "115.8683739973505 -182.65188044705604 0.01 0.15";
        
        Node = "116.2943739973505 -182.91388044705604 0.01 0.15";
        
        Node = "116.30790228576583 -182.9222263442949 0.01 0.15";
        
        Node = "116.73290228576583 -183.1852263442949 0.01 0.15";
        
        Node = "116.74124429674094 -183.19039838592863 0.01 0.15";
        
        Node = "117.16624429674094 -183.45439838592864 0.01 0.15";
        
        Node = "117.17142506460219 -183.45762035079002 0.01 0.15";
        
        Node = "117.592835531631 -183.72000800007208 0.01 0.15";
        
        Node = "118.01524429674095 -183.98239838592863 0.01 0.15";
        
        Node = "118.02042506460226 -183.98562035079004 0.01 0.15";
        
        Node = "118.25994207421105 -184.13475358318797 0.01 0.15";
        
        Node = "118.43509305794478 -184.24380985607877 0.01 0.15";
        
        Node = "118.84755868996315 -184.49845413124504 0.01 0.15";
        
        Node = "119.26518052865127 -184.75530136536779 0.01 0.15";
        
        Node = "119.46420511540747 -184.87723896429588 0.01 0.15";
        
        Node = "119.68698266879193 -185.0137294371441 0.01 0.15";
        
        Node = "120.11041243672882 -185.2731547174998 0.01 0.15";
        
        Node = "120.53484056219287 -185.53258268177643 0.01 0.15";
        
        Node = "120.53998266879192 -185.5357294371441 0.01 0.15";
        
        Node = "121.39198266879193 -186.0577294371441 0.01 0.15";
        
        Node = "121.82222834321804 -186.3217194559003 0.01 0.15";
        
        Node = "121.83253388408058 -186.32805763078537 0.01 0.15";
        
        Node = "122.25753388408057 -186.59005763078537 0.01 0.15";
        
        Node = "122.27424429674095 -186.60039838592863 0.01 0.15";
        
        Node = "122.69924429674094 -186.86439838592864 0.01 0.15";
        
        Node = "123.12424429674071 -187.12839838592845 0.01 0.15";
        
        Node = "123.15123738001662 -187.14526912877088 0.01 0.15";
        
        Node = "123.57423738001663 -187.4112691287709 0.01 0.15";
        
    };
    
    new DecalRoad(road_4_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "78.98774857051099 -164.35640881283328 0.01 0.3";
        
        Node = "79.41374857051099 -164.61840881283328 0.01 0.3";
        
        Node = "79.41843369204011 -164.62129916685538 0.01 0.3";
        
        Node = "79.7016534462561 -164.79656221475847 0.01 0.3";
        
        Node = "79.84109312018916 -164.88285076592175 0.01 0.3";
        
        Node = "80.0502546138764 -165.01148999443362 0.01 0.3";
        
        Node = "81.542748570511 -165.9294088128333 0.01 0.3";
        
        Node = "81.54453554427033 -165.93050913620274 0.01 0.3";
        
        Node = "81.96864234603397 -166.19195850576057 0.01 0.3";
        
        Node = "82.393748570511 -166.4534088128333 0.01 0.3";
        
        Node = "82.39843369204003 -166.45629916685533 0.01 0.3";
        
        Node = "82.82253990659679 -166.7187460713928 0.01 0.3";
        
        Node = "83.24764554031674 -166.98119391568468 0.01 0.3";
        
        Node = "83.24943369204011 -166.98229916685537 0.01 0.3";
        
        Node = "83.96163729287223 -167.42302751278208 0.01 0.3";
        
        Node = "84.09709312018916 -167.50685076592174 0.01 0.3";
        
        Node = "84.30027878730067 -167.63181472081192 0.01 0.3";
        
        Node = "84.52074857051099 -167.76740881283328 0.01 0.3";
        
        Node = "84.52543369204011 -167.77029916685538 0.01 0.3";
        
        Node = "84.67163460064103 -167.86077172911902 0.01 0.3";
        
        Node = "84.94809312018916 -168.03185076592175 0.01 0.3";
        
        Node = "85.36278483066319 -168.28689590241046 0.01 0.3";
        
        Node = "87.075748570511 -169.3404088128333 0.01 0.3";
        
        Node = "87.07753554427033 -169.34150913620275 0.01 0.3";
        
        Node = "87.50253554427033 -169.60350913620275 0.01 0.3";
        
        Node = "87.92909065393023 -169.86685134498128 0.01 0.3";
        
        Node = "88.35353554427033 -170.12850913620272 0.01 0.3";
        
        Node = "88.35643369204011 -170.13029916685537 0.01 0.3";
        
        Node = "88.78053990659402 -170.3927460713911 0.01 0.3";
        
        Node = "89.20564554031674 -170.6551939156847 0.01 0.3";
        
        Node = "89.20743369204011 -170.65629916685538 0.01 0.3";
        
        Node = "89.63009312018916 -170.91785076592174 0.01 0.3";
        
        Node = "90.05374857051099 -171.17840881283328 0.01 0.3";
        
        Node = "90.05843369204011 -171.18129916685538 0.01 0.3";
        
        Node = "90.35161306279123 -171.36272545981433 0.01 0.3";
        
        Node = "90.48109312018916 -171.44285076592175 0.01 0.3";
        
        Node = "90.67531504745067 -171.56230181038774 0.01 0.3";
        
        Node = "92.182748570511 -172.4894088128333 0.01 0.3";
        
        Node = "92.18453554427033 -172.49050913620275 0.01 0.3";
        
        Node = "92.60864234603397 -172.75195850576057 0.01 0.3";
        
        Node = "93.033748570511 -173.0134088128333 0.01 0.3";
        
        Node = "93.03843369204003 -173.01629916685533 0.01 0.3";
        
        Node = "93.46253990659679 -173.2787460713928 0.01 0.3";
        
        Node = "93.88764554031674 -173.5411939156847 0.01 0.3";
        
        Node = "93.88943369204011 -173.54229916685537 0.01 0.3";
        
        Node = "94.61159690940721 -173.98919075783786 0.01 0.3";
        
        Node = "94.73709312018916 -174.06685076592174 0.01 0.3";
        
        Node = "94.92533922087433 -174.18262653676567 0.01 0.3";
        
        Node = "95.16074857051099 -174.32740881283328 0.01 0.3";
        
        Node = "95.16543369204011 -174.33029916685538 0.01 0.3";
        
        Node = "95.32159421717623 -174.4269349741749 0.01 0.3";
        
        Node = "95.58809312018916 -174.59185076592175 0.01 0.3";
        
        Node = "95.9878452642378 -174.8377077183648 0.01 0.3";
        
        Node = "97.715748570511 -175.9004088128333 0.01 0.3";
        
        Node = "97.71753554427033 -175.90150913620275 0.01 0.3";
        
        Node = "98.14253554427033 -176.16350913620275 0.01 0.3";
        
        Node = "98.56909065393023 -176.4268513449813 0.01 0.3";
        
        Node = "98.99353554427033 -176.68850913620273 0.01 0.3";
        
        Node = "98.99643369204011 -176.69029916685537 0.01 0.3";
        
        Node = "99.42053990659402 -176.9527460713911 0.01 0.3";
        
        Node = "99.84564554031674 -177.2151939156847 0.01 0.3";
        
        Node = "99.84743369204011 -177.21629916685538 0.01 0.3";
        
        Node = "100.27009312018916 -177.47785076592174 0.01 0.3";
        
        Node = "100.69374857051099 -177.73840881283328 0.01 0.3";
        
        Node = "100.69843369204011 -177.74129916685538 0.01 0.3";
        
        Node = "101.00157267932673 -177.92888870487042 0.01 0.3";
        
        Node = "101.12109312018916 -178.00285076592175 0.01 0.3";
        
        Node = "101.30037548102537 -178.11311362634214 0.01 0.3";
        
        Node = "102.396748570511 -178.7874088128333 0.01 0.3";
        
        Node = "102.82274857051092 -179.0494088128332 0.01 0.3";
        
        Node = "102.82453554427033 -179.05050913620272 0.01 0.3";
        
        Node = "103.24864234603398 -179.31195850576054 0.01 0.3";
        
        Node = "103.673748570511 -179.57340881283326 0.01 0.3";
        
        Node = "103.67843369204012 -179.57629916685536 0.01 0.3";
        
        Node = "104.10253990659402 -179.83874607139109 0.01 0.3";
        
        Node = "104.52764554031674 -180.1011939156847 0.01 0.3";
        
        Node = "104.52943369204012 -180.10229916685537 0.01 0.3";
        
        Node = "105.26155652594299 -180.55535400289412 0.01 0.3";
        
        Node = "105.37709312018916 -180.62685076592174 0.01 0.3";
        
        Node = "105.55039965444954 -180.73343835272038 0.01 0.3";
        
        Node = "105.80074857051099 -180.88740881283329 0.01 0.3";
        
        Node = "105.80543369204011 -180.89029916685539 0.01 0.3";
        
        Node = "105.97155383371171 -180.993098219231 0.01 0.3";
        
        Node = "106.22809312018916 -181.15185076592175 0.01 0.3";
        
        Node = "106.61290569780856 -181.38851953431677 0.01 0.3";
        
        Node = "106.65174857051099 -181.4124088128333 0.01 0.3";
        
        Node = "107.07629628697288 -181.67351562436616 0.01 0.3";
        
        Node = "107.4999523590409 -181.93307955584447 0.01 0.3";
        
        Node = "107.9260616665603 -182.19353512788794 0.01 0.3";
        
        Node = "107.9278424826985 -182.19462491329668 0.01 0.3";
        
        Node = "108.35295235901654 -182.45507955582957 0.01 0.3";
        
        Node = "108.77906166656028 -182.7155351278879 0.01 0.3";
        
        Node = "108.78553554427033 -182.71950913620273 0.01 0.3";
        
        Node = "109.21053554427033 -182.98150913620273 0.01 0.3";
        
        Node = "109.63764554031674 -183.2451939156847 0.01 0.3";
        
        Node = "109.64699788000634 -183.2510033919898 0.01 0.3";
        
        Node = "110.06955815557333 -183.51510356421915 0.01 0.3";
        
        Node = "110.49122009753239 -183.77764779223142 0.01 0.3";
        
        Node = "110.9138789571853 -184.04019353093346 0.01 0.3";
        
        Node = "110.9415349881005 -184.05730773359392 0.01 0.3";
        
        Node = "111.33653990659678 -184.30174607139278 0.01 0.3";
        
        Node = "111.7601978147198 -184.56330013204152 0.01 0.3";
        
        Node = "112.18329628697744 -184.82351562436898 0.01 0.3";
        
        Node = "112.34051918792441 -184.91984233128719 0.01 0.3";
        
        Node = "112.6078424826985 -185.08362491329666 0.01 0.3";
        
        Node = "113.03149706892991 -185.34318793443845 0.01 0.3";
        
        Node = "113.45614771146327 -185.6017574123276 0.01 0.3";
        
        Node = "113.45906166656027 -185.6035351278879 0.01 0.3";
        
        Node = "113.88606166656028 -185.8645351278879 0.01 0.3";
        
        Node = "113.890748570511 -185.86740881283328 0.01 0.3";
        
        Node = "114.316748570511 -186.12940881283328 0.01 0.3";
        
        Node = "114.32143369204012 -186.13229916685538 0.01 0.3";
        
        Node = "114.74643369204011 -186.39529916685538 0.01 0.3";
        
        Node = "114.74932270017003 -186.39709035010515 0.01 0.3";
        
        Node = "115.17432270017002 -186.66109035010516 0.01 0.3";
        
        Node = "115.17611690548993 -186.66220618209178 0.01 0.3";
        
        Node = "115.59922009753491 -186.92564779223298 0.01 0.3";
        
        Node = "116.02332270017003 -187.18909035010515 0.01 0.3";
        
        Node = "116.02511690548997 -187.1902061820918 0.01 0.3";
        
        Node = "116.24664390638637 -187.3281380883103 0.01 0.3";
        
        Node = "116.44588504170885 -187.45219388954882 0.01 0.3";
        
        Node = "116.8671978147198 -187.71230013204152 0.01 0.3";
        
        Node = "117.29029628697744 -187.97251562436898 0.01 0.3";
        
        Node = "117.52829856579929 -188.118333921957 0.01 0.3";
        
        Node = "117.7148424826985 -188.23262491329666 0.01 0.3";
        
        Node = "118.1399523590409 -188.49307955584447 0.01 0.3";
        
        Node = "118.5660616665603 -188.75353512788794 0.01 0.3";
        
        Node = "118.5678424826985 -188.75462491329668 0.01 0.3";
        
        Node = "119.4198424826985 -189.27662491329667 0.01 0.3";
        
        Node = "119.8479665257898 -189.53931409728148 0.01 0.3";
        
        Node = "119.85153554427033 -189.54150913620273 0.01 0.3";
        
        Node = "120.27653554427033 -189.80350913620273 0.01 0.3";
        
        Node = "120.28232270017003 -189.80709035010514 0.01 0.3";
        
        Node = "120.70732270017002 -190.07109035010515 0.01 0.3";
        
        Node = "121.13232270016994 -190.33509035010508 0.01 0.3";
        
        Node = "121.14167095411831 -190.34093303160896 0.01 0.3";
        
        Node = "121.56467095411831 -190.60693303160897 0.01 0.3";
        
    };
    
    new DecalRoad(road_4_separator_1) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "119.43532904588169 -193.99306696839105 0.01 0.15";
        
        Node = "119.01699512167043 -193.73000119099103 0.01 0.15";
        
        Node = "118.59667729983006 -193.46890964989493 0.01 0.15";
        
        Node = "118.1745678312313 -193.20670517998886 0.01 0.15";
        
        Node = "117.75424781532485 -192.94759025253595 0.01 0.15";
        
        Node = "117.32959538213892 -192.68703067994878 0.01 0.15";
        
        Node = "116.47904764097575 -192.16592044416572 0.01 0.15";
        
        Node = "116.0529383334397 -191.90546487211208 0.01 0.15";
        
        Node = "116.05115751730142 -191.9043750867033 0.01 0.15";
        
        Node = "115.62515751730142 -191.6433750867033 0.01 0.15";
        
        Node = "115.47716753757899 -191.5527051695494 0.01 0.15";
        
        Node = "115.1991575173015 -191.38237508670332 0.01 0.15";
        
        Node = "115.19625142948901 -191.38059118716671 0.01 0.15";
        
        Node = "114.77025142948901 -191.11859118716671 0.01 0.15";
        
        Node = "114.76735445968326 -191.1168060843153 0.01 0.15";
        
        Node = "114.34135445968326 -190.8538060843153 0.01 0.15";
        
        Node = "114.33488309451003 -190.8497938179082 0.01 0.15";
        
        Node = "114.11335895444152 -190.7118636929599 0.01 0.15";
        
        Node = "113.9117799024724 -190.58635220777157 0.01 0.15";
        
        Node = "113.48767729982998 -190.32290964989485 0.01 0.15";
        
        Node = "113.48588309451007 -190.32179381790823 0.01 0.15";
        
        Node = "113.0627799024651 -190.05835220776703 0.01 0.15";
        
        Node = "112.64012104281292 -189.79580646906544 0.01 0.15";
        
        Node = "112.21890687981085 -189.53514923407826 0.01 0.15";
        
        Node = "111.797592906624 -189.276031250569 0.01 0.15";
        
        Node = "111.37439455247143 -189.0173549732064 0.01 0.15";
        
        Node = "110.94885228853673 -188.7582425876724 0.01 0.15";
        
        Node = "110.94415751730142 -188.7553750867033 0.01 0.15";
        
        Node = "110.51815751730142 -188.4943750867033 0.01 0.15";
        
        Node = "110.28365379665104 -188.35070027193862 0.01 0.15";
        
        Node = "110.0921575173015 -188.23337508670332 0.01 0.15";
        
        Node = "110.08925142948901 -188.2315911871667 0.01 0.15";
        
        Node = "109.66325142948901 -187.9695911871667 0.01 0.15";
        
        Node = "109.66035445968326 -187.9678060843153 0.01 0.15";
        
        Node = "109.23435445968326 -187.7048060843153 0.01 0.15";
        
        Node = "109.23256630795997 -187.70370083314467 0.01 0.15";
        
        Node = "108.80756630795997 -187.4407008331447 0.01 0.15";
        
        Node = "108.80467729982998 -187.43890964989487 0.01 0.15";
        
        Node = "108.79251710045558 -187.43135602016585 0.01 0.15";
        
        Node = "108.37967729982998 -187.17490964989486 0.01 0.15";
        
        Node = "108.37788309450998 -187.17379381790818 0.01 0.15";
        
        Node = "107.95388309450998 -186.90979381790817 0.01 0.15";
        
        Node = "107.95100211999366 -186.9079966080102 0.01 0.15";
        
        Node = "107.53167029464272 -186.64591421716585 0.01 0.15";
        
        Node = "107.11090934604283 -186.38614865500207 0.01 0.15";
        
        Node = "106.68969762111008 -186.12648401516117 0.01 0.15";
        
        Node = "106.26593833343972 -185.8674648721121 0.01 0.15";
        
        Node = "106.2641575173015 -185.86637508670333 0.01 0.15";
        
        Node = "105.83904764097575 -185.60592044416572 0.01 0.15";
        
        Node = "105.4129383334397 -185.34546487211207 0.01 0.15";
        
        Node = "105.41115751730142 -185.3443750867033 0.01 0.15";
        
        Node = "104.98515751730142 -185.08337508670328 0.01 0.15";
        
        Node = "104.98225142948908 -185.08159118716677 0.01 0.15";
        
        Node = "104.595234719301 -184.84356682550182 0.01 0.15";
        
        Node = "104.5562514294891 -184.8195911871668 0.01 0.15";
        
        Node = "104.13025142948901 -184.55759118716674 0.01 0.15";
        
        Node = "104.12556630795989 -184.55470083314464 0.01 0.15";
        
        Node = "103.81781393511713 -184.36425642359723 0.01 0.15";
        
        Node = "103.70290687981084 -184.29314923407827 0.01 0.15";
        
        Node = "103.52973536199177 -184.18664468556042 0.01 0.15";
        
        Node = "103.27925142948901 -184.03259118716673 0.01 0.15";
        
        Node = "103.27456630795989 -184.02970083314463 0.01 0.15";
        
        Node = "103.10914386224854 -183.9273335314456 0.01 0.15";
        
        Node = "102.42546009340599 -183.5042539286089 0.01 0.15";
        
        Node = "102.00035445968327 -183.2418060843153 0.01 0.15";
        
        Node = "101.99856630795989 -183.24070083314461 0.01 0.15";
        
        Node = "101.57590687981084 -182.97914923407825 0.01 0.15";
        
        Node = "101.15225142948901 -182.7185911871667 0.01 0.15";
        
        Node = "101.15046445572968 -182.71749086379725 0.01 0.15";
        
        Node = "100.72635765397514 -182.45604149424506 0.01 0.15";
        
        Node = "100.3012514294891 -182.1945911871668 0.01 0.15";
        
        Node = "99.26773793279862 -181.55895612582194 0.01 0.15";
        
        Node = "99.02325142948901 -181.40859118716673 0.01 0.15";
        
        Node = "99.01856630795989 -181.40570083314464 0.01 0.15";
        
        Node = "98.85712342503817 -181.3057961785366 0.01 0.15";
        
        Node = "98.59590687981084 -181.14414923407827 0.01 0.15";
        
        Node = "98.20223857549313 -180.90203398588287 0.01 0.15";
        
        Node = "98.17225142948901 -180.88359118716673 0.01 0.15";
        
        Node = "98.16756630795989 -180.88070083314463 0.01 0.15";
        
        Node = "98.14845335217078 -180.8688732863857 0.01 0.15";
        
        Node = "97.74346009340599 -180.6182539286089 0.01 0.15";
        
        Node = "97.31835445968326 -180.3558060843153 0.01 0.15";
        
        Node = "97.31656630795989 -180.35470083314462 0.01 0.15";
        
        Node = "96.89301461964966 -180.09259708249616 0.01 0.15";
        
        Node = "96.46946445572968 -179.83149086379726 0.01 0.15";
        
        Node = "96.04290934606978 -179.56814865501872 0.01 0.15";
        
        Node = "95.61935765396603 -179.30704149423946 0.01 0.15";
        
        Node = "93.94024114629669 -178.27434542614233 0.01 0.15";
        
        Node = "93.490251429489 -177.99759118716673 0.01 0.15";
        
        Node = "93.48556630795989 -177.99470083314463 0.01 0.15";
        
        Node = "93.18776284209633 -177.81041304132788 0.01 0.15";
        
        Node = "93.06290687981084 -177.73314923407827 0.01 0.15";
        
        Node = "92.87474178899022 -177.61742328620267 0.01 0.15";
        
        Node = "92.63925142948901 -177.47259118716673 0.01 0.15";
        
        Node = "92.63456630795989 -177.46970083314463 0.01 0.15";
        
        Node = "92.47909276922779 -177.3734901491763 0.01 0.15";
        
        Node = "91.78546009340599 -176.9442539286089 0.01 0.15";
        
        Node = "91.36035445968326 -176.6818060843153 0.01 0.15";
        
        Node = "91.35856630795998 -176.68070083314467 0.01 0.15";
        
        Node = "90.9359068798098 -176.41914923407765 0.01 0.15";
        
        Node = "90.51225142948901 -176.15859118716673 0.01 0.15";
        
        Node = "90.51046445572968 -176.15749086379728 0.01 0.15";
        
        Node = "90.08635765396603 -175.89604149423946 0.01 0.15";
        
        Node = "88.61274435979558 -174.98973472646327 0.01 0.15";
        
        Node = "88.38325142948901 -174.84859118716673 0.01 0.15";
        
        Node = "88.37856630795989 -174.84570083314463 0.01 0.15";
        
        Node = "88.22707233201766 -174.75195279626743 0.01 0.15";
        
        Node = "87.95590687981084 -174.58414923407827 0.01 0.15";
        
        Node = "87.54724500249114 -174.33281258652485 0.01 0.15";
        
        Node = "87.53225142948901 -174.32359118716673 0.01 0.15";
        
        Node = "87.52756630795989 -174.32070083314463 0.01 0.15";
        
        Node = "87.51840225915025 -174.31502990411653 0.01 0.15";
        
        Node = "87.10346009340599 -174.0582539286089 0.01 0.15";
        
        Node = "86.67835445968326 -173.7958060843153 0.01 0.15";
        
        Node = "86.67656630795989 -173.79470083314462 0.01 0.15";
        
        Node = "86.25301461964966 -173.53259708249615 0.01 0.15";
        
        Node = "85.82946445572968 -173.27149086379725 0.01 0.15";
        
        Node = "85.40290934606978 -173.00814865501872 0.01 0.15";
        
        Node = "84.97935765396603 -172.74704149423945 0.01 0.15";
        
        Node = "83.28524757329409 -171.70512402678395 0.01 0.15";
        
        Node = "82.850251429489 -171.43759118716673 0.01 0.15";
        
        Node = "82.84556630795988 -171.43470083314463 0.01 0.15";
        
        Node = "82.55771174907524 -171.25656965905836 0.01 0.15";
        
        Node = "82.42290687981084 -171.17314923407827 0.01 0.15";
        
        Node = "82.21974821598779 -171.04820188684437 0.01 0.15";
        
        Node = "81.99925142948901 -170.91259118716673 0.01 0.15";
        
        Node = "81.99456630795989 -170.90970083314463 0.01 0.15";
        
        Node = "81.84904167620688 -170.81964676690689 0.01 0.15";
        
        Node = "81.14546009340599 -170.3842539286089 0.01 0.15";
        
        Node = "80.72035445968326 -170.1218060843153 0.01 0.15";
        
        Node = "80.71856630795997 -170.12070083314467 0.01 0.15";
        
        Node = "80.2959068798098 -169.85914923407765 0.01 0.15";
        
        Node = "79.87225142948901 -169.59859118716673 0.01 0.15";
        
        Node = "79.87046445572967 -169.59749086379728 0.01 0.15";
        
        Node = "79.44635765396603 -169.33604149423945 0.01 0.15";
        
        Node = "77.95775078679306 -168.42051332710489 0.01 0.15";
        
        Node = "77.743251429489 -168.28859118716673 0.01 0.15";
        
        Node = "77.73856630795989 -168.28570083314463 0.01 0.15";
        
        Node = "77.59702123899667 -168.19810941399797 0.01 0.15";
        
        Node = "77.31590687981084 -168.02414923407827 0.01 0.15";
        
        Node = "76.89225142948901 -167.76359118716672 0.01 0.15";
        
    };
    
    new DecalRoad(road_5) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "77.94 -166.06 0.01 11.999999999999998";
        
        Node = "77.196 -165.565 0.01 11.999999999999998";
        
        Node = "76.452 -165.068 0.01 11.999999999999998";
        
        Node = "75.709 -164.572 0.01 12.0";
        
        Node = "74.964 -164.077 0.01 12.000000000000002";
        
        Node = "74.219 -163.584 0.01 12.0";
        
        Node = "73.472 -163.092 0.01 12.0";
        
        Node = "72.727 -162.598 0.01 12.0";
        
        Node = "71.985 -162.1 0.01 11.999999999999998";
        
        Node = "71.243 -161.602 0.01 11.999999999999998";
        
        Node = "70.498 -161.107 0.01 11.999999999999998";
        
        Node = "69.752 -160.615 0.01 12.0";
        
        Node = "69.007 -160.121 0.01 11.999999999999998";
        
        Node = "68.264 -159.623 0.01 11.999999999999998";
        
        Node = "67.522 -159.125 0.01 11.999999999999996";
        
        Node = "66.778 -158.629 0.01 11.999999999999998";
        
        Node = "66.033 -158.135 0.01 12.000000000000002";
        
        Node = "65.289 -157.64 0.01 12.000000000000002";
        
        Node = "64.545 -157.144 0.01 11.999999999999998";
        
        Node = "63.801 -156.648 0.01 11.999999999999996";
        
        Node = "63.057 -156.153 0.01 12.000000000000002";
        
        Node = "62.312 -155.658 0.01 12.000000000000002";
        
        Node = "61.569 -155.163 0.01 12.000000000000005";
        
        Node = "60.825 -154.666 0.01 12.000000000000007";
        
        Node = "60.081 -154.171 0.01 11.999999999999998";
        
        Node = "59.336 -153.676 0.01 12.0";
        
        Node = "58.592 -153.182 0.01 12.000000000000002";
        
        Node = "57.847 -152.687 0.01 11.999999999999998";
        
        Node = "57.103 -152.192 0.01 12.000000000000002";
        
        Node = "56.359 -151.696 0.01 12.000000000000004";
        
        Node = "55.615 -151.2 0.01 12.000000000000004";
        
        Node = "54.871 -150.705 0.01 12.000000000000004";
        
        Node = "54.126 -150.21 0.01 12.000000000000004";
        
        Node = "53.382 -149.715 0.01 12.0";
        
        Node = "52.638 -149.219 0.01 12.0";
        
        Node = "51.895 -148.723 0.01 12.0";
        
        Node = "51.15 -148.228 0.01 12.000000000000002";
        
        Node = "50.405 -147.733 0.01 12.000000000000002";
        
        Node = "49.662 -147.238 0.01 12.000000000000002";
        
        Node = "48.918 -146.742 0.01 12.0";
        
        Node = "48.174 -146.246 0.01 11.999999999999998";
        
        Node = "47.429 -145.752 0.01 12.000000000000002";
        
        Node = "46.685 -145.256 0.01 11.999999999999998";
        
        Node = "45.942 -144.759 0.01 12.0";
        
        Node = "45.2 -144.26 0.01 12.0";
        
        Node = "44.456 -143.765 0.01 11.999999999999996";
        
        Node = "43.71 -143.272 0.01 11.999999999999996";
        
        Node = "42.963 -142.782 0.01 11.999999999999995";
        
        Node = "42.218 -142.29 0.01 11.999999999999998";
        
        Node = "41.475 -141.789 0.01 12.000000000000004";
        
        Node = "40.735 -141.282 0.01 12.000000000000002";
        
        Node = "39.99 -140.79 0.01 12.000000000000002";
        
        Node = "39.235 -140.335 0.01 12.000000000000002";
        
        Node = "38.486 -139.856 0.01 11.999999999999996";
        
        Node = "37.771 -139.25 0.01 12.000000000000002";
        
        Node = "37.063 -138.622 0.01 12.000000000000012";
        
        Node = "36.259 -138.351 0.01 12.000000000000002";
        
        Node = "35.368 -138.433 0.01 11.999999999999998";
        
        Node = "34.478 -138.511 0.01 12.0";
        
        Node = "33.587 -138.59 0.01 12.000000000000004";
        
        Node = "32.696 -138.657 0.01 12.000000000000002";
        
        Node = "31.805 -138.735 0.01 12.0";
        
        Node = "30.915 -138.813 0.01 11.99999999999999";
        
        Node = "30.025 -138.892 0.01 12.000000000000004";
        
        Node = "29.134 -138.966 0.01 12.000000000000002";
        
        Node = "28.243 -139.038 0.01 12.0";
        
        Node = "27.353 -139.117 0.01 11.999999999999998";
        
        Node = "26.462 -139.196 0.01 12.0";
        
        Node = "25.572 -139.274 0.01 12.000000000000002";
        
        Node = "24.681 -139.34 0.01 12.0";
        
        Node = "23.79 -139.42 0.01 12.000000000000002";
        
        Node = "22.9 -139.497 0.01 12.0";
        
        Node = "22.009 -139.575 0.01 12.000000000000005";
        
        Node = "21.118 -139.647 0.01 12.000000000000002";
        
        Node = "20.228 -139.721 0.01 11.999999999999998";
        
        Node = "19.337 -139.801 0.01 12.0";
        
        Node = "18.447 -139.88 0.01 12.000000000000002";
        
        Node = "17.556 -139.956 0.01 12.000000000000002";
        
        Node = "16.665 -140.028 0.01 11.999999999999993";
        
        Node = "15.775 -140.103 0.01 12.000000000000004";
        
        Node = "14.884 -140.178 0.01 11.999999999999998";
        
        Node = "13.993 -140.254 0.01 11.999999999999998";
        
        Node = "13.102 -140.329 0.01 12.000000000000002";
        
        Node = "12.211 -140.403 0.01 12.0";
        
        Node = "11.322 -140.488 0.01 12.0";
        
        Node = "10.431 -140.564 0.01 12.000000000000002";
        
        Node = "9.54 -140.639 0.01 12.000000000000002";
        
        Node = "8.649 -140.714 0.01 11.999999999999996";
        
        Node = "7.759 -140.789 0.01 11.999999999999998";
        
        Node = "6.868 -140.865 0.01 11.999999999999998";
        
        Node = "5.977 -140.94 0.01 12.0";
        
        Node = "5.086 -141.015 0.01 12.0";
        
        Node = "4.195 -141.089 0.01 12.000000000000002";
        
        Node = "3.305 -141.164 0.01 11.999999999999998";
        
        Node = "2.414 -141.238 0.01 11.999999999999998";
        
        Node = "1.524 -141.321 0.01 12.0";
        
        Node = "0.633 -141.4 0.01 12.0";
        
        Node = "-0.258 -141.474 0.01 12.000000000000007";
        
        Node = "-1.148 -141.55 0.01 12.0";
        
        Node = "-2.039 -141.625 0.01 12.000000000000005";
        
        Node = "-2.93 -141.7 0.01 12.0";
        
    };
    
    new DecalRoad(road_5_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "74.7410817668959 -170.86807104127155 0.01 0.15";
        
        Node = "73.9970817668959 -170.37307104127154 0.01 0.15";
        
        Node = "73.98813928786161 -170.36710939603827 0.01 0.15";
        
        Node = "73.24488125896963 -169.8706050407166 0.01 0.15";
        
        Node = "72.50783789882512 -169.3785814786282 0.01 0.15";
        
        Node = "71.77254458617023 -168.89003088834073 0.01 0.15";
        
        Node = "71.0372511241265 -168.4034541409749 0.01 0.15";
        
        Node = "70.29547495341417 -167.91489473536518 0.01 0.15";
        
        Node = "70.2805431990576 -167.90502695688676 0.01 0.15";
        
        Node = "69.53554319905761 -167.41102695688676 0.01 0.15";
        
        Node = "69.50870848903146 -167.39312510268792 0.01 0.15";
        
        Node = "68.76670848903146 -166.8951251026879 0.01 0.15";
        
        Node = "68.03586685809934 -166.40461414284397 0.01 0.15";
        
        Node = "67.31027417110775 -165.92250893470862 0.01 0.15";
        
        Node = "66.57250697441847 -165.43593861195913 0.01 0.15";
        
        Node = "66.5605431990576 -165.42802695688675 0.01 0.15";
        
        Node = "65.81554319905761 -164.93402695688675 0.01 0.15";
        
        Node = "65.79169665521403 -164.91812928750187 0.01 0.15";
        
        Node = "65.04869665521402 -164.42012928750185 0.01 0.15";
        
        Node = "64.311149695669 -163.9251193357142 0.01 0.15";
        
        Node = "63.58056985801732 -163.43806611061305 0.01 0.15";
        
        Node = "62.84154319905765 -162.94802695688676 0.01 0.15";
        
        Node = "62.834081766895906 -162.94307104127154 0.01 0.15";
        
        Node = "62.090081766895906 -162.44807104127153 0.01 0.15";
        
        Node = "61.34160636679939 -161.9490904498011 0.01 0.15";
        
        Node = "60.59984337305701 -161.45458178730618 0.01 0.15";
        
        Node = "59.85957055709142 -160.9620615670065 0.01 0.15";
        
        Node = "59.11605996047559 -160.4680511705973 0.01 0.15";
        
        Node = "59.1100992489969 -160.46408536968767 0.01 0.15";
        
        Node = "58.36709924899691 -159.9690853696877 0.01 0.15";
        
        Node = "58.3611392878615 -159.9651093960382 0.01 0.15";
        
        Node = "57.62160775365339 -159.47109437923518 0.01 0.15";
        
        Node = "56.88357055712325 -158.98006156702763 0.01 0.15";
        
        Node = "56.14081265062481 -158.48655128015955 0.01 0.15";
        
        Node = "55.39756549716284 -157.99305115407054 0.01 0.15";
        
        Node = "54.6510599604757 -157.49705117059742 0.01 0.15";
        
        Node = "53.90408176689591 -157.00007104127155 0.01 0.15";
        
        Node = "52.41384337303606 -156.0065817872922 0.01 0.15";
        
        Node = "51.673570557123114 -155.51406156702757 0.01 0.15";
        
        Node = "50.93005996047559 -155.02005117059733 0.01 0.15";
        
        Node = "50.1830817668959 -154.52307104127158 0.01 0.15";
        
        Node = "49.43460636679926 -154.024090449801 0.01 0.15";
        
        Node = "48.69383789882371 -153.52958147862728 0.01 0.15";
        
        Node = "47.95405996047559 -153.03805117059733 0.01 0.15";
        
        Node = "47.20905996047557 -152.54305117059732 0.01 0.15";
        
        Node = "47.20309924899681 -152.5390853696876 0.01 0.15";
        
        Node = "46.4600992489968 -152.0440853696876 0.01 0.15";
        
        Node = "45.714606366799345 -151.54709044980106 0.01 0.15";
        
        Node = "44.97656985802133 -151.05506611061574 0.01 0.15";
        
        Node = "44.237543199057626 -150.56502695688678 0.01 0.15";
        
        Node = "44.22560636679926 -150.55709044980102 0.01 0.15";
        
        Node = "43.48160636679926 -150.06109044980101 0.01 0.15";
        
        Node = "43.47415585503957 -150.0561150899508 0.01 0.15";
        
        Node = "42.73115585503957 -149.55911508995078 0.01 0.15";
        
        Node = "42.71925720143282 -149.5511345822382 0.01 0.15";
        
        Node = "41.98914970962563 -149.06013237413606 0.01 0.15";
        
        Node = "41.26453701826154 -148.57803118834948 0.01 0.15";
        
        Node = "40.5342432853487 -148.0954107991725 0.01 0.15";
        
        Node = "39.79549751348648 -147.61082521923612 0.01 0.15";
        
        Node = "39.7805346530898 -147.60097699887805 0.01 0.15";
        
        Node = "39.035534653089805 -147.10897699887803 0.01 0.15";
        
        Node = "38.98936893424226 -147.07816942486625 0.01 0.15";
        
        Node = "38.246368934242255 -146.57716942486624 0.01 0.15";
        
        Node = "38.210950698009604 -146.55309562815188 0.01 0.15";
        
        Node = "37.51150906366623 -146.0738835894869 0.01 0.15";
        
        Node = "36.9070327882093 -145.67468583442005 0.01 0.15";
        
        Node = "36.25415837038794 -145.28123171507076 0.01 0.15";
        
        Node = "36.123623997140086 -145.200178760213 0.01 0.15";
        
        Node = "35.374623997140084 -144.72117876021298 0.01 0.15";
        
        Node = "34.779706746772575 -144.28190464134488 0.01 0.15";
        
        Node = "34.09703616774226 -144.34243323364947 0.01 0.15";
        
        Node = "34.02003668216017 -144.34874154932342 0.01 0.15";
        
        Node = "33.16435066606999 -144.41308606456252 0.01 0.15";
        
        Node = "32.30891021080056 -144.48797310778477 0.01 0.15";
        
        Node = "31.422398036052332 -144.56566743321213 0.01 0.15";
        
        Node = "30.535604764595814 -144.64438279101557 0.01 0.15";
        
        Node = "30.502983953507226 -144.64718516993065 0.01 0.15";
        
        Node = "29.611983953507227 -144.72118516993066 0.01 0.15";
        
        Node = "29.599150434276773 -144.72223662417488 0.01 0.15";
        
        Node = "28.730885209965862 -144.79239947058386 0.01 0.15";
        
        Node = "27.863604764595635 -144.86938279101557 0.01 0.15";
        
        Node = "26.972036167742257 -144.94843323364947 0.01 0.15";
        
        Node = "26.96619099213332 -144.94894849998255 0.01 0.15";
        
        Node = "26.07619099213332 -145.02694849998255 0.01 0.15";
        
        Node = "25.998608983850943 -145.0332212819875 0.01 0.15";
        
        Node = "25.152553714046675 -145.09589204271373 0.01 0.15";
        
        Node = "24.306441010813014 -145.1718617579311 0.01 0.15";
        
        Node = "24.287775339100392 -145.17350716622335 0.01 0.15";
        
        Node = "23.400702512765992 -145.25025391636692 0.01 0.15";
        
        Node = "22.51262942724645 -145.3279976881632 0.01 0.15";
        
        Node = "22.474150434276773 -145.33123662417486 0.01 0.15";
        
        Node = "21.589834517756586 -145.4026964962169 0.01 0.15";
        
        Node = "20.725484573277292 -145.47456379497137 0.01 0.15";
        
        Node = "19.853441010813015 -145.5528617579311 0.01 0.15";
        
        Node = "19.847604764595815 -145.55338279101557 0.01 0.15";
        
        Node = "18.957604764595814 -145.63238279101557 0.01 0.15";
        
        Node = "18.937810346410714 -145.63410550857873 0.01 0.15";
        
        Node = "18.046810346410716 -145.71010550857872 0.01 0.15";
        
        Node = "18.021150434276777 -145.71223662417486 0.01 0.15";
        
        Node = "17.14004586309747 -145.7834369935631 0.01 0.15";
        
        Node = "16.259938484189853 -145.85760334571825 0.01 0.15";
        
        Node = "15.371604350757075 -145.93237897173213 0.01 0.15";
        
        Node = "14.483810346410715 -146.00810550857872 0.01 0.15";
        
        Node = "14.477398052371209 -146.00864886216866 0.01 0.15";
        
        Node = "13.586398052371209 -146.08364886216867 0.01 0.15";
        
        Node = "13.579983953507044 -146.08418516993066 0.01 0.15";
        
        Node = "12.724841232720781 -146.1552071242945 0.01 0.15";
        
        Node = "11.871658620636001 -146.2367825146513 0.01 0.15";
        
        Node = "11.812810346410714 -146.24210550857873 0.01 0.15";
        
        Node = "10.921810346410714 -146.31810550857872 0.01 0.15";
        
        Node = "10.915398052371208 -146.31864886216866 0.01 0.15";
        
        Node = "10.024398052371208 -146.39364886216867 0.01 0.15";
        
        Node = "9.133668269421216 -146.46862611662573 0.01 0.15";
        
        Node = "8.246874542306031 -146.54335592509048 0.01 0.15";
        
        Node = "7.3588103464108965 -146.61910550857874 0.01 0.15";
        
        Node = "7.352398052371027 -146.61964886216867 0.01 0.15";
        
        Node = "5.570398052371027 -146.76964886216865 0.01 0.15";
        
        Node = "5.563983953507226 -146.77018516993064 0.01 0.15";
        
        Node = "4.6764613946175775 -146.84389635888445 0.01 0.15";
        
        Node = "3.7899384841896677 -146.91860334571825 0.01 0.15";
        
        Node = "3.782983953507226 -146.91918516993064 0.01 0.15";
        
        Node = "2.921125271464236 -146.9907649033439 0.01 0.15";
        
        Node = "2.060240585796701 -147.0710496549286 0.01 0.15";
        
        Node = "2.034036167742258 -147.07343323364947 0.01 0.15";
        
        Node = "1.143036167742258 -147.15243323364948 0.01 0.15";
        
        Node = "1.1109839535070436 -147.15518516993066 0.01 0.15";
        
        Node = "0.22667154554654717 -147.22862974702275 0.01 0.15";
        
        Node = "-0.6566421712950274 -147.30405878351712 0.01 0.15";
        
        Node = "-0.6636019476289734 -147.30464886216868 0.01 0.15";
        
        Node = "-1.5546019476289736 -147.37964886216866 0.01 0.15";
        
        Node = "-2.4456019476289734 -147.45464886216865 0.01 0.15";
        
    };
    
    new DecalRoad(road_5_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "-3.414398052371027 -135.94535113783132 0.01 0.15";
        
        Node = "-2.523398052371027 -135.87035113783134 0.01 0.15";
        
        Node = "-1.6358781189679545 -135.79564407273008 0.01 0.15";
        
        Node = "-0.7493578287049725 -135.71994121648288 0.01 0.15";
        
        Node = "-0.7359839535070436 -135.71881483006933 0.01 0.15";
        
        Node = "0.13898610688391544 -135.64614616063173 0.01 0.15";
        
        Node = "1.0008589081512032 -135.56972870687176 0.01 0.15";
        
        Node = "1.8777594142032992 -135.4879503450714 0.01 0.15";
        
        Node = "1.9360160464927743 -135.48281483006934 0.01 0.15";
        
        Node = "2.823538605382393 -135.40910364111554 0.01 0.15";
        
        Node = "3.7100615158103327 -135.33439665428173 0.01 0.15";
        
        Node = "3.717016046492774 -135.33381483006934 0.01 0.15";
        
        Node = "4.60480884764123 -135.26008119675285 0.01 0.15";
        
        Node = "6.380395649228999 -135.11062102826907 0.01 0.15";
        
        Node = "7.268189653589104 -135.03489449142126 0.01 0.15";
        
        Node = "7.274061515810332 -135.03439665428172 0.01 0.15";
        
        Node = "8.164061515810332 -134.95939665428173 0.01 0.15";
        
        Node = "9.055601947628972 -134.88435113783135 0.01 0.15";
        
        Node = "9.943395649256423 -134.80962102826672 0.01 0.15";
        
        Node = "10.80175190037238 -134.73640545578095 0.01 0.15";
        
        Node = "11.661341379363998 -134.65421748534868 0.01 0.15";
        
        Node = "11.733016046492956 -134.64781483006934 0.01 0.15";
        
        Node = "12.6208088476141 -134.57408119675515 0.01 0.15";
        
        Node = "13.505395649256425 -134.49962102826672 0.01 0.15";
        
        Node = "14.393189653589285 -134.42389449142127 0.01 0.15";
        
        Node = "14.399601947628973 -134.42335113783133 0.01 0.15";
        
        Node = "15.29033173071618 -134.3483738833627 0.01 0.15";
        
        Node = "16.18006151581015 -134.27339665428175 0.01 0.15";
        
        Node = "16.199849565723227 -134.27176337582512 0.01 0.15";
        
        Node = "17.078017234219192 -134.20080033190624 0.01 0.15";
        
        Node = "17.946290962710787 -134.12673882420103 0.01 0.15";
        
        Node = "18.823476980134252 -134.04887624512634 0.01 0.15";
        
        Node = "19.711558989186987 -133.96913824206888 0.01 0.15";
        
        Node = "19.74948267116846 -133.96585915324326 0.01 0.15";
        
        Node = "20.63948267116846 -133.89185915324325 0.01 0.15";
        
        Node = "20.652849565723223 -133.89076337582512 0.01 0.15";
        
        Node = "21.52460465484834 -133.82031852013824 0.01 0.15";
        
        Node = "22.39637057275355 -133.7440023118368 0.01 0.15";
        
        Node = "22.402224660899606 -133.74349283377666 0.01 0.15";
        
        Node = "23.282890490332555 -133.66730039684816 0.01 0.15";
        
        Node = "24.164558989186986 -133.58813824206888 0.01 0.15";
        
        Node = "24.254391016149057 -133.5807787180125 0.01 0.15";
        
        Node = "25.106578875462116 -133.51765369139673 0.01 0.15";
        
        Node = "25.954886289155166 -133.4433076483989 0.01 0.15";
        
        Node = "26.842679532735573 -133.36459197360332 0.01 0.15";
        
        Node = "27.732395235404365 -133.28561720898443 0.01 0.15";
        
        Node = "27.777849565723223 -133.28176337582514 0.01 0.15";
        
        Node = "28.662432219996138 -133.21028194921723 0.01 0.15";
        
        Node = "29.530701668959708 -133.13816978398341 0.01 0.15";
        
        Node = "30.404395235404184 -133.0606172089844 0.01 0.15";
        
        Node = "30.41080900786686 -133.0600515000174 0.01 0.15";
        
        Node = "31.30080900786686 -132.98205150001743 0.01 0.15";
        
        Node = "32.19237057275337 -132.9040023118368 0.01 0.15";
        
        Node = "32.262963317839834 -132.8982584506766 0.01 0.15";
        
        Node = "33.115442476548324 -132.83415507959526 0.01 0.15";
        
        Node = "33.967963832257745 -132.75856676635053 0.01 0.15";
        
        Node = "33.97380900786668 -132.75805150001744 0.01 0.15";
        
        Node = "34.85127959675133 -132.68114958323878 0.01 0.15";
        
        Node = "35.729755087539026 -132.6003022316736 0.01 0.15";
        
        Node = "36.33087706924839 -132.5764473171581 0.01 0.15";
        
        Node = "36.931219050245154 -132.6152571057894 0.01 0.15";
        
        Node = "37.52426619655138 -132.71631043873182 0.01 0.15";
        
        Node = "38.10358283679709 -132.87851069821113 0.01 0.15";
        
        Node = "38.90758283679709 -133.14951069821115 0.01 0.15";
        
        Node = "39.44534192650149 -133.3612897869933 0.01 0.15";
        
        Node = "39.95923981084832 -133.6257594175163 0.01 0.15";
        
        Node = "40.44412936010995 -133.94027069874792 0.01 0.15";
        
        Node = "40.895153988008 -134.30167352944315 0.01 0.15";
        
        Node = "41.55450954230966 -134.88652563128133 0.01 0.15";
        
        Node = "41.92407420009797 -135.1997510615187 0.01 0.15";
        
        Node = "42.281647994404715 -135.42842642530098 0.01 0.15";
        
        Node = "42.97084162961206 -135.84376828492924 0.01 0.15";
        
        Node = "43.1724653469102 -135.97102300112195 0.01 0.15";
        
        Node = "43.9174653469102 -136.46302300112197 0.01 0.15";
        
        Node = "43.9990493019904 -136.51790437184812 0.01 0.15";
        
        Node = "44.721384814723585 -137.01280181097746 0.01 0.15";
        
        Node = "45.42362222695152 -137.48631586686736 0.01 0.15";
        
        Node = "46.137991553554755 -137.95808728792616 0.01 0.15";
        
        Node = "46.87750248651352 -138.44317478076388 0.01 0.15";
        
        Node = "46.89399238415554 -138.454031808154 0.01 0.15";
        
        Node = "47.63999238415554 -138.947031808154 0.01 0.15";
        
        Node = "47.6549182331041 -138.95692895872844 0.01 0.15";
        
        Node = "48.3989182331041 -139.45192895872844 0.01 0.15";
        
        Node = "48.422742798567185 -139.46786541776177 0.01 0.15";
        
        Node = "49.1587984214553 -139.96286778409757 0.01 0.15";
        
        Node = "49.892120818712804 -140.45339434054037 0.01 0.15";
        
        Node = "50.62643014197874 -140.94293388938434 0.01 0.15";
        
        Node = "51.365456800942376 -141.43297304311324 0.01 0.15";
        
        Node = "51.37739363320061 -141.4409095501989 0.01 0.15";
        
        Node = "52.12139363320061 -141.9369095501989 0.01 0.15";
        
        Node = "52.86464726935973 -142.43241197430498 0.01 0.15";
        
        Node = "53.60392162438952 -142.92492988243384 0.01 0.15";
        
        Node = "54.34594003952443 -143.4179488294027 0.01 0.15";
        
        Node = "55.09094003952441 -143.9129488294027 0.01 0.15";
        
        Node = "55.10137661673985 -143.91989954387546 0.01 0.15";
        
        Node = "55.8428854338803 -144.41490408398536 0.01 0.15";
        
        Node = "56.58315662694299 -144.90841821269382 0.01 0.15";
        
        Node = "57.32342944290858 -145.4009384329935 0.01 0.15";
        
        Node = "58.06694003952441 -145.8949488294027 0.01 0.15";
        
        Node = "58.81391823310397 -146.39192895872836 0.01 0.15";
        
        Node = "60.30415662696414 -147.38541821270792 0.01 0.15";
        
        Node = "61.044429442860526 -147.87793843296157 0.01 0.15";
        
        Node = "61.78718734940717 -148.37144871986166 0.01 0.15";
        
        Node = "62.53043450283716 -148.86494884592943 0.01 0.15";
        
        Node = "63.27694003952441 -149.36094882940267 0.01 0.15";
        
        Node = "64.0239182331041 -149.85792895872845 0.01 0.15";
        
        Node = "64.0328607121385 -149.8638906039618 0.01 0.15";
        
        Node = "64.77388196470974 -150.35890076864987 0.01 0.15";
        
        Node = "65.51092162440534 -150.84992988244437 0.01 0.15";
        
        Node = "66.25294003952442 -151.34294882940267 0.01 0.15";
        
        Node = "66.9999182331041 -151.83992895872842 0.01 0.15";
        
        Node = "67.74839363320066 -152.33890955019893 0.01 0.15";
        
        Node = "68.4901566269676 -152.8334182127102 0.01 0.15";
        
        Node = "69.22818943874734 -153.32444810764432 0.01 0.15";
        
        Node = "69.96945680094235 -153.81597304311322 0.01 0.15";
        
        Node = "69.98139363320075 -153.82390955019898 0.01 0.15";
        
        Node = "70.72539363320075 -154.319909550199 0.01 0.15";
        
        Node = "70.74029151096846 -154.32987489731204 0.01 0.15";
        
        Node = "71.48079774002979 -154.82687233945833 0.01 0.15";
        
        Node = "72.21039979702314 -155.31589229152118 0.01 0.15";
        
        Node = "72.9374798257397 -155.79800978707283 0.01 0.15";
        
        Node = "73.67749302558153 -156.28606138804088 0.01 0.15";
        
        Node = "73.69394003952445 -156.2969488294027 0.01 0.15";
        
        Node = "74.43894003952445 -156.7919488294027 0.01 0.15";
        
        Node = "74.46129151096841 -156.806874897312 0.01 0.15";
        
        Node = "75.20329151096841 -157.304874897312 0.01 0.15";
        
        Node = "75.93189915509429 -157.79388649673882 0.01 0.15";
        
        Node = "76.65599856927838 -158.27402758480184 0.01 0.15";
        
        Node = "77.39552504658582 -158.76110526463484 0.01 0.15";
        
        Node = "77.40596523968969 -158.76799776152362 0.01 0.15";
        
        Node = "78.1509652396897 -159.2609977615236 0.01 0.15";
        
        Node = "78.15994003952441 -159.26694882940268 0.01 0.15";
        
        Node = "78.90494003952442 -159.76194882940268 0.01 0.15";
        
        Node = "78.91537661673998 -159.76889954387553 0.01 0.15";
        
        Node = "79.65837661673997 -160.26489954387554 0.01 0.15";
        
        Node = "80.39939224634826 -160.7599056207659 0.01 0.15";
        
        Node = "81.13891823310409 -161.25192895872846 0.01 0.15";
        
    };
    
    new DecalRoad(road_5_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "-3.0977569012540354 -139.70704801310174 0.01 0.3";
        
        Node = "-2.2067569012540353 -139.63204801310175 0.01 0.3";
        
        Node = "-1.3169621191250198 -139.5571494624175 0.01 0.3";
        
        Node = "-0.4281672134043195 -139.4812523693447 0.01 0.3";
        
        Node = "-0.42353556831412764 -139.48086227881188 0.01 0.3";
        
        Node = "0.4619129374493918 -139.4073233456733 0.01 0.3";
        
        Node = "1.3428255958997086 -139.32921773398127 0.01 0.3";
        
        Node = "2.2282889746158614 -139.24664081214596 0.01 0.3";
        
        Node = "2.2484644316858096 -139.2448622788119 0.01 0.3";
        
        Node = "3.13826012307231 -139.17096229995374 0.01 0.3";
        
        Node = "4.0270559362113705 -139.09606377637462 0.01 0.3";
        
        Node = "4.02946443168581 -139.0958622788119 0.01 0.3";
        
        Node = "4.91935371346043 -139.02195452701466 0.01 0.3";
        
        Node = "6.6991326923933086 -138.87214148164998 0.01 0.3";
        
        Node = "7.589022390853369 -138.7962361875052 0.01 0.3";
        
        Node = "7.5910559362113705 -138.7960637763746 0.01 0.3";
        
        Node = "8.48105593621137 -138.72106377637462 0.01 0.3";
        
        Node = "9.372243098745964 -138.64604801310176 0.01 0.3";
        
        Node = "10.262132692377506 -138.57114148165127 0.01 0.3";
        
        Node = "11.141827497967311 -138.49610578555158 0.01 0.3";
        
        Node = "12.020642036143377 -138.4120796486056 0.01 0.3";
        
        Node = "12.045464431685872 -138.4098622788119 0.01 0.3";
        
        Node = "12.935353713451166 -138.33595452701545 0.01 0.3";
        
        Node = "13.824132692377507 -138.26114148165126 0.01 0.3";
        
        Node = "14.714022390853433 -138.18523618750518 0.01 0.3";
        
        Node = "14.716243098745965 -138.18504801310175 0.01 0.3";
        
        Node = "15.607149517075904 -138.11005589034673 0.01 0.3";
        
        Node = "16.497055936211307 -138.0350637763746 0.01 0.3";
        
        Node = "16.503908940510208 -138.0344981388139 0.01 0.3";
        
        Node = "17.39046484301618 -137.9628572578033 0.01 0.3";
        
        Node = "18.273594272808634 -137.88752859712517 0.01 0.3";
        
        Node = "19.15915652991452 -137.80892250913485 0.01 0.3";
        
        Node = "20.04914597028121 -137.72901324400655 0.01 0.3";
        
        Node = "20.062279712958777 -137.72787762882885 0.01 0.3";
        
        Node = "20.952279712958774 -137.65387762882884 0.01 0.3";
        
        Node = "20.956908940510207 -137.6534981388139 0.01 0.3";
        
        Node = "21.84124403631088 -137.58203671693101 0.01 0.3";
        
        Node = "22.72558288233889 -137.50461984825517 0.01 0.3";
        
        Node = "22.72761027217302 -137.50444340563695 0.01 0.3";
        
        Node = "23.61437765899261 -137.4277230811593 0.01 0.3";
        
        Node = "24.50214597028121 -137.34801324400655 0.01 0.3";
        
        Node = "24.533256628969372 -137.34546449108657 0.01 0.3";
        
        Node = "25.410815194966226 -137.28046015286458 0.01 0.3";
        
        Node = "26.286376204037463 -137.20372559251902 0.01 0.3";
        
        Node = "27.17626563886758 -137.12482406013788 0.01 0.3";
        
        Node = "28.06616718109242 -137.04583279964828 0.01 0.3";
        
        Node = "28.081908940510207 -137.0444981388139 0.01 0.3";
        
        Node = "28.97068648311569 -136.97267773133063 0.01 0.3";
        
        Node = "29.85381443081088 -136.89933152692046 0.01 0.3";
        
        Node = "30.738167181092358 -136.8208327996483 0.01 0.3";
        
        Node = "30.740388400992853 -136.82063688312292 0.01 0.3";
        
        Node = "31.630388400992853 -136.74263688312294 0.01 0.3";
        
        Node = "32.521582882338826 -136.66461984825517 0.01 0.3";
        
        Node = "32.54603058626488 -136.66263063226896 0.01 0.3";
        
        Node = "33.42369003516842 -136.5966337937992 0.01 0.3";
        
        Node = "34.3013640977516 -136.51881533033784 0.01 0.3";
        
        Node = "34.30338840099279 -136.51863688312292 0.01 0.3";
        
        Node = "35.189049210993716 -136.44101717168465 0.01 0.3";
        
        Node = "36.075711718628234 -136.35941635728955 0.01 0.3";
        
        Node = "36.28389249151459 -136.3511549150331 0.01 0.3";
        
        Node = "36.49180313428404 -136.36459553447253 0.01 0.3";
        
        Node = "36.6971874273771 -136.39959235973396 0.01 0.3";
        
        Node = "36.897816566856136 -136.45576560977008 0.01 0.3";
        
        Node = "37.70181656685614 -136.7267656097701 0.01 0.3";
        
        Node = "37.88805348103948 -136.80010901714056 0.01 0.3";
        
        Node = "38.066026774319766 -136.8917002311745 0.01 0.3";
        
        Node = "38.23395389094718 -137.00062188701227 0.01 0.3";
        
        Node = "38.39015289627983 -137.1257830404998 0.01 0.3";
        
        Node = "39.08130633499904 -137.73884004546542 0.01 0.3";
        
        Node = "39.67667504765289 -138.24344625507135 0.01 0.3";
        
        Node = "40.29011618853877 -138.63575374036418 0.01 0.3";
        
        Node = "41.022326105493356 -139.077019319456 0.01 0.3";
        
        Node = "41.092152501094446 -139.12109021683875 0.01 0.3";
        
        Node = "41.837152501094444 -139.61309021683877 0.01 0.3";
        
        Node = "41.865406684671996 -139.6320967521552 0.01 0.3";
        
        Node = "42.59928911332395 -140.13490538908295 0.01 0.3";
        
        Node = "43.328172199808506 -140.62638644739891 0.01 0.3";
        
        Node = "44.06256417439781 -141.11138087893977 0.01 0.3";
        
        Node = "44.80697055809992 -141.59967957775373 0.01 0.3";
        
        Node = "44.81268134516209 -141.60343958723948 0.01 0.3";
        
        Node = "45.55868134516209 -142.09643958723947 0.01 0.3";
        
        Node = "45.563850470339084 -142.099867171854 0.01 0.3";
        
        Node = "46.30785047033908 -142.594867171854 0.01 0.3";
        
        Node = "46.31610140210119 -142.60038629186553 0.01 0.3";
        
        Node = "47.056042743364905 -143.09800182999302 0.01 0.3";
        
        Node = "47.79569119262932 -143.5927599447769 0.01 0.3";
        
        Node = "48.536335114105505 -144.08652255909436 0.01 0.3";
        
        Node = "49.27926642456879 -144.57915083744183 0.01 0.3";
        
        Node = "49.28340039245043 -144.58189941132431 0.01 0.3";
        
        Node = "50.02740039245043 -145.0778994113243 0.01 0.3";
        
        Node = "50.77114191148073 -145.57372709067783 0.01 0.3";
        
        Node = "51.51285164479693 -146.06786749174316 0.01 0.3";
        
        Node = "52.25681906130716 -146.56218141278015 0.01 0.3";
        
        Node = "53.00181906130716 -147.05718141278015 0.01 0.3";
        
        Node = "53.00543346034281 -147.05958858662353 0.01 0.3";
        
        Node = "53.74791703340065 -147.55524383862445 0.01 0.3";
        
        Node = "54.490625671662315 -148.0503829307989 0.01 0.3";
        
        Node = "55.23333487199085 -148.5445241326304 0.01 0.3";
        
        Node = "55.97781906130716 -149.03918141278015 0.01 0.3";
        
        Node = "56.72285047033904 -149.53486717185396 0.01 0.3";
        
        Node = "58.21162567166232 -150.5273829307989 0.01 0.3";
        
        Node = "58.954334871985445 -151.02152413262678 0.01 0.3";
        
        Node = "59.698558389422466 -151.51600821468224 0.01 0.3";
        
        Node = "60.442297663320225 -152.00983509815737 0.01 0.3";
        
        Node = "61.18781906130716 -152.50518141278013 0.01 0.3";
        
        Node = "61.93285047033908 -153.000867171854 0.01 0.3";
        
        Node = "61.935947432775244 -153.00293181089586 0.01 0.3";
        
        Node = "62.67891583194529 -153.499242690449 0.01 0.3";
        
        Node = "63.41985164480221 -153.99286749174664 0.01 0.3";
        
        Node = "64.16381906130715 -154.48718141278013 0.01 0.3";
        
        Node = "64.90885047033908 -154.982867171854 0.01 0.3";
        
        Node = "65.65440039245044 -155.4798994113243 0.01 0.3";
        
        Node = "66.39762567166228 -155.97538293079887 0.01 0.3";
        
        Node = "67.13955911299183 -156.46900800265118 0.01 0.3";
        
        Node = "67.88326642456879 -156.9621508374418 0.01 0.3";
        
        Node = "67.88740039245047 -156.96489941132432 0.01 0.3";
        
        Node = "68.63140039245047 -157.46089941132433 0.01 0.3";
        
        Node = "68.63655983063843 -157.4643506137877 0.01 0.3";
        
        Node = "69.37804250738736 -157.9620034076165 0.01 0.3";
        
        Node = "70.1164025271077 -158.45689343429314 0.01 0.3";
        
        Node = "70.85519647644924 -158.94677828123906 0.01 0.3";
        
        Node = "71.59912312574252 -159.4374108703172 0.01 0.3";
        
        Node = "71.60481906130717 -159.44118141278017 0.01 0.3";
        
        Node = "72.34981906130716 -159.93618141278017 0.01 0.3";
        
        Node = "72.35755983063841 -159.9413506137877 0.01 0.3";
        
        Node = "73.09955983063841 -160.4393506137877 0.01 0.3";
        
        Node = "73.83692178531496 -160.93423774778896 0.01 0.3";
        
        Node = "74.57468348719415 -161.4234381246055 0.01 0.3";
        
        Node = "75.31909525422886 -161.91373342498176 0.01 0.3";
        
        Node = "75.32271090552024 -161.9161204368913 0.01 0.3";
        
        Node = "76.06771090552024 -162.4091204368913 0.01 0.3";
        
        Node = "76.07081906130715 -162.41118141278014 0.01 0.3";
        
        Node = "76.81581906130715 -162.90618141278014 0.01 0.3";
        
        Node = "76.81943346034285 -162.90858858662355 0.01 0.3";
        
        Node = "77.56243346034285 -163.40458858662356 0.01 0.3";
        
        Node = "78.30539991215224 -163.9008980504797 0.01 0.3";
        
        Node = "79.04785047033907 -164.394867171854 0.01 0.3";
        
    };
    
    new DecalRoad(road_5_separator_1) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "76.83214952966092 -167.725132828146 0.01 0.15";
        
        Node = "76.08814952966092 -167.230132828146 0.01 0.15";
        
        Node = "76.0850525672248 -167.22806818910416 0.01 0.15";
        
        Node = "75.34130952694821 -166.73123984096242 0.01 0.15";
        
        Node = "74.6003724324913 -166.236616962294 0.01 0.15";
        
        Node = "73.85873405581322 -165.7438505240985 0.01 0.15";
        
        Node = "73.1170956274077 -165.2530750271805 0.01 0.15";
        
        Node = "72.37190474577113 -164.76226657501826 0.01 0.15";
        
        Node = "72.3667335754312 -164.7588491625582 0.01 0.15";
        
        Node = "71.62173357543121 -164.2648491625582 0.01 0.15";
        
        Node = "71.61244016936155 -164.25864938621228 0.01 0.15";
        
        Node = "70.87044016936154 -163.76064938621226 0.01 0.15";
        
        Node = "70.132304539598 -163.26524299319038 0.01 0.15";
        
        Node = "69.3940256869645 -162.7747087219775 0.01 0.15";
        
        Node = "68.65087687425748 -162.28458912968281 0.01 0.15";
        
        Node = "68.6467335754312 -162.2818491625582 0.01 0.15";
        
        Node = "67.90173357543121 -161.7878491625582 0.01 0.15";
        
        Node = "67.89347503210875 -161.78234347619113 0.01 0.15";
        
        Node = "67.15047503210874 -161.2843434761911 0.01 0.15";
        
        Node = "66.41001721061387 -160.78737899071857 0.01 0.15";
        
        Node = "65.67066488589451 -160.29447744090564 0.01 0.15";
        
        Node = "64.92773357543122 -159.80184916255817 0.01 0.15";
        
        Node = "64.92514952966093 -159.800132828146 0.01 0.15";
        
        Node = "64.18114952966093 -159.305132828146 0.01 0.15";
        
        Node = "63.43559960754957 -158.8081005886757 0.01 0.15";
        
        Node = "62.692374328337685 -158.3126170692011 0.01 0.15";
        
        Node = "61.94966512800915 -157.8184758673696 0.01 0.15";
        
        Node = "61.20518093869284 -157.32381858721985 0.01 0.15";
        
        Node = "61.20311662302923 -157.32244514967536 0.01 0.15";
        
        Node = "60.460116623029236 -156.82744514967538 0.01 0.15";
        
        Node = "60.45805256722476 -156.82606818910415 0.01 0.15";
        
        Node = "59.71560008784771 -156.33010194952027 0.01 0.15";
        
        Node = "58.97366512800915 -155.83647586736961 0.01 0.15";
        
        Node = "58.2294416105882 -155.3419917853248 0.01 0.15";
        
        Node = "57.48570233667977 -154.8481649018426 0.01 0.15";
        
        Node = "56.74018093869288 -154.3528185872199 0.01 0.15";
        
        Node = "55.99514952966092 -153.857132828146 0.01 0.15";
        
        Node = "54.506374328337756 -152.86461706920113 0.01 0.15";
        
        Node = "53.76366512800911 -152.3704758673696 0.01 0.15";
        
        Node = "53.01918093869284 -151.87581858721987 0.01 0.15";
        
        Node = "52.27414952966092 -151.380132828146 0.01 0.15";
        
        Node = "51.52859960754952 -150.88310058867566 0.01 0.15";
        
        Node = "50.78637243249284 -150.38761696229503 0.01 0.15";
        
        Node = "50.04318093869284 -149.89381858721987 0.01 0.15";
        
        Node = "49.29818093869284 -149.39881858721986 0.01 0.15";
        
        Node = "49.2961166230292 -149.39744514967535 0.01 0.15";
        
        Node = "48.5531166230292 -148.90244514967534 0.01 0.15";
        
        Node = "47.80859960754955 -148.40610058867568 0.01 0.15";
        
        Node = "47.06666488589452 -147.91147744090568 0.01 0.15";
        
        Node = "46.32373357543121 -147.4188491625582 0.01 0.15";
        
        Node = "46.31959960754953 -147.41610058867568 0.01 0.15";
        
        Node = "45.57559960754953 -146.92010058867567 0.01 0.15";
        
        Node = "45.57301934373665 -146.91837752032927 0.01 0.15";
        
        Node = "44.830019343736645 -146.42137752032926 0.01 0.15";
        
        Node = "44.825898597898814 -146.41861370813444 0.01 0.15";
        
        Node = "44.08801721545495 -145.92238350619442 0.01 0.15";
        
        Node = "43.350731434893724 -145.43185062799844 0.01 0.15";
        
        Node = "42.61017083474988 -144.9424452984128 0.01 0.15";
        
        Node = "41.86602944190008 -144.45432042224627 0.01 0.15";
        
        Node = "41.86084749890556 -144.45090978316125 0.01 0.15";
        
        Node = "41.11584749890556 -143.95890978316123 0.01 0.15";
        
        Node = "41.099859371166154 -143.94824049346016 0.01 0.15";
        
        Node = "40.35685937116615 -143.44724049346016 0.01 0.15";
        
        Node = "40.344593315328005 -143.4389032478448 0.01 0.15";
        
        Node = "39.618639502569366 -142.94152678423856 0.01 0.15";
        
        Node = "38.92230572751803 -142.4816660898422 0.01 0.15";
        
        Node = "38.202673894506646 -142.047980680544 0.01 0.15";
        
        Node = "38.15746718515674 -142.01991039314737 0.01 0.15";
        
        Node = "37.40846718515674 -141.54091039314736 0.01 0.15";
        
        Node = "37.19287241216173 -141.38171984373656 0.01 0.15";
        
        Node = "36.47787241216173 -140.77571984373657 0.01 0.15";
        
        Node = "36.443847103720174 -140.7462169595002 0.01 0.15";
        
        Node = "36.039522546390444 -140.3875787928292 0.01 0.15";
        
        Node = "36.021046392904715 -140.3813511341294 0.01 0.15";
        
        Node = "35.55128828137177 -140.42458364271045 0.01 0.15";
        
        Node = "35.542611599007216 -140.42536311687707 0.01 0.15";
        
        Node = "34.65362379596223 -140.503274407481 0.01 0.15";
        
        Node = "33.7636359022484 -140.58218466966215 0.01 0.15";
        
        Node = "33.736969413735125 -140.58436936773106 0.01 0.15";
        
        Node = "32.858199364872895 -140.650449719329 0.01 0.15";
        
        Node = "31.979514358584012 -140.72737163907146 0.01 0.15";
        
        Node = "31.09072226356613 -140.80526577773594 0.01 0.15";
        
        Node = "30.20183281890764 -140.8841672003517 0.01 0.15";
        
        Node = "30.19053556831419 -140.8851377211881 0.01 0.15";
        
        Node = "29.29953556831419 -140.9591377211881 0.01 0.15";
        
        Node = "29.295091059489792 -140.9595018611861 0.01 0.15";
        
        Node = "28.411964574881814 -141.03086561751806 0.01 0.15";
        
        Node = "27.52983281890758 -141.10916720035172 0.01 0.15";
        
        Node = "26.6386359022484 -141.18818466966215 0.01 0.15";
        
        Node = "26.63661159900721 -141.18836311687707 0.01 0.15";
        
        Node = "25.74661159900721 -141.26636311687707 0.01 0.15";
        
        Node = "25.719743371030628 -141.26853550891343 0.01 0.15";
        
        Node = "24.844308645555813 -141.33338252561526 0.01 0.15";
        
        Node = "23.96885402971879 -141.41198675599344 0.01 0.15";
        
        Node = "23.962389727826977 -141.41255659436305 0.01 0.15";
        
        Node = "23.073403467627756 -141.4894688887848 0.01 0.15";
        
        Node = "22.183417117661108 -141.56738015174483 0.01 0.15";
        
        Node = "22.170091059489792 -141.5685018611861 0.01 0.15";
        
        Node = "21.281405893589557 -141.6403148038851 0.01 0.15";
        
        Node = "20.40028902970676 -141.71357620605065 0.01 0.15";
        
        Node = "19.515854029718792 -141.79298675599344 0.01 0.15";
        
        Node = "19.51383281890764 -141.7931672003517 0.01 0.15";
        
        Node = "18.62383281890764 -141.8721672003517 0.01 0.15";
        
        Node = "18.616977609146566 -141.8727638124948 0.01 0.15";
        
        Node = "17.725977609146568 -141.9487638124948 0.01 0.15";
        
        Node = "17.717091059489793 -141.9495018611861 0.01 0.15";
        
        Node = "16.829518047830057 -142.02122493283537 0.01 0.15";
        
        Node = "15.942944063788694 -142.0959362236254 0.01 0.15";
        
        Node = "15.052867307627125 -142.17085851834833 0.01 0.15";
        
        Node = "14.162977609146568 -142.2467638124948 0.01 0.15";
        
        Node = "14.160756901254098 -142.24695198689824 0.01 0.15";
        
        Node = "13.269756901254098 -142.32195198689826 0.01 0.15";
        
        Node = "13.267535568314129 -142.3221377211881 0.01 0.15";
        
        Node = "12.38895367366844 -142.39510636339213 0.01 0.15";
        
        Node = "11.512357963856623 -142.47892035139438 0.01 0.15";
        
        Node = "11.491977609146566 -142.4807638124948 0.01 0.15";
        
        Node = "10.600977609146566 -142.5567638124948 0.01 0.15";
        
        Node = "10.598756901254097 -142.55695198689824 0.01 0.15";
        
        Node = "9.707756901254097 -142.63195198689826 0.01 0.15";
        
        Node = "8.816850482867086 -142.70694410965808 0.01 0.15";
        
        Node = "7.927960880435487 -142.7818505368293 0.01 0.15";
        
        Node = "7.0379776091466315 -142.8577638124948 0.01 0.15";
        
        Node = "7.035756901254036 -142.85795198689826 0.01 0.15";
        
        Node = "5.253756901254036 -143.00795198689823 0.01 0.15";
        
        Node = "5.251535568314191 -143.0081377211881 0.01 0.15";
        
        Node = "4.361739876927722 -143.08203770004624 0.01 0.15";
        
        Node = "3.4729440637886295 -143.15693622362537 0.01 0.15";
        
        Node = "3.4705355683141907 -143.1571377211881 0.01 0.15";
        
        Node = "2.5896277996396306 -143.23029953362573 0.01 0.15";
        
        Node = "1.7097110253841388 -143.31235918785404 0.01 0.15";
        
        Node = "1.700635902248401 -143.31318466966215 0.01 0.15";
        
        Node = "0.809635902248401 -143.39218466966216 0.01 0.15";
        
        Node = "0.7985355683141276 -143.3931377211881 0.01 0.15";
        
        Node = "-0.09014838248970772 -143.46694536693386 0.01 0.15";
        
        Node = "-0.9778327865956804 -143.5427476306553 0.01 0.15";
        
        Node = "-0.9802430987459647 -143.54295198689826 0.01 0.15";
        
        Node = "-1.871243098745965 -143.61795198689825 0.01 0.15";
        
        Node = "-2.762243098745965 -143.69295198689824 0.01 0.15";
        
    };
    
    new DecalRoad(road_6) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "-2.93 -141.7 0.01 12.0";
        
        Node = "-3.229 -141.729 0.01 12.000000000000002";
        
        Node = "-3.527 -141.757 0.01 11.999999999999998";
        
        Node = "-3.826 -141.782 0.01 11.999999999999998";
        
        Node = "-4.125 -141.806 0.01 12.0";
        
        Node = "-4.424 -141.83 0.01 11.999999999999998";
        
        Node = "-4.723 -141.853 0.01 12.000000000000004";
        
        Node = "-5.022 -141.877 0.01 11.999999999999998";
        
        Node = "-5.321 -141.902 0.01 11.999999999999998";
        
        Node = "-5.62 -141.927 0.01 12.000000000000002";
        
        Node = "-5.919 -141.954 0.01 12.0";
        
        Node = "-6.218 -141.981 0.01 12.0";
        
        Node = "-6.517 -142.008 0.01 12.000000000000002";
        
        Node = "-6.816 -142.033 0.01 12.0";
        
        Node = "-7.115 -142.057 0.01 12.000000000000002";
        
        Node = "-7.414 -142.08 0.01 12.0";
        
        Node = "-7.713 -142.104 0.01 11.999999999999998";
        
        Node = "-8.012 -142.128 0.01 12.000000000000002";
        
        Node = "-8.311 -142.154 0.01 12.0";
        
        Node = "-8.609 -142.18 0.01 12.0";
        
        Node = "-8.908 -142.207 0.01 12.0";
        
        Node = "-9.207 -142.234 0.01 11.999999999999998";
        
        Node = "-9.506 -142.262 0.01 11.999999999999996";
        
        Node = "-9.805 -142.288 0.01 11.999999999999998";
        
        Node = "-10.103 -142.315 0.01 12.000000000000002";
        
        Node = "-10.402 -142.34 0.01 11.999999999999998";
        
        Node = "-10.701 -142.364 0.01 11.999999999999996";
        
        Node = "-11.0 -142.388 0.01 12.0";
        
        Node = "-11.299 -142.412 0.01 11.999999999999998";
        
        Node = "-11.598 -142.436 0.01 11.999999999999998";
        
        Node = "-11.897 -142.461 0.01 11.999999999999998";
        
        Node = "-12.196 -142.487 0.01 12.000000000000002";
        
        Node = "-12.495 -142.514 0.01 12.000000000000004";
        
        Node = "-12.794 -142.541 0.01 12.000000000000005";
        
        Node = "-13.092 -142.568 0.01 12.000000000000005";
        
        Node = "-13.391 -142.595 0.01 12.000000000000004";
        
        Node = "-13.69 -142.622 0.01 12.000000000000002";
        
        Node = "-13.989 -142.647 0.01 12.0";
        
        Node = "-14.288 -142.672 0.01 12.0";
        
        Node = "-14.587 -142.696 0.01 12.0";
        
        Node = "-14.886 -142.72 0.01 11.999999999999998";
        
        Node = "-15.185 -142.744 0.01 12.0";
        
        Node = "-15.484 -142.769 0.01 12.0";
        
        Node = "-15.783 -142.795 0.01 12.0";
        
        Node = "-16.082 -142.822 0.01 11.999999999999996";
        
        Node = "-16.38 -142.848 0.01 11.999999999999998";
        
        Node = "-16.679 -142.874 0.01 12.0";
        
        Node = "-16.978 -142.899 0.01 12.0";
        
        Node = "-17.277 -142.922 0.01 11.999999999999998";
        
        Node = "-17.576 -142.946 0.01 11.999999999999998";
        
        Node = "-17.875 -142.97 0.01 12.0";
        
        Node = "-18.174 -142.996 0.01 12.000000000000004";
        
        Node = "-18.473 -143.022 0.01 12.000000000000004";
        
        Node = "-18.772 -143.048 0.01 12.000000000000004";
        
        Node = "-19.071 -143.076 0.01 12.000000000000004";
        
        Node = "-19.369 -143.103 0.01 12.000000000000005";
        
        Node = "-19.668 -143.13 0.01 12.000000000000002";
        
        Node = "-19.967 -143.156 0.01 12.0";
        
        Node = "-20.266 -143.182 0.01 12.0";
        
        Node = "-20.565 -143.207 0.01 11.999999999999996";
        
        Node = "-20.864 -143.231 0.01 11.999999999999998";
        
        Node = "-21.163 -143.254 0.01 12.0";
        
        Node = "-21.462 -143.278 0.01 12.0";
        
        Node = "-21.761 -143.303 0.01 11.999999999999998";
        
        Node = "-22.06 -143.328 0.01 11.999999999999998";
        
        Node = "-22.359 -143.355 0.01 12.000000000000002";
        
        Node = "-22.658 -143.382 0.01 12.000000000000004";
        
        Node = "-22.956 -143.409 0.01 12.000000000000004";
        
        Node = "-23.255 -143.436 0.01 12.000000000000002";
        
        Node = "-23.554 -143.463 0.01 12.000000000000002";
        
        Node = "-23.853 -143.489 0.01 12.0";
        
        Node = "-24.152 -143.514 0.01 11.999999999999998";
        
        Node = "-24.451 -143.538 0.01 11.999999999999996";
        
        Node = "-24.75 -143.562 0.01 12.0";
        
        Node = "-25.049 -143.585 0.01 11.999999999999998";
        
        Node = "-25.348 -143.61 0.01 12.0";
        
        Node = "-25.647 -143.636 0.01 12.000000000000002";
        
        Node = "-25.945 -143.663 0.01 11.999999999999998";
        
        Node = "-26.244 -143.69 0.01 12.0";
        
        Node = "-26.543 -143.716 0.01 12.000000000000004";
        
        Node = "-26.842 -143.741 0.01 12.000000000000002";
        
        Node = "-27.141 -143.765 0.01 12.000000000000004";
        
        Node = "-27.44 -143.788 0.01 12.000000000000002";
        
        Node = "-27.739 -143.812 0.01 12.000000000000002";
        
        Node = "-28.038 -143.837 0.01 12.000000000000002";
        
        Node = "-28.337 -143.863 0.01 12.000000000000002";
        
        Node = "-28.636 -143.89 0.01 12.0";
        
        Node = "-28.934 -143.917 0.01 12.0";
        
        Node = "-29.233 -143.944 0.01 12.000000000000002";
        
        Node = "-29.532 -143.971 0.01 12.0";
        
        Node = "-29.831 -143.997 0.01 11.999999999999996";
        
        Node = "-30.13 -144.023 0.01 11.999999999999998";
        
        Node = "-30.429 -144.048 0.01 11.999999999999996";
        
        Node = "-30.728 -144.073 0.01 11.999999999999996";
        
        Node = "-31.027 -144.096 0.01 11.999999999999998";
        
        Node = "-31.326 -144.12 0.01 12.0";
        
        Node = "-31.625 -144.144 0.01 12.0";
        
        Node = "-31.924 -144.169 0.01 12.0";
        
        Node = "-32.223 -144.195 0.01 12.0";
        
        Node = "-32.521 -144.222 0.01 12.0";
        
        Node = "-32.82 -144.25 0.01 12.0";
        
    };
    
    new DecalRoad(road_6_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "-2.372499025913065 -147.44802728454658 0.01 0.15";
        
        Node = "-2.6714990259130644 -147.4770272845466 0.01 0.15";
        
        Node = "-2.6887620369240075 -147.47867546416768 0.01 0.15";
        
        Node = "-2.9867620369240058 -147.50667546416767 0.01 0.15";
        
        Node = "-3.0458194988310616 -147.5119187939792 0.01 0.15";
        
        Node = "-3.344819498831061 -147.5369187939792 0.01 0.15";
        
        Node = "-3.3639409553495163 -147.53848559793707 0.01 0.15";
        
        Node = "-3.662940955349516 -147.56248559793707 0.01 0.15";
        
        Node = "-3.961940955349519 -147.58648559793707 0.01 0.15";
        
        Node = "-3.9810777189407176 -147.58798965377164 0.01 0.15";
        
        Node = "-4.270508087289343 -147.61025352826 0.01 0.15";
        
        Node = "-4.327846649592367 -147.6148559546656 0.01 0.15";
        
        Node = "-4.550378925788451 -147.6327180771696 0.01 0.15";
        
        Node = "-4.839819498831606 -147.65691879397923 0.01 0.15";
        
        Node = "-5.119716721619941 -147.68032157180434 0.01 0.15";
        
        Node = "-5.399624968832335 -147.70559756737202 0.01 0.15";
        
        Node = "-5.540465665636546 -147.71831562360518 0.01 0.15";
        
        Node = "-5.698624968832878 -147.73259756737204 0.01 0.15";
        
        Node = "-5.997624968832337 -147.75959756737203 0.01 0.15";
        
        Node = "-6.035819498831607 -147.76291879397922 0.01 0.15";
        
        Node = "-6.334819498831607 -147.7879187939792 0.01 0.15";
        
        Node = "-6.353940955349518 -147.78948559793704 0.01 0.15";
        
        Node = "-6.652940955349518 -147.81348559793705 0.01 0.15";
        
        Node = "-6.672077718940173 -147.8149896537716 0.01 0.15";
        
        Node = "-6.687061973209065 -147.81614228871535 0.01 0.15";
        
        Node = "-6.961508087293076 -147.8372535282603 0.01 0.15";
        
        Node = "-7.250940955349517 -147.86048559793707 0.01 0.15";
        
        Node = "-7.530822152709497 -147.88295097832713 0.01 0.15";
        
        Node = "-7.809880879840225 -147.90721695459936 0.01 0.15";
        
        Node = "-8.09833522088747 -147.93238411187195 0.01 0.15";
        
        Node = "-8.388624968832875 -147.95859756737204 0.01 0.15";
        
        Node = "-8.678087589903662 -147.98473633248548 0.01 0.15";
        
        Node = "-8.83165448950843 -147.99911717927122 0.01 0.15";
        
        Node = "-8.967553119642186 -148.0118434723941 0.01 0.15";
        
        Node = "-9.005713965492838 -148.01528939683004 0.01 0.15";
        
        Node = "-9.294303444066816 -148.04038413409737 0.01 0.15";
        
        Node = "-9.58189626693845 -148.06644120194142 0.01 0.15";
        
        Node = "-9.621819498831062 -148.06991879397918 0.01 0.15";
        
        Node = "-9.920819498831062 -148.0949187939792 0.01 0.15";
        
        Node = "-9.93994095534952 -148.09648559793706 0.01 0.15";
        
        Node = "-10.23894095534952 -148.12048559793706 0.01 0.15";
        
        Node = "-10.496260164611975 -148.14113998262704 0.01 0.15";
        
        Node = "-10.836940955349515 -148.16848559793706 0.01 0.15";
        
        Node = "-11.126378925791563 -148.19171807716987 0.01 0.15";
        
        Node = "-11.406265379628781 -148.215119954581 0.01 0.15";
        
        Node = "-11.686168063611667 -148.2394593184056 0.01 0.15";
        
        Node = "-11.975624968832335 -148.26559756737203 0.01 0.15";
        
        Node = "-12.27376060611524 -148.29251951455137 0.01 0.15";
        
        Node = "-12.325864581429737 -148.29724034452954 0.01 0.15";
        
        Node = "-12.570896266937904 -148.31944120194137 0.01 0.15";
        
        Node = "-12.871624968832876 -148.34659756737204 0.01 0.15";
        
        Node = "-13.170624968832335 -148.37359756737203 0.01 0.15";
        
        Node = "-13.208819498831609 -148.37691879397926 0.01 0.15";
        
        Node = "-13.507819498831608 -148.40191879397923 0.01 0.15";
        
        Node = "-13.80681949883106 -148.42691879397918 0.01 0.15";
        
        Node = "-13.825940955349516 -148.42848559793705 0.01 0.15";
        
        Node = "-14.423940955349515 -148.47648559793706 0.01 0.15";
        
        Node = "-14.471268723607537 -148.48028448234572 0.01 0.15";
        
        Node = "-14.713378925791567 -148.49971807716986 0.01 0.15";
        
        Node = "-14.993265379628781 -148.523119954581 0.01 0.15";
        
        Node = "-15.273168063611763 -148.5474593184056 0.01 0.15";
        
        Node = "-15.522587934316583 -148.56998218298432 0.01 0.15";
        
        Node = "-15.562624968832338 -148.57359756737202 0.01 0.15";
        
        Node = "-15.580047815271769 -148.57514427111354 0.01 0.15";
        
        Node = "-15.878047815271767 -148.60114427111355 0.01 0.15";
        
        Node = "-16.17871396549338 -148.6272893968301 0.01 0.15";
        
        Node = "-16.197819498831066 -148.62891879397918 0.01 0.15";
        
        Node = "-16.49681949883107 -148.6539187939792 0.01 0.15";
        
        Node = "-16.53507771894072 -148.65698965377163 0.01 0.15";
        
        Node = "-16.60923887191313 -148.66269435784642 0.01 0.15";
        
        Node = "-16.82450808728926 -148.67925352825998 0.01 0.15";
        
        Node = "-17.393822152711532 -148.7249509783273 0.01 0.15";
        
        Node = "-17.673713965492837 -148.74928939683005 0.01 0.15";
        
        Node = "-17.97271396549338 -148.7752893968301 0.01 0.15";
        
        Node = "-18.252627826756356 -148.79962973259208 0.01 0.15";
        
        Node = "-18.532553119642195 -148.8258434723941 0.01 0.15";
        
        Node = "-18.549896266937903 -148.82744120194135 0.01 0.15";
        
        Node = "-18.706659333297267 -148.84164456701419 0.01 0.15";
        
        Node = "-18.8478962669379 -148.85444120194137 0.01 0.15";
        
        Node = "-19.148624968832877 -148.88159756737204 0.01 0.15";
        
        Node = "-19.167713965492837 -148.88328939683004 0.01 0.15";
        
        Node = "-19.466713965492836 -148.90928939683005 0.01 0.15";
        
        Node = "-19.76571396549338 -148.9352893968301 0.01 0.15";
        
        Node = "-19.784819498831066 -148.93691879397917 0.01 0.15";
        
        Node = "-20.08381949883107 -148.96191879397918 0.01 0.15";
        
        Node = "-20.102940955349517 -148.96348559793705 0.01 0.15";
        
        Node = "-20.401940955349517 -148.98748559793705 0.01 0.15";
        
        Node = "-20.42107771894072 -148.98898965377163 0.01 0.15";
        
        Node = "-20.548792026522552 -148.99881383127791 0.01 0.15";
        
        Node = "-20.71050808728926 -149.01125352825997 0.01 0.15";
        
        Node = "-20.990378925791603 -149.03371807716985 0.01 0.15";
        
        Node = "-21.559716721623385 -149.08132157180464 0.01 0.15";
        
        Node = "-21.839624968832883 -149.10659756737203 0.01 0.15";
        
        Node = "-22.137760606158363 -149.1335195145553 0.01 0.15";
        
        Node = "-22.301213924831988 -149.14832904342842 0.01 0.15";
        
        Node = "-22.434896266938445 -149.1604412019414 0.01 0.15";
        
        Node = "-22.735624968832333 -149.18759756737202 0.01 0.15";
        
        Node = "-23.034624968832876 -149.21459756737204 0.01 0.15";
        
        Node = "-23.05371396549284 -149.21628939683004 0.01 0.15";
        
        Node = "-23.352713965492843 -149.24228939683005 0.01 0.15";
        
        Node = "-23.371819498831062 -149.2439187939792 0.01 0.15";
        
        Node = "-23.67081949883106 -149.2689187939792 0.01 0.15";
        
        Node = "-23.689940955349517 -149.27048559793707 0.01 0.15";
        
        Node = "-24.287940955349516 -149.31848559793707 0.01 0.15";
        
        Node = "-24.307077718940718 -149.31998965377164 0.01 0.15";
        
        Node = "-24.369242411344228 -149.3247715531873 0.01 0.15";
        
        Node = "-24.58694350654043 -149.3415177912793 0.01 0.15";
        
        Node = "-24.85726537962887 -149.364119954581 0.01 0.15";
        
        Node = "-25.13630344407161 -149.38838413409778 0.01 0.15";
        
        Node = "-25.42389626693791 -149.41444120194137 0.01 0.15";
        
        Node = "-25.486625689144134 -149.42010578633904 0.01 0.15";
        
        Node = "-25.724624968832877 -149.44159756737204 0.01 0.15";
        
        Node = "-25.743713965492837 -149.44328939683004 0.01 0.15";
        
        Node = "-26.042713965492837 -149.46928939683005 0.01 0.15";
        
        Node = "-26.06181949883106 -149.4709187939792 0.01 0.15";
        
        Node = "-26.36081949883106 -149.4959187939792 0.01 0.15";
        
        Node = "-26.379940955350058 -149.4974855979371 0.01 0.15";
        
        Node = "-26.61013979775519 -149.515963096993 0.01 0.15";
        
        Node = "-26.678940955350058 -149.52148559793707 0.01 0.15";
        
        Node = "-26.698077718940176 -149.5229896537716 0.01 0.15";
        
        Node = "-26.987508087292913 -149.54525352826028 0.01 0.15";
        
        Node = "-27.26737892578847 -149.56771807716962 0.01 0.15";
        
        Node = "-27.547265379635142 -149.59111995458153 0.01 0.15";
        
        Node = "-27.827168063614934 -149.61545931840587 0.01 0.15";
        
        Node = "-28.115760606117362 -149.64151951455156 0.01 0.15";
        
        Node = "-28.41289626693791 -149.66844120194136 0.01 0.15";
        
        Node = "-28.68014401580824 -149.69257417456126 0.01 0.15";
        
        Node = "-28.713624968832878 -149.69559756737203 0.01 0.15";
        
        Node = "-29.012624968832334 -149.72259756737202 0.01 0.15";
        
        Node = "-29.031713965492838 -149.72428939683005 0.01 0.15";
        
        Node = "-29.330713965492837 -149.75028939683006 0.01 0.15";
        
        Node = "-29.62971396549338 -149.7762893968301 0.01 0.15";
        
        Node = "-29.64881949883106 -149.77791879397918 0.01 0.15";
        
        Node = "-29.94781949883106 -149.8029187939792 0.01 0.15";
        
        Node = "-30.24681949883107 -149.8279187939792 0.01 0.15";
        
        Node = "-30.28507771894072 -149.83098965377164 0.01 0.15";
        
        Node = "-30.461807173706102 -149.84458422721514 0.01 0.15";
        
        Node = "-30.57450808728926 -149.85325352825998 0.01 0.15";
        
        Node = "-31.153378925791603 -149.89971807716987 0.01 0.15";
        
        Node = "-31.43326537962887 -149.923119954581 0.01 0.15";
        
        Node = "-31.712303444071612 -149.94738413409777 0.01 0.15";
        
        Node = "-31.99122348865059 -149.9726554133046 0.01 0.15";
        
        Node = "-32.28155311964218 -149.9998434723941 0.01 0.15";
        
    };
    
    new DecalRoad(road_6_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "-33.35844688035782 -138.5001565276059 0.01 0.15";
        
        Node = "-33.05944688035782 -138.4721565276059 0.01 0.15";
        
        Node = "-33.04210373306209 -138.47055879805865 0.01 0.15";
        
        Node = "-32.74410373306209 -138.44355879805863 0.01 0.15";
        
        Node = "-32.72328603450662 -138.4417106031699 0.01 0.15";
        
        Node = "-32.42428603450662 -138.4157106031699 0.01 0.15";
        
        Node = "-32.405180501168935 -138.41408120602082 0.01 0.15";
        
        Node = "-32.106180501168936 -138.38908120602082 0.01 0.15";
        
        Node = "-32.08705904465048 -138.38751440206295 0.01 0.15";
        
        Node = "-31.48905904465049 -138.33951440206295 0.01 0.15";
        
        Node = "-31.469922281059283 -138.33801034622837 0.01 0.15";
        
        Node = "-31.34552264647631 -138.32844114356814 0.01 0.15";
        
        Node = "-31.19005649345948 -138.31648220872069 0.01 0.15";
        
        Node = "-30.91018050116893 -138.29308120602082 0.01 0.15";
        
        Node = "-30.620734620371124 -138.268880045419 0.01 0.15";
        
        Node = "-30.33128603450662 -138.24371060316992 0.01 0.15";
        
        Node = "-30.041831936391517 -138.21854068159467 0.01 0.15";
        
        Node = "-29.7789984202973 -138.1948065513788 0.01 0.15";
        
        Node = "-29.752375031167666 -138.19240243262797 0.01 0.15";
        
        Node = "-29.454239393882638 -138.16548048544843 0.01 0.15";
        
        Node = "-29.157103733062087 -138.13855879805863 0.01 0.15";
        
        Node = "-28.85637503116712 -138.11140243262795 0.01 0.15";
        
        Node = "-28.83728603450716 -138.10971060316996 0.01 0.15";
        
        Node = "-28.538286034507166 -138.08371060316995 0.01 0.15";
        
        Node = "-28.519180501168393 -138.08208120602075 0.01 0.15";
        
        Node = "-28.2201805011684 -138.05708120602077 0.01 0.15";
        
        Node = "-28.201059044650485 -138.05551440206295 0.01 0.15";
        
        Node = "-27.902059044650485 -138.03151440206295 0.01 0.15";
        
        Node = "-27.88292228105982 -138.0300103462284 0.01 0.15";
        
        Node = "-27.59349191270227 -138.00774647173935 0.01 0.15";
        
        Node = "-27.469988585279822 -137.99783316117703 0.01 0.15";
        
        Node = "-27.31362107421267 -137.9852819228305 0.01 0.15";
        
        Node = "-27.033734620368534 -137.96188004541878 0.01 0.15";
        
        Node = "-26.75383193638507 -137.93754068159413 0.01 0.15";
        
        Node = "-26.593600211322475 -137.92307159605338 0.01 0.15";
        
        Node = "-26.46523939388264 -137.91148048544844 0.01 0.15";
        
        Node = "-26.16810373306209 -137.88455879805863 0.01 0.15";
        
        Node = "-26.14728603450662 -137.8827106031699 0.01 0.15";
        
        Node = "-25.848286034506614 -137.85671060316992 0.01 0.15";
        
        Node = "-25.829180501168935 -137.85508120602083 0.01 0.15";
        
        Node = "-25.530180501168942 -137.83008120602082 0.01 0.15";
        
        Node = "-25.49192228105928 -137.82701034622838 0.01 0.15";
        
        Node = "-25.243687949622853 -137.80791539765636 0.01 0.15";
        
        Node = "-25.20249191271074 -137.80474647174003 0.01 0.15";
        
        Node = "-24.6236210742084 -137.75828192283015 0.01 0.15";
        
        Node = "-24.343734620368444 -137.73488004541878 0.01 0.15";
        
        Node = "-24.063831936385156 -137.71054068159413 0.01 0.15";
        
        Node = "-23.774375031167125 -137.68440243262796 0.01 0.15";
        
        Node = "-23.476239393841638 -137.6574804854447 0.01 0.15";
        
        Node = "-23.412093754886655 -137.6516686322508 0.01 0.15";
        
        Node = "-23.179103733061552 -137.6305587980586 0.01 0.15";
        
        Node = "-22.878375031167664 -137.60340243262797 0.01 0.15";
        
        Node = "-22.579375031167118 -137.57640243262796 0.01 0.15";
        
        Node = "-22.541180501168938 -137.57308120602082 0.01 0.15";
        
        Node = "-21.94318050116894 -137.5230812060208 0.01 0.15";
        
        Node = "-21.924059044650484 -137.52151440206293 0.01 0.15";
        
        Node = "-21.625059044650484 -137.49751440206293 0.01 0.15";
        
        Node = "-21.60592228105928 -137.49601034622836 0.01 0.15";
        
        Node = "-21.41742468858535 -137.48151053142269 0.01 0.15";
        
        Node = "-21.316491912710745 -137.47374647174001 0.01 0.15";
        
        Node = "-21.036621074208213 -137.4512819228301 0.01 0.15";
        
        Node = "-20.756734620371304 -137.427880045419 0.01 0.15";
        
        Node = "-20.467286034506614 -137.4027106031699 0.01 0.15";
        
        Node = "-20.17783193638506 -137.37754068159413 0.01 0.15";
        
        Node = "-19.889239393884765 -137.35148048544863 0.01 0.15";
        
        Node = "-19.826194036332886 -137.3457683221805 0.01 0.15";
        
        Node = "-19.600776511348982 -137.32534458669537 0.01 0.15";
        
        Node = "-19.3104468803578 -137.2981565276059 0.01 0.15";
        
        Node = "-19.27228603450716 -137.29471060316996 0.01 0.15";
        
        Node = "-18.97328603450716 -137.26871060316995 0.01 0.15";
        
        Node = "-18.674286034506622 -137.2427106031699 0.01 0.15";
        
        Node = "-18.375286034507162 -137.21671060316996 0.01 0.15";
        
        Node = "-18.337059044650488 -137.21351440206294 0.01 0.15";
        
        Node = "-17.73905904465049 -137.16551440206294 0.01 0.15";
        
        Node = "-17.719922281059283 -137.16401034622837 0.01 0.15";
        
        Node = "-17.47187744099437 -137.14492997391568 0.01 0.15";
        
        Node = "-17.44005649345948 -137.14248220872068 0.01 0.15";
        
        Node = "-17.1697346203713 -137.119880045419 0.01 0.15";
        
        Node = "-16.881119120128005 -137.09478304539786 0.01 0.15";
        
        Node = "-16.753122217809313 -137.08361553043045 0.01 0.15";
        
        Node = "-16.592664779119318 -137.06961588812862 0.01 0.15";
        
        Node = "-16.302375031167664 -137.04340243262797 0.01 0.15";
        
        Node = "-16.283286034506617 -137.0417106031699 0.01 0.15";
        
        Node = "-15.984286034506624 -137.0157106031699 0.01 0.15";
        
        Node = "-15.965180501168938 -137.01408120602082 0.01 0.15";
        
        Node = "-15.666180501168938 -136.9890812060208 0.01 0.15";
        
        Node = "-15.647059044650483 -136.98751440206294 0.01 0.15";
        
        Node = "-15.348059044650483 -136.96351440206294 0.01 0.15";
        
        Node = "-15.30038916247937 -136.95968805700574 0.01 0.15";
        
        Node = "-14.759621074208354 -136.91628192283014 0.01 0.15";
        
        Node = "-14.47018050116894 -136.8920812060208 0.01 0.15";
        
        Node = "-14.19028327837809 -136.8686784281955 0.01 0.15";
        
        Node = "-13.910375031167668 -136.84340243262798 0.01 0.15";
        
        Node = "-13.612239393883705 -136.81648048544852 0.01 0.15";
        
        Node = "-13.460762792438572 -136.8027560953847 0.01 0.15";
        
        Node = "-13.315103733062095 -136.78955879805864 0.01 0.15";
        
        Node = "-13.01437503116712 -136.76240243262797 0.01 0.15";
        
        Node = "-12.715375031167667 -136.73540243262798 0.01 0.15";
        
        Node = "-12.69628603450662 -136.7337106031699 0.01 0.15";
        
        Node = "-12.397286034506621 -136.70771060316991 0.01 0.15";
        
        Node = "-12.378180501168941 -136.70608120602083 0.01 0.15";
        
        Node = "-12.079180501168935 -136.68108120602082 0.01 0.15";
        
        Node = "-12.06005904465048 -136.67951440206295 0.01 0.15";
        
        Node = "-11.76105904465048 -136.65551440206295 0.01 0.15";
        
        Node = "-11.315318263408884 -136.61973587781614 0.01 0.15";
        
        Node = "-11.163059044650481 -136.60751440206295 0.01 0.15";
        
        Node = "-10.873621074208437 -136.58428192283014 0.01 0.15";
        
        Node = "-10.604148150157364 -136.5617507418894 0.01 0.15";
        
        Node = "-10.32610373306155 -136.5365587980586 0.01 0.15";
        
        Node = "-10.305286034507162 -136.53471060316997 0.01 0.15";
        
        Node = "-10.025372173243746 -136.51037026740792 0.01 0.15";
        
        Node = "-9.944417194776157 -136.50278919919023 0.01 0.15";
        
        Node = "-9.745446880357818 -136.4841565276059 0.01 0.15";
        
        Node = "-9.726375031167663 -136.482402432628 0.01 0.15";
        
        Node = "-9.427375031167664 -136.45540243262798 0.01 0.15";
        
        Node = "-9.128375031167124 -136.42840243262796 0.01 0.15";
        
        Node = "-9.110952184728227 -136.42685572888647 0.01 0.15";
        
        Node = "-8.812952184728232 -136.40085572888646 0.01 0.15";
        
        Node = "-8.512286034507163 -136.37471060316994 0.01 0.15";
        
        Node = "-8.474059044649941 -136.3715144020629 0.01 0.15";
        
        Node = "-8.175059044649942 -136.34751440206293 0.01 0.15";
        
        Node = "-7.876059044650482 -136.32351440206295 0.01 0.15";
        
        Node = "-7.856922281059823 -136.3220103462284 0.01 0.15";
        
        Node = "-7.567491912706927 -136.2997464717397 0.01 0.15";
        
        Node = "-7.512774762275576 -136.29535445966494 0.01 0.15";
        
        Node = "-7.287621074203052 -136.2772819228297 0.01 0.15";
        
        Node = "-7.017283278382287 -136.25467842819586 0.01 0.15";
        
        Node = "-6.737375031167666 -136.22940243262798 0.01 0.15";
        
        Node = "-6.69842127784333 -136.22588486961877 0.01 0.15";
        
        Node = "-6.438375031167119 -136.20240243262796 0.01 0.15";
        
        Node = "-6.139375031167667 -136.17540243262798 0.01 0.15";
        
        Node = "-6.10118050116894 -136.1720812060208 0.01 0.15";
        
        Node = "-5.802180501168934 -136.1470812060208 0.01 0.15";
        
        Node = "-5.503180501168394 -136.12208120602077 0.01 0.15";
        
        Node = "-5.484059044650479 -136.12051440206295 0.01 0.15";
        
        Node = "-5.18505904465048 -136.09651440206295 0.01 0.15";
        
        Node = "-5.165922281059281 -136.09501034622838 0.01 0.15";
        
        Node = "-5.148924060731979 -136.09370279081858 0.01 0.15";
        
        Node = "-4.876491912710655 -136.07274647174003 0.01 0.15";
        
        Node = "-4.587059044650481 -136.04951440206295 0.01 0.15";
        
        Node = "-4.297621074208372 -136.02628192283015 0.01 0.15";
        
        Node = "-4.0377226901274526 -136.00455128870965 0.01 0.15";
        
        Node = "-3.777870705890514 -135.9801356660297 0.01 0.15";
        
        Node = "-3.4875009740869345 -135.9519727154534 0.01 0.15";
        
    };
    
    new DecalRoad(road_6_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "-33.00647511008063 -142.2587122173527 0.01 0.3";
        
        Node = "-32.70747511008063 -142.2307122173527 0.01 0.3";
        
        Node = "-32.70146882530289 -142.23015889110258 0.01 0.3";
        
        Node = "-32.40346882530289 -142.20315889110256 0.01 0.3";
        
        Node = "-32.39625923272956 -142.2025188236086 0.01 0.3";
        
        Node = "-32.09725923272956 -142.17651882360863 0.01 0.3";
        
        Node = "-32.090642597807424 -142.17595453022366 0.01 0.3";
        
        Node = "-31.791642597807424 -142.15095453022366 0.01 0.3";
        
        Node = "-31.785020448363802 -142.15041191413437 0.01 0.3";
        
        Node = "-31.187020448363803 -142.10241191413436 0.01 0.3";
        
        Node = "-31.180392997769445 -142.10189102899685 0.01 0.3";
        
        Node = "-31.056754701963186 -142.0923803908579 0.01 0.3";
        
        Node = "-30.88801956483607 -142.07940076492505 0.01 0.3";
        
        Node = "-30.59564259780742 -142.05495453022365 0.01 0.3";
        
        Node = "-30.299951383677495 -142.03023118456062 0.01 0.3";
        
        Node = "-30.004259232729567 -142.00451882360863 0.01 0.3";
        
        Node = "-29.708565172779622 -141.97880629665647 0.01 0.3";
        
        Node = "-29.419856904871793 -141.95273565039054 0.01 0.3";
        
        Node = "-29.412870140664126 -141.95210473857244 0.01 0.3";
        
        Node = "-29.114169487042517 -141.9251317698508 0.01 0.3";
        
        Node = "-28.81646882530289 -141.89815889110255 0.01 0.3";
        
        Node = "-28.51687014066394 -141.87110473857246 0.01 0.3";
        
        Node = "-28.51025923272975 -141.87051882360865 0.01 0.3";
        
        Node = "-28.211259232729752 -141.84451882360864 0.01 0.3";
        
        Node = "-28.204642597807236 -141.84395453022364 0.01 0.3";
        
        Node = "-27.905642597807237 -141.81895453022366 0.01 0.3";
        
        Node = "-27.8990204483638 -141.81841191413437 0.01 0.3";
        
        Node = "-27.600020448363807 -141.79441191413437 0.01 0.3";
        
        Node = "-27.59339299776964 -141.79389102899685 0.01 0.3";
        
        Node = "-27.297707155915504 -141.77114596423883 0.01 0.3";
        
        Node = "-27.189080667498388 -141.76242678122208 0.01 0.3";
        
        Node = "-27.005331973752305 -141.7476777221923 0.01 0.3";
        
        Node = "-26.712951383673897 -141.72323118456032 0.01 0.3";
        
        Node = "-26.420565172774545 -141.697806296656 0.01 0.3";
        
        Node = "-26.231795332302184 -141.6807601906602 0.01 0.3";
        
        Node = "-26.125169487042513 -141.6711317698508 0.01 0.3";
        
        Node = "-25.827468825302887 -141.64415889110256 0.01 0.3";
        
        Node = "-25.82025923272957 -141.64351882360862 0.01 0.3";
        
        Node = "-25.521259232729562 -141.61751882360863 0.01 0.3";
        
        Node = "-25.514642597807423 -141.61695453022367 0.01 0.3";
        
        Node = "-25.215642597807424 -141.59195453022366 0.01 0.3";
        
        Node = "-25.20239299776945 -141.59089102899685 0.01 0.3";
        
        Node = "-24.9579554927628 -141.57208814399633 0.01 0.3";
        
        Node = "-24.90670715591586 -141.56814596423888 0.01 0.3";
        
        Node = "-24.31533197375638 -141.52067772219263 0.01 0.3";
        
        Node = "-24.0229513836739 -141.49623118456032 0.01 0.3";
        
        Node = "-23.730565172774533 -141.470806296656 0.01 0.3";
        
        Node = "-23.43487014066394 -141.44410473857246 0.01 0.3";
        
        Node = "-23.136169487026017 -141.41713176984928 0.01 0.3";
        
        Node = "-23.04902526976109 -141.40923615284876 0.01 0.3";
        
        Node = "-22.838468825302705 -141.39015889110254 0.01 0.3";
        
        Node = "-22.53887014066413 -141.36310473857245 0.01 0.3";
        
        Node = "-22.23987014066394 -141.33610473857246 0.01 0.3";
        
        Node = "-22.226642597807427 -141.33495453022365 0.01 0.3";
        
        Node = "-21.628642597807428 -141.28495453022364 0.01 0.3";
        
        Node = "-21.6220204483638 -141.28441191413435 0.01 0.3";
        
        Node = "-21.323020448363806 -141.26041191413435 0.01 0.3";
        
        Node = "-21.316392997769448 -141.25989102899683 0.01 0.3";
        
        Node = "-21.13359568789376 -141.24582969746794 0.01 0.3";
        
        Node = "-21.020707155915858 -141.23714596423886 0.01 0.3";
        
        Node = "-20.72833197375629 -141.2136777221926 0.01 0.3";
        
        Node = "-20.435951383677576 -141.1892311845606 0.01 0.3";
        
        Node = "-20.140259232729562 -141.16351882360863 0.01 0.3";
        
        Node = "-19.844565172774537 -141.137806296656 0.01 0.3";
        
        Node = "-19.549169487043578 -141.11113176985089 0.01 0.3";
        
        Node = "-19.460298956259322 -141.1030797418939 0.01 0.3";
        
        Node = "-19.254472384884295 -141.0844310256955 0.01 0.3";
        
        Node = "-18.958475110080627 -141.0567122173527 0.01 0.3";
        
        Node = "-18.945259232729754 -141.05551882360865 0.01 0.3";
        
        Node = "-18.646259232729747 -141.02951882360864 0.01 0.3";
        
        Node = "-18.34725923272957 -141.00351882360863 0.01 0.3";
        
        Node = "-18.048259232729748 -140.97751882360865 0.01 0.3";
        
        Node = "-18.035020448363802 -140.97641191413436 0.01 0.3";
        
        Node = "-17.437020448363803 -140.92841191413436 0.01 0.3";
        
        Node = "-17.430392997769445 -140.92789102899684 0.01 0.3";
        
        Node = "-17.190011236833378 -140.90940012430946 0.01 0.3";
        
        Node = "-17.13801956483607 -140.90540076492505 0.01 0.3";
        
        Node = "-16.84895138367758 -140.88123118456062 0.01 0.3";
        
        Node = "-16.55354774719825 -140.8555439118233 0.01 0.3";
        
        Node = "-16.3260262087868 -140.83569303934445 0.01 0.3";
        
        Node = "-16.258853603162024 -140.8298323422094 0.01 0.3";
        
        Node = "-15.962870140664123 -140.80310473857244 0.01 0.3";
        
        Node = "-15.956259232729565 -140.8025188236086 0.01 0.3";
        
        Node = "-15.657259232729565 -140.77651882360863 0.01 0.3";
        
        Node = "-15.650642597807426 -140.77595453022366 0.01 0.3";
        
        Node = "-15.351642597807427 -140.75095453022365 0.01 0.3";
        
        Node = "-15.345020448363805 -140.75041191413436 0.01 0.3";
        
        Node = "-15.046020448363805 -140.72641191413436 0.01 0.3";
        
        Node = "-15.029550221780362 -140.7250898892581 0.01 0.3";
        
        Node = "-14.45133197375634 -140.67867772219262 0.01 0.3";
        
        Node = "-14.155642597807429 -140.65395453022364 0.01 0.3";
        
        Node = "-13.86325827822904 -140.6295076807606 0.01 0.3";
        
        Node = "-13.570870140664127 -140.60310473857245 0.01 0.3";
        
        Node = "-13.272169487043577 -140.5761317698509 0.01 0.3";
        
        Node = "-13.0898501443234 -140.55961290322858 0.01 0.3";
        
        Node = "-12.974468825302893 -140.54915889110256 0.01 0.3";
        
        Node = "-12.674870140663941 -140.52210473857247 0.01 0.3";
        
        Node = "-12.375870140664126 -140.49510473857245 0.01 0.3";
        
        Node = "-12.369259232729561 -140.49451882360862 0.01 0.3";
        
        Node = "-12.070259232729569 -140.46851882360863 0.01 0.3";
        
        Node = "-12.063642597807423 -140.46795453022366 0.01 0.3";
        
        Node = "-11.764642597807423 -140.44295453022366 0.01 0.3";
        
        Node = "-11.758020448363801 -140.44241191413437 0.01 0.3";
        
        Node = "-11.459020448363802 -140.41841191413437 0.01 0.3";
        
        Node = "-11.047776521421191 -140.38540236815905 0.01 0.3";
        
        Node = "-10.861020448363803 -140.37041191413437 0.01 0.3";
        
        Node = "-10.56533197375638 -140.34667772219262 0.01 0.3";
        
        Node = "-10.276557800919392 -140.32253272446377 0.01 0.3";
        
        Node = "-9.985468825302704 -140.29615889110255 0.01 0.3";
        
        Node = "-9.978259232729755 -140.29551882360866 0.01 0.3";
        
        Node = "-9.68586915090713 -140.27009359910232 0.01 0.3";
        
        Node = "-9.580724043662656 -140.26024723454432 0.01 0.3";
        
        Node = "-9.39347511008063 -140.2427122173527 0.01 0.3";
        
        Node = "-9.38687014066413 -140.24210473857246 0.01 0.3";
        
        Node = "-9.087870140664123 -140.21510473857245 0.01 0.3";
        
        Node = "-8.788870140663938 -140.18810473857246 0.01 0.3";
        
        Node = "-8.782836254451333 -140.18756908359705 0.01 0.3";
        
        Node = "-8.484836254451338 -140.16156908359704 0.01 0.3";
        
        Node = "-8.185259232729756 -140.13551882360863 0.01 0.3";
        
        Node = "-8.172020448363618 -140.13441191413432 0.01 0.3";
        
        Node = "-7.873020448363619 -140.11041191413435 0.01 0.3";
        
        Node = "-7.574020448363804 -140.08641191413437 0.01 0.3";
        
        Node = "-7.5673929977696375 -140.08589102899685 0.01 0.3";
        
        Node = "-7.271707155911628 -140.06314596423852 0.01 0.3";
        
        Node = "-7.248379198071547 -140.06127348601723 0.01 0.3";
        
        Node = "-6.979331973751556 -140.03967772219224 0.01 0.3";
        
        Node = "-6.690258278229031 -140.0155076807606 0.01 0.3";
        
        Node = "-6.397870140664125 -139.98910473857245 0.01 0.3";
        
        Node = "-6.319981713971316 -139.98207133549317 0.01 0.3";
        
        Node = "-6.098870140663941 -139.96210473857246 0.01 0.3";
        
        Node = "-5.799870140664126 -139.93510473857245 0.01 0.3";
        
        Node = "-5.786642597807422 -139.93395453022364 0.01 0.3";
        
        Node = "-5.487642597807422 -139.90895453022364 0.01 0.3";
        
        Node = "-5.188642597807238 -139.88395453022366 0.01 0.3";
        
        Node = "-5.182020448363801 -139.88341191413437 0.01 0.3";
        
        Node = "-4.883020448363801 -139.85941191413437 0.01 0.3";
        
        Node = "-4.87639299776945 -139.85889102899685 0.01 0.3";
        
        Node = "-4.873188172238443 -139.85864450395601 0.01 0.3";
        
        Node = "-4.58070715591586 -139.83614596423888 0.01 0.3";
        
        Node = "-4.285020448363802 -139.81241191413437 0.01 0.3";
        
        Node = "-3.98933197375635 -139.78867772219263 0.01 0.3";
        
        Node = "-3.703873658918681 -139.7648099701159 0.01 0.3";
        
        Node = "-3.4190850929464247 -139.73805131291047 0.01 0.3";
        
        Node = "-3.1230739304197215 -139.709341200157 0.01 0.3";
        
    };
    
    new DecalRoad(road_6_separator_1) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "-2.7369260695802815 -143.69065879984296 0.01 0.15";
        
        Node = "-3.035926069580281 -143.719658799843 0.01 0.15";
        
        Node = "-3.0419046015321243 -143.72022959798016 0.01 0.15";
        
        Node = "-3.3399046015321225 -143.74822959798016 0.01 0.15";
        
        Node = "-3.3603574021925766 -143.75004546977635 0.01 0.15";
        
        Node = "-3.659357402192576 -143.77504546977636 0.01 0.15";
        
        Node = "-3.665979551636198 -143.77558808586565 0.01 0.15";
        
        Node = "-3.9649795516361976 -143.79958808586565 0.01 0.15";
        
        Node = "-4.263979551636197 -143.82358808586565 0.01 0.15";
        
        Node = "-4.270607002230552 -143.82410897100317 0.01 0.15";
        
        Node = "-4.566292844084138 -143.84685403576114 0.01 0.15";
        
        Node = "-4.590615854889794 -143.84880638445458 0.01 0.15";
        
        Node = "-4.858668026248445 -143.87032227780776 0.01 0.15";
        
        Node = "-5.154357402192765 -143.89504546977633 0.01 0.15";
        
        Node = "-5.446741721773218 -143.9194923192396 0.01 0.15";
        
        Node = "-5.739129859335872 -143.94589526142755 0.01 0.15";
        
        Node = "-5.918958137074107 -143.962133935337 0.01 0.15";
        
        Node = "-6.03812985933606 -143.97289526142754 0.01 0.15";
        
        Node = "-6.3371298593358745 -143.99989526142755 0.01 0.15";
        
        Node = "-6.350357402192763 -144.00104546977636 0.01 0.15";
        
        Node = "-6.649357402192763 -144.02604546977634 0.01 0.15";
        
        Node = "-6.655979551636197 -144.02658808586563 0.01 0.15";
        
        Node = "-6.954979551636196 -144.05058808586563 0.01 0.15";
        
        Node = "-6.961607002230362 -144.05110897100315 0.01 0.15";
        
        Node = "-6.9641600351047614 -144.05130535814732 0.01 0.15";
        
        Node = "-7.257292844088376 -144.07385403576149 0.01 0.15";
        
        Node = "-7.552979551636199 -144.09758808586565 0.01 0.15";
        
        Node = "-7.8453583212869376 -144.12105661587105 0.01 0.15";
        
        Node = "-8.137452252759836 -144.14645608817304 0.01 0.15";
        
        Node = "-8.432146396843592 -144.1721676577911 0.01 0.15";
        
        Node = "-8.728129859336061 -144.19889526142754 0.01 0.15";
        
        Node = "-9.023826870965216 -144.22559699826365 0.01 0.15";
        
        Node = "-9.19535167838017 -144.24165952203495 0.01 0.15";
        
        Node = "-9.319524889919371 -144.2532877826473 0.01 0.15";
        
        Node = "-9.332740767270245 -144.25448117639135 0.01 0.15";
        
        Node = "-9.62813539188316 -144.28016766548814 0.01 0.15";
        
        Node = "-9.922531174697298 -144.30684110889746 0.01 0.15";
        
        Node = "-9.936357402192577 -144.30804546977635 0.01 0.15";
        
        Node = "-10.235357402192577 -144.33304546977635 0.01 0.15";
        
        Node = "-10.241979551636199 -144.33358808586564 0.01 0.15";
        
        Node = "-10.540979551636198 -144.35758808586564 0.01 0.15";
        
        Node = "-10.764119827618622 -144.37549901102813 0.01 0.15";
        
        Node = "-11.138979551636197 -144.40558808586565 0.01 0.15";
        
        Node = "-11.43466802624362 -144.4293222778074 0.01 0.15";
        
        Node = "-11.727048616322552 -144.4537688154394 0.01 0.15";
        
        Node = "-12.019434827224075 -144.47919370334387 0.01 0.15";
        
        Node = "-12.315129859335872 -144.50589526142755 0.01 0.15";
        
        Node = "-12.613830512956426 -144.53286823014912 0.01 0.15";
        
        Node = "-12.696811809649589 -144.5403866697824 0.01 0.15";
        
        Node = "-12.91153117469711 -144.55984110889744 0.01 0.15";
        
        Node = "-13.211129859336062 -144.58689526142754 0.01 0.15";
        
        Node = "-13.510129859335873 -144.61389526142756 0.01 0.15";
        
        Node = "-13.523357402192765 -144.61504546977636 0.01 0.15";
        
        Node = "-13.822357402192765 -144.64004546977634 0.01 0.15";
        
        Node = "-14.121357402192576 -144.66504546977635 0.01 0.15";
        
        Node = "-14.127979551636194 -144.66558808586564 0.01 0.15";
        
        Node = "-14.725979551636193 -144.71358808586564 0.01 0.15";
        
        Node = "-14.742408745968241 -144.71490681718325 0.01 0.15";
        
        Node = "-15.021668026243624 -144.73732227780738 0.01 0.15";
        
        Node = "-15.314048616322552 -144.76176881543938 0.01 0.15";
        
        Node = "-15.60643482722412 -144.78719370334386 0.01 0.15";
        
        Node = "-15.89274112192247 -144.81304744901897 0.01 0.15";
        
        Node = "-15.902129859335876 -144.81389526142755 0.01 0.15";
        
        Node = "-15.908163745548663 -144.81443091640296 0.01 0.15";
        
        Node = "-16.206163745548665 -144.84043091640297 0.01 0.15";
        
        Node = "-16.50574076727043 -144.86648117639137 0.01 0.15";
        
        Node = "-16.512357402192578 -144.86704546977634 0.01 0.15";
        
        Node = "-16.81135740219258 -144.89204546977635 0.01 0.15";
        
        Node = "-16.824607002230554 -144.89310897100316 0.01 0.15";
        
        Node = "-16.89126187294346 -144.8982362687503 0.01 0.15";
        
        Node = "-17.12029284408414 -144.91585403576113 0.01 0.15";
        
        Node = "-17.708358321284862 -144.96305661587087 0.01 0.15";
        
        Node = "-18.000740767270248 -144.98848117639136 0.01 0.15";
        
        Node = "-18.299740767270432 -145.01448117639137 0.01 0.15";
        
        Node = "-18.592130849092893 -145.03990640089768 0.01 0.15";
        
        Node = "-18.884524889919376 -145.0672877826473 0.01 0.15";
        
        Node = "-18.89053117469711 -145.06784110889743 0.01 0.15";
        
        Node = "-19.072581315476892 -145.0843355847399 0.01 0.15";
        
        Node = "-19.188531174697108 -145.09484110889744 0.01 0.15";
        
        Node = "-19.48812985933606 -145.12189526142754 0.01 0.15";
        
        Node = "-19.494740767270248 -145.12248117639135 0.01 0.15";
        
        Node = "-19.793740767270247 -145.14848117639136 0.01 0.15";
        
        Node = "-20.09274076727043 -145.17448117639137 0.01 0.15";
        
        Node = "-20.099357402192577 -145.17504546977634 0.01 0.15";
        
        Node = "-20.39835740219258 -145.20004546977634 0.01 0.15";
        
        Node = "-20.4049795516362 -145.20058808586563 0.01 0.15";
        
        Node = "-20.7039795516362 -145.22458808586563 0.01 0.15";
        
        Node = "-20.710607002230553 -145.22510897100315 0.01 0.15";
        
        Node = "-20.832770451216724 -145.2345061593867 0.01 0.15";
        
        Node = "-21.00629284408414 -145.24785403576112 0.01 0.15";
        
        Node = "-21.29866802624362 -145.27132227780737 0.01 0.15";
        
        Node = "-21.886741721775877 -145.32049231923983 0.01 0.15";
        
        Node = "-22.179129859336065 -145.34689526142753 0.01 0.15";
        
        Node = "-22.477830512973984 -145.37386823015072 0.01 0.15";
        
        Node = "-22.664304986735324 -145.39076356837742 0.01 0.15";
        
        Node = "-22.775531174697296 -145.40084110889745 0.01 0.15";
        
        Node = "-23.075129859335874 -145.42789526142755 0.01 0.15";
        
        Node = "-23.37412985933606 -145.45489526142754 0.01 0.15";
        
        Node = "-23.380740767270247 -145.45548117639134 0.01 0.15";
        
        Node = "-23.67974076727025 -145.48148117639136 0.01 0.15";
        
        Node = "-23.686357402192577 -145.48204546977635 0.01 0.15";
        
        Node = "-23.985357402192577 -145.50704546977636 0.01 0.15";
        
        Node = "-23.9919795516362 -145.50758808586565 0.01 0.15";
        
        Node = "-24.589979551636198 -145.55558808586565 0.01 0.15";
        
        Node = "-24.596607002230552 -145.55610897100317 0.01 0.15";
        
        Node = "-24.65511714224247 -145.56060975100408 0.01 0.15";
        
        Node = "-24.88898043516388 -145.57859923507496 0.01 0.15";
        
        Node = "-25.178048616322503 -145.6027688154394 0.01 0.15";
        
        Node = "-25.470135391889663 -145.6281676654887 0.01 0.15";
        
        Node = "-25.76453117469711 -145.65484110889744 0.01 0.15";
        
        Node = "-25.848426226203653 -145.6624169416242 0.01 0.15";
        
        Node = "-26.06412985933606 -145.68189526142754 0.01 0.15";
        
        Node = "-26.070740767270248 -145.68248117639135 0.01 0.15";
        
        Node = "-26.369740767270248 -145.70848117639136 0.01 0.15";
        
        Node = "-26.376357402192575 -145.70904546977636 0.01 0.15";
        
        Node = "-26.675357402192574 -145.73404546977636 0.01 0.15";
        
        Node = "-26.681979551636385 -145.73458808586568 0.01 0.15";
        
        Node = "-26.891297373211874 -145.75138951636 0.01 0.15";
        
        Node = "-26.980979551636384 -145.75858808586565 0.01 0.15";
        
        Node = "-26.987607002230362 -145.75910897100314 0.01 0.15";
        
        Node = "-27.283292844088376 -145.78185403576148 0.01 0.15";
        
        Node = "-27.575668026248422 -145.80532227780776 0.01 0.15";
        
        Node = "-27.86804861632149 -145.82976881543928 0.01 0.15";
        
        Node = "-28.16043482722546 -145.85519370334399 0.01 0.15";
        
        Node = "-28.455830512957487 -145.8818682301492 0.01 0.15";
        
        Node = "-28.753531174697113 -145.90884110889743 0.01 0.15";
        
        Node = "-29.03930008397774 -145.93464641464954 0.01 0.15";
        
        Node = "-29.05312985933606 -145.93589526142753 0.01 0.15";
        
        Node = "-29.352129859335875 -145.96289526142755 0.01 0.15";
        
        Node = "-29.35874076727025 -145.96348117639135 0.01 0.15";
        
        Node = "-29.657740767270248 -145.98948117639137 0.01 0.15";
        
        Node = "-29.956740767270432 -146.01548117639138 0.01 0.15";
        
        Node = "-29.963357402192575 -146.01604546977634 0.01 0.15";
        
        Node = "-30.262357402192574 -146.04104546977635 0.01 0.15";
        
        Node = "-30.56135740219258 -146.06604546977636 0.01 0.15";
        
        Node = "-30.574607002230554 -146.06710897100317 0.01 0.15";
        
        Node = "-30.750705990037957 -146.08065504698834 0.01 0.15";
        
        Node = "-30.87029284408414 -146.08985403576114 0.01 0.15";
        
        Node = "-31.461668026243622 -146.13732227780739 0.01 0.15";
        
        Node = "-31.754048616322507 -146.1617688154394 0.01 0.15";
        
        Node = "-32.04613539188958 -146.1871676654887 0.01 0.15";
        
        Node = "-32.33752761511549 -146.21356897430448 0.01 0.15";
        
        Node = "-32.63352488991937 -146.2412877826473 0.01 0.15";
        
    };
    
    new DecalRoad(road_7) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "-2.93 -141.7 0.01 12.000000000000002";
        
        Node = "-2.897 -142.199 0.01 12.000000000000004";
        
        Node = "-2.863 -142.698 0.01 12.0";
        
        Node = "-2.83 -143.197 0.01 12.000000000000002";
        
        Node = "-2.796 -143.696 0.01 11.999999999999998";
        
        Node = "-2.762 -144.195 0.01 11.999999999999998";
        
        Node = "-2.728 -144.693 0.01 12.0";
        
        Node = "-2.695 -145.192 0.01 12.0";
        
        Node = "-2.661 -145.691 0.01 11.999999999999998";
        
        Node = "-2.628 -146.19 0.01 12.0";
        
        Node = "-2.595 -146.689 0.01 12.000000000000002";
        
        Node = "-2.562 -147.188 0.01 12.0";
        
        Node = "-2.528 -147.687 0.01 12.0";
        
        Node = "-2.492 -148.186 0.01 11.999999999999998";
        
        Node = "-2.456 -148.685 0.01 12.0";
        
        Node = "-2.42 -149.183 0.01 12.0";
        
        Node = "-2.383 -149.682 0.01 12.000000000000002";
        
        Node = "-2.348 -150.181 0.01 12.000000000000002";
        
        Node = "-2.314 -150.68 0.01 12.000000000000002";
        
        Node = "-2.28 -151.179 0.01 12.000000000000005";
        
        Node = "-2.247 -151.678 0.01 12.000000000000004";
        
        Node = "-2.214 -152.176 0.01 12.000000000000005";
        
        Node = "-2.181 -152.675 0.01 12.000000000000004";
        
        Node = "-2.147 -153.174 0.01 12.000000000000002";
        
        Node = "-2.114 -153.673 0.01 12.000000000000005";
        
        Node = "-2.08 -154.172 0.01 12.000000000000002";
        
        Node = "-2.046 -154.671 0.01 12.000000000000004";
        
        Node = "-2.013 -155.17 0.01 12.000000000000002";
        
        Node = "-1.979 -155.669 0.01 12.000000000000005";
        
        Node = "-1.946 -156.168 0.01 12.000000000000005";
        
        Node = "-1.912 -156.667 0.01 12.000000000000002";
        
        Node = "-1.878 -157.166 0.01 12.000000000000004";
        
        Node = "-1.845 -157.665 0.01 12.000000000000004";
        
        Node = "-1.811 -158.163 0.01 12.000000000000004";
        
        Node = "-1.778 -158.662 0.01 12.000000000000002";
        
        Node = "-1.744 -159.161 0.01 12.000000000000002";
        
        Node = "-1.71 -159.66 0.01 12.000000000000004";
        
        Node = "-1.677 -160.159 0.01 12.000000000000005";
        
        Node = "-1.643 -160.658 0.01 12.000000000000004";
        
        Node = "-1.61 -161.157 0.01 12.000000000000002";
        
        Node = "-1.576 -161.656 0.01 12.0";
        
        Node = "-1.543 -162.155 0.01 12.0";
        
        Node = "-1.509 -162.654 0.01 12.0";
        
        Node = "-1.475 -163.153 0.01 11.999999999999998";
        
        Node = "-1.441 -163.652 0.01 12.0";
        
        Node = "-1.408 -164.15 0.01 12.0";
        
        Node = "-1.374 -164.649 0.01 12.000000000000002";
        
        Node = "-1.34 -165.148 0.01 12.000000000000002";
        
        Node = "-1.307 -165.647 0.01 12.0";
        
        Node = "-1.273 -166.146 0.01 12.000000000000002";
        
        Node = "-1.24 -166.645 0.01 11.999999999999998";
        
        Node = "-1.206 -167.144 0.01 11.999999999999998";
        
        Node = "-1.173 -167.643 0.01 12.000000000000002";
        
        Node = "-1.139 -168.142 0.01 12.0";
        
        Node = "-1.105 -168.641 0.01 12.0";
        
        Node = "-1.072 -169.14 0.01 12.0";
        
        Node = "-1.038 -169.638 0.01 12.000000000000002";
        
        Node = "-1.004 -170.137 0.01 11.999999999999998";
        
        Node = "-0.971 -170.636 0.01 12.0";
        
        Node = "-0.938 -171.135 0.01 12.0";
        
        Node = "-0.905 -171.634 0.01 12.000000000000002";
        
        Node = "-0.871 -172.133 0.01 12.0";
        
        Node = "-0.837 -172.632 0.01 12.0";
        
        Node = "-0.802 -173.131 0.01 11.999999999999996";
        
        Node = "-0.766 -173.63 0.01 11.999999999999996";
        
        Node = "-0.73 -174.128 0.01 11.999999999999996";
        
        Node = "-0.694 -174.627 0.01 11.999999999999995";
        
        Node = "-0.658 -175.126 0.01 11.999999999999996";
        
        Node = "-0.624 -175.625 0.01 11.999999999999998";
        
        Node = "-0.591 -176.124 0.01 12.000000000000002";
        
        Node = "-0.558 -176.623 0.01 12.000000000000005";
        
        Node = "-0.525 -177.122 0.01 12.000000000000004";
        
        Node = "-0.491 -177.62 0.01 12.000000000000004";
        
        Node = "-0.457 -178.119 0.01 12.0";
        
        Node = "-0.423 -178.618 0.01 12.000000000000002";
        
        Node = "-0.39 -179.117 0.01 12.0";
        
        Node = "-0.356 -179.616 0.01 12.0";
        
        Node = "-0.322 -180.115 0.01 12.000000000000004";
        
        Node = "-0.289 -180.614 0.01 12.000000000000002";
        
        Node = "-0.255 -181.113 0.01 12.000000000000004";
        
        Node = "-0.222 -181.612 0.01 12.000000000000002";
        
        Node = "-0.188 -182.111 0.01 12.0";
        
        Node = "-0.154 -182.61 0.01 11.999999999999998";
        
        Node = "-0.121 -183.108 0.01 11.999999999999998";
        
        Node = "-0.087 -183.607 0.01 11.999999999999996";
        
        Node = "-0.054 -184.106 0.01 12.0";
        
        Node = "-0.02 -184.605 0.01 12.0";
        
        Node = "0.013 -185.104 0.01 12.000000000000002";
        
        Node = "0.047 -185.603 0.01 12.000000000000002";
        
        Node = "0.081 -186.102 0.01 12.0";
        
        Node = "0.114 -186.601 0.01 12.0";
        
        Node = "0.148 -187.1 0.01 12.0";
        
        Node = "0.181 -187.599 0.01 11.999999999999996";
        
        Node = "0.215 -188.098 0.01 11.999999999999998";
        
        Node = "0.249 -188.597 0.01 11.999999999999996";
        
        Node = "0.282 -189.095 0.01 12.0";
        
        Node = "0.316 -189.594 0.01 12.0";
        
        Node = "0.349 -190.093 0.01 11.999999999999996";
        
        Node = "0.383 -190.592 0.01 11.999999999999998";
        
        Node = "0.416 -191.091 0.01 12.000000000000002";
        
        Node = "0.45 -191.59 0.01 12.0";
        
    };
    
    new DecalRoad(road_7_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "2.832412859019666 -141.31891858848167 0.01 0.15";
        
        Node = "2.865032727174242 -141.812170534213 0.01 0.15";
        
        Node = "2.8986411286338414 -142.3054232497524 0.01 0.15";
        
        Node = "2.8994128590196664 -142.31691858848168 0.01 0.15";
        
        Node = "2.9320327271742705 -142.81017053421343 0.01 0.15";
        
        Node = "2.9656411286338407 -143.3034232497524 0.01 0.15";
        
        Node = "2.9996143968460753 -143.80203092145547 0.01 0.15";
        
        Node = "3.0335876116283917 -144.29963859679648 0.01 0.15";
        
        Node = "3.0344128590196644 -144.31191858848166 0.01 0.15";
        
        Node = "3.067032727174245 -144.80517053421303 0.01 0.15";
        
        Node = "3.1006411286338413 -145.2984232497524 0.01 0.15";
        
        Node = "3.1014128590196663 -145.30991858848168 0.01 0.15";
        
        Node = "3.167412859019666 -146.30791858848167 0.01 0.15";
        
        Node = "3.200032727174251 -146.8011705342131 0.01 0.15";
        
        Node = "3.2328582531444456 -147.28293340065804 0.01 0.15";
        
        Node = "3.2921445232762205 -148.10470697831792 0.01 0.15";
        
        Node = "3.3039996139854404 -148.2690317078707 0.01 0.15";
        
        Node = "3.339584616623071 -148.7612909110246 0.01 0.15";
        
        Node = "3.3761897752666616 -149.25496588840707 0.01 0.15";
        
        Node = "3.3778466855143154 -149.27793259720843 0.01 0.15";
        
        Node = "3.4128466855143156 -149.77693259720846 0.01 0.15";
        
        Node = "3.4136411286338415 -149.7884232497524 0.01 0.15";
        
        Node = "3.4476411286338413 -150.2874232497524 0.01 0.15";
        
        Node = "3.4816411286338407 -150.7864232497524 0.01 0.15";
        
        Node = "3.4824128590196666 -150.79791858848168 0.01 0.15";
        
        Node = "3.5153876664317036 -151.2965376460152 0.01 0.15";
        
        Node = "3.548362423476831 -151.79415670687803 0.01 0.15";
        
        Node = "3.581032727174271 -152.28817053421344 0.01 0.15";
        
        Node = "3.6146411286338407 -152.7814232497524 0.01 0.15";
        
        Node = "3.6154128590196666 -152.79291858848168 0.01 0.15";
        
        Node = "3.6480327271742414 -153.28617053421297 0.01 0.15";
        
        Node = "3.6816411286338413 -153.7794232497524 0.01 0.15";
        
        Node = "3.7156411286338407 -154.2784232497524 0.01 0.15";
        
        Node = "3.7164128590196666 -154.28991858848167 0.01 0.15";
        
        Node = "3.7490327271742476 -154.78317053421307 0.01 0.15";
        
        Node = "3.782641128633843 -155.27642324975244 0.01 0.15";
        
        Node = "3.7834128590196645 -155.28791858848166 0.01 0.15";
        
        Node = "3.8160327271742744 -155.7811705342135 0.01 0.15";
        
        Node = "3.8836411286338404 -156.7734232497524 0.01 0.15";
        
        Node = "3.8844128590196663 -156.78491858848167 0.01 0.15";
        
        Node = "3.9170067781125324 -157.27777815294652 0.01 0.15";
        
        Node = "3.950587611628392 -157.76963859679648 0.01 0.15";
        
        Node = "3.9514128590196664 -157.7819185884817 0.01 0.15";
        
        Node = "3.9840327271742706 -158.27517053421343 0.01 0.15";
        
        Node = "4.0516411286338405 -159.2674232497524 0.01 0.15";
        
        Node = "4.052412859019666 -159.27891858848167 0.01 0.15";
        
        Node = "4.085032727174241 -159.77217053421296 0.01 0.15";
        
        Node = "4.118641128633841 -160.2654232497524 0.01 0.15";
        
        Node = "4.119412859019667 -160.27691858848166 0.01 0.15";
        
        Node = "4.152032727174271 -160.77017053421343 0.01 0.15";
        
        Node = "4.18564112863384 -161.2634232497524 0.01 0.15";
        
        Node = "4.186412859019665 -161.27491858848165 0.01 0.15";
        
        Node = "4.219032727174274 -161.76817053421348 0.01 0.15";
        
        Node = "4.25264112863384 -162.2614232497524 0.01 0.15";
        
        Node = "4.286641128633841 -162.7604232497524 0.01 0.15";
        
        Node = "4.320641128633841 -163.2594232497524 0.01 0.15";
        
        Node = "4.321362423476833 -163.27015670687805 0.01 0.15";
        
        Node = "4.35400677462638 -163.76278964240763 0.01 0.15";
        
        Node = "4.387641128633842 -164.2564232497524 0.01 0.15";
        
        Node = "4.421641128633841 -164.7554232497524 0.01 0.15";
        
        Node = "4.422412859019665 -164.76691858848164 0.01 0.15";
        
        Node = "4.455032727174303 -165.2601705342139 0.01 0.15";
        
        Node = "4.488641128633841 -165.7534232497524 0.01 0.15";
        
        Node = "4.489412859019667 -165.76491858848166 0.01 0.15";
        
        Node = "4.522032727174271 -166.25817053421343 0.01 0.15";
        
        Node = "4.555641128633841 -166.7514232497524 0.01 0.15";
        
        Node = "4.556412859019666 -166.76291858848168 0.01 0.15";
        
        Node = "4.564168305570953 -166.8801903408784 0.01 0.15";
        
        Node = "4.589032727174271 -167.25617053421342 0.01 0.15";
        
        Node = "4.65664112863384 -168.2484232497524 0.01 0.15";
        
        Node = "4.657412859019667 -168.25991858848167 0.01 0.15";
        
        Node = "4.690006778112533 -168.75277815294652 0.01 0.15";
        
        Node = "4.723587611628392 -169.24463859679648 0.01 0.15";
        
        Node = "4.757641128633841 -169.7444232497524 0.01 0.15";
        
        Node = "4.758412859019666 -169.75591858848165 0.01 0.15";
        
        Node = "4.824412859019667 -170.75391858848164 0.01 0.15";
        
        Node = "4.857032727174277 -171.2471705342135 0.01 0.15";
        
        Node = "4.890641128633842 -171.74042324975244 0.01 0.15";
        
        Node = "4.924249636526669 -172.23367752735598 0.01 0.15";
        
        Node = "4.958443847210268 -172.72118927395928 0.01 0.15";
        
        Node = "4.982202545161471 -173.05051122611624 0.01 0.15";
        
        Node = "4.99399961398544 -173.2140317078707 0.01 0.15";
        
        Node = "5.029969610140951 -173.71161665468858 0.01 0.15";
        
        Node = "5.066029558012278 -174.21144676535386 0.01 0.15";
        
        Node = "5.102029558012277 -174.71044676535382 0.01 0.15";
        
        Node = "5.10364112863384 -174.7334232497524 0.01 0.15";
        
        Node = "5.137641128633841 -175.2324232497524 0.01 0.15";
        
        Node = "5.138412859019667 -175.24391858848165 0.01 0.15";
        
        Node = "5.171412859019666 -175.74291858848164 0.01 0.15";
        
        Node = "5.2044128590196665 -176.24191858848167 0.01 0.15";
        
        Node = "5.2370067781125265 -176.73477815294646 0.01 0.15";
        
        Node = "5.2705876116283905 -177.22663859679645 0.01 0.15";
        
        Node = "5.304641128633841 -177.7264232497524 0.01 0.15";
        
        Node = "5.33864112863384 -178.2254232497524 0.01 0.15";
        
        Node = "5.339412859019666 -178.23691858848164 0.01 0.15";
        
        Node = "5.372032727174341 -178.73017053421444 0.01 0.15";
        
        Node = "5.405641128633842 -179.22342324975244 0.01 0.15";
        
        Node = "5.43964112863384 -179.7224232497524 0.01 0.15";
        
        Node = "5.440412859019666 -179.73391858848166 0.01 0.15";
        
        Node = "5.473032727174335 -180.22717053421437 0.01 0.15";
        
        Node = "5.506641128633841 -180.7204232497524 0.01 0.15";
        
        Node = "5.5074128590196665 -180.73191858848165 0.01 0.15";
        
        Node = "5.540032727174334 -181.22517053421436 0.01 0.15";
        
        Node = "5.573641128633841 -181.7184232497524 0.01 0.15";
        
        Node = "5.607641128633842 -182.21742324975244 0.01 0.15";
        
        Node = "5.608362423476831 -182.22815670687805 0.01 0.15";
        
        Node = "5.6410067746264465 -182.7207896424086 0.01 0.15";
        
        Node = "5.674641128633841 -183.2144232497524 0.01 0.15";
        
        Node = "5.675412859019667 -183.22591858848165 0.01 0.15";
        
        Node = "5.708032727174334 -183.71917053421436 0.01 0.15";
        
        Node = "5.741641128633841 -184.2124232497524 0.01 0.15";
        
        Node = "5.742412859019667 -184.22391858848167 0.01 0.15";
        
        Node = "5.775032727174271 -184.71717053421344 0.01 0.15";
        
        Node = "5.842641128633841 -185.7094232497524 0.01 0.15";
        
        Node = "5.843412859019667 -185.72091858848165 0.01 0.15";
        
        Node = "5.8760327271743344 -186.21417053421436 0.01 0.15";
        
        Node = "5.90964112863384 -186.7074232497524 0.01 0.15";
        
        Node = "5.910412859019666 -186.71891858848164 0.01 0.15";
        
        Node = "5.943032727174341 -187.21217053421444 0.01 0.15";
        
        Node = "5.976641128633842 -187.70542324975244 0.01 0.15";
        
        Node = "6.01064112863384 -188.2044232497524 0.01 0.15";
        
        Node = "6.011362423476831 -188.21515670687805 0.01 0.15";
        
        Node = "6.044006774626415 -188.70778964240813 0.01 0.15";
        
        Node = "6.07764112863384 -189.2014232497524 0.01 0.15";
        
        Node = "6.078412859019666 -189.21291858848164 0.01 0.15";
        
        Node = "6.111032727174341 -189.70617053421444 0.01 0.15";
        
        Node = "6.144641128633842 -190.19942324975244 0.01 0.15";
        
        Node = "6.145412859019666 -190.21091858848166 0.01 0.15";
        
        Node = "6.170223698617372 -190.58608855694393 0.01 0.15";
        
        Node = "6.178032727174335 -190.70417053421437 0.01 0.15";
        
        Node = "6.211641128633841 -191.1974232497524 0.01 0.15";
        
    };
    
    new DecalRoad(road_7_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "-5.31164112863384 -191.9825767502476 0.01 0.15";
        
        Node = "-5.34564112863384 -191.4835767502476 0.01 0.15";
        
        Node = "-5.346412859019666 -191.47208141151836 0.01 0.15";
        
        Node = "-5.354030985124154 -191.35688611072626 0.01 0.15";
        
        Node = "-5.379032727174341 -190.97882946578557 0.01 0.15";
        
        Node = "-5.412641128633842 -190.48557675024756 0.01 0.15";
        
        Node = "-5.413412859019666 -190.47408141151834 0.01 0.15";
        
        Node = "-5.446032727174335 -189.98082946578563 0.01 0.15";
        
        Node = "-5.4796411286338405 -189.4875767502476 0.01 0.15";
        
        Node = "-5.480362423476831 -189.47684329312196 0.01 0.15";
        
        Node = "-5.513006774626415 -188.98421035759188 0.01 0.15";
        
        Node = "-5.546641128633841 -188.4905767502476 0.01 0.15";
        
        Node = "-5.580641128633842 -187.99157675024756 0.01 0.15";
        
        Node = "-5.581412859019666 -187.98008141151834 0.01 0.15";
        
        Node = "-5.614032727174335 -187.48682946578563 0.01 0.15";
        
        Node = "-5.647641128633841 -186.9935767502476 0.01 0.15";
        
        Node = "-5.6484128590196665 -186.98208141151835 0.01 0.15";
        
        Node = "-5.681032727174334 -186.48882946578564 0.01 0.15";
        
        Node = "-5.748641128633841 -185.4965767502476 0.01 0.15";
        
        Node = "-5.7494128590196665 -185.48508141151834 0.01 0.15";
        
        Node = "-5.782032727174271 -184.99182946578657 0.01 0.15";
        
        Node = "-5.815641128633841 -184.4985767502476 0.01 0.15";
        
        Node = "-5.816412859019667 -184.48708141151835 0.01 0.15";
        
        Node = "-5.849032727174334 -183.99382946578564 0.01 0.15";
        
        Node = "-5.882641128633841 -183.5005767502476 0.01 0.15";
        
        Node = "-5.8833624234768305 -183.48984329312196 0.01 0.15";
        
        Node = "-5.916006774626421 -182.9972103575918 0.01 0.15";
        
        Node = "-5.949641128633842 -182.50357675024756 0.01 0.15";
        
        Node = "-5.983641128633841 -182.0045767502476 0.01 0.15";
        
        Node = "-5.984412859019667 -181.99308141151835 0.01 0.15";
        
        Node = "-6.0170327271743345 -181.49982946578564 0.01 0.15";
        
        Node = "-6.05064112863384 -181.0065767502476 0.01 0.15";
        
        Node = "-6.051412859019666 -180.99508141151836 0.01 0.15";
        
        Node = "-6.084032727174335 -180.50182946578565 0.01 0.15";
        
        Node = "-6.11764112863384 -180.0085767502476 0.01 0.15";
        
        Node = "-6.151641128633842 -179.50957675024756 0.01 0.15";
        
        Node = "-6.152412859019666 -179.49808141151834 0.01 0.15";
        
        Node = "-6.185032727174335 -179.00482946578563 0.01 0.15";
        
        Node = "-6.21864112863384 -178.5115767502476 0.01 0.15";
        
        Node = "-6.252614396845549 -178.01296907855223 0.01 0.15";
        
        Node = "-6.2865876116283905 -177.51536140320357 0.01 0.15";
        
        Node = "-6.287412859019667 -177.50308141151834 0.01 0.15";
        
        Node = "-6.320412859019666 -177.0040814115183 0.01 0.15";
        
        Node = "-6.353412859019667 -176.50508141151832 0.01 0.15";
        
        Node = "-6.386032727174334 -176.01182946578564 0.01 0.15";
        
        Node = "-6.418858253144432 -175.53006659934215 0.01 0.15";
        
        Node = "-6.4540295580122775 -175.0425532346462 0.01 0.15";
        
        Node = "-6.48999961398486 -174.5439682921373 0.01 0.15";
        
        Node = "-6.52596961014095 -174.0463833453114 0.01 0.15";
        
        Node = "-6.539576251066723 -173.8577804980755 0.01 0.15";
        
        Node = "-6.562029558012277 -173.54655323464618 0.01 0.15";
        
        Node = "-6.562846685514316 -173.53506740279158 0.01 0.15";
        
        Node = "-6.597846685514315 -173.0360674027916 0.01 0.15";
        
        Node = "-6.59864112863384 -173.0245767502476 0.01 0.15";
        
        Node = "-6.632641128633841 -172.5255767502476 0.01 0.15";
        
        Node = "-6.6666411286338425 -172.02657675024756 0.01 0.15";
        
        Node = "-6.667412859019667 -172.0150814115183 0.01 0.15";
        
        Node = "-6.700412859019666 -171.51608141151831 0.01 0.15";
        
        Node = "-6.766032727174363 -170.5238294657852 0.01 0.15";
        
        Node = "-6.799614396845632 -170.030969078551 0.01 0.15";
        
        Node = "-6.833587611628392 -169.53336140320351 0.01 0.15";
        
        Node = "-6.834412859019666 -169.5210814115183 0.01 0.15";
        
        Node = "-6.867032727174241 -169.02782946578702 0.01 0.15";
        
        Node = "-6.9346411286338405 -168.0355767502476 0.01 0.15";
        
        Node = "-6.935412859019666 -168.02408141151832 0.01 0.15";
        
        Node = "-6.960361142906338 -167.64683311880776 0.01 0.15";
        
        Node = "-6.9680327271743 -167.53082946578616 0.01 0.15";
        
        Node = "-7.001019666076285 -167.04669762719527 0.01 0.15";
        
        Node = "-7.001641128633841 -167.0375767502476 0.01 0.15";
        
        Node = "-7.002026993826864 -167.03182908088132 0.01 0.15";
        
        Node = "-7.002412859019667 -167.02608141151833 0.01 0.15";
        
        Node = "-7.035032727174271 -166.53282946578656 0.01 0.15";
        
        Node = "-7.068641128633841 -166.0395767502476 0.01 0.15";
        
        Node = "-7.069412859019664 -166.02808141151834 0.01 0.15";
        
        Node = "-7.102032727174273 -165.53482946578654 0.01 0.15";
        
        Node = "-7.135641128633841 -165.0415767502476 0.01 0.15";
        
        Node = "-7.169641128633842 -164.5425767502476 0.01 0.15";
        
        Node = "-7.170362423476833 -164.53184329312194 0.01 0.15";
        
        Node = "-7.203006774626412 -164.0392103575919 0.01 0.15";
        
        Node = "-7.23664112863384 -163.5455767502476 0.01 0.15";
        
        Node = "-7.270641128633841 -163.0465767502476 0.01 0.15";
        
        Node = "-7.304641128633841 -162.5475767502476 0.01 0.15";
        
        Node = "-7.305412859019665 -162.53608141151835 0.01 0.15";
        
        Node = "-7.3380327271742445 -162.04282946578698 0.01 0.15";
        
        Node = "-7.371641128633841 -161.5495767502476 0.01 0.15";
        
        Node = "-7.372412859019667 -161.53808141151833 0.01 0.15";
        
        Node = "-7.405032727174271 -161.04482946578656 0.01 0.15";
        
        Node = "-7.43864112863384 -160.5515767502476 0.01 0.15";
        
        Node = "-7.439412859019667 -160.54008141151832 0.01 0.15";
        
        Node = "-7.472032727174271 -160.04682946578657 0.01 0.15";
        
        Node = "-7.539641128633841 -159.0545767502476 0.01 0.15";
        
        Node = "-7.540412859019666 -159.04308141151833 0.01 0.15";
        
        Node = "-7.573006778112532 -158.55022184705348 0.01 0.15";
        
        Node = "-7.606587611628392 -158.05836140320352 0.01 0.15";
        
        Node = "-7.607412859019666 -158.04608141151832 0.01 0.15";
        
        Node = "-7.640032727174271 -157.55282946578657 0.01 0.15";
        
        Node = "-7.70764112863384 -156.5605767502476 0.01 0.15";
        
        Node = "-7.708412859019664 -156.54908141151836 0.01 0.15";
        
        Node = "-7.741032727174251 -156.0558294657869 0.01 0.15";
        
        Node = "-7.774641128633843 -155.56257675024756 0.01 0.15";
        
        Node = "-7.775412859019666 -155.5510814115183 0.01 0.15";
        
        Node = "-7.8080327271743 -155.05782946578614 0.01 0.15";
        
        Node = "-7.8416411286338406 -154.5645767502476 0.01 0.15";
        
        Node = "-7.875641128633841 -154.0655767502476 0.01 0.15";
        
        Node = "-7.876412859019666 -154.05408141151833 0.01 0.15";
        
        Node = "-7.909032727174241 -153.56082946578704 0.01 0.15";
        
        Node = "-7.9426411286338405 -153.0675767502476 0.01 0.15";
        
        Node = "-7.943412859019666 -153.05608141151833 0.01 0.15";
        
        Node = "-7.976387666431704 -152.55746235398476 0.01 0.15";
        
        Node = "-8.00936242347683 -152.05984329312196 0.01 0.15";
        
        Node = "-8.0420327271743 -151.56582946578615 0.01 0.15";
        
        Node = "-8.07564112863384 -151.0725767502476 0.01 0.15";
        
        Node = "-8.109249636526767 -150.5793224726426 0.01 0.15";
        
        Node = "-8.143041123968734 -150.0975524088271 0.01 0.15";
        
        Node = "-8.17918977526666 -149.6100341115929 0.01 0.15";
        
        Node = "-8.179969610140951 -149.5993833453114 0.01 0.15";
        
        Node = "-8.21596961014095 -149.1013833453114 0.01 0.15";
        
        Node = "-8.229518435104918 -148.91358173376557 0.01 0.15";
        
        Node = "-8.288029558012278 -148.1025532346462 0.01 0.15";
        
        Node = "-8.289641128633843 -148.07957675024758 0.01 0.15";
        
        Node = "-8.323641128633843 -147.58057675024756 0.01 0.15";
        
        Node = "-8.324412859019665 -147.56908141151834 0.01 0.15";
        
        Node = "-8.357412859019664 -147.07008141151834 0.01 0.15";
        
        Node = "-8.423032727174242 -146.07782946578703 0.01 0.15";
        
        Node = "-8.45664112863384 -145.5845767502476 0.01 0.15";
        
        Node = "-8.457412859019664 -145.57308141151836 0.01 0.15";
        
        Node = "-8.490006778112535 -145.08022184705342 0.01 0.15";
        
        Node = "-8.523587611628392 -144.58836140320352 0.01 0.15";
        
        Node = "-8.557641128633842 -144.0885767502476 0.01 0.15";
        
        Node = "-8.59164112863384 -143.5895767502476 0.01 0.15";
        
        Node = "-8.592412859019667 -143.57808141151833 0.01 0.15";
        
        Node = "-8.625032727174242 -143.084829465787 0.01 0.15";
        
        Node = "-8.65864112863384 -142.5915767502476 0.01 0.15";
        
        Node = "-8.659412859019666 -142.58008141151834 0.01 0.15";
        
        Node = "-8.692412859019667 -142.0810814115183 0.01 0.15";
        
    };
    
    new DecalRoad(road_7_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "-1.5453735510420223 -191.72595731610306 0.01 0.3";
        
        Node = "-1.5793735510420224 -191.22695731610307 0.01 0.3";
        
        Node = "-1.5796408169765077 -191.22297624641328 0.01 0.3";
        
        Node = "-1.5874455439546056 -191.10495931422932 0.01 0.3";
        
        Node = "-1.6125091695841542 -190.72596691455826 0.01 0.3";
        
        Node = "-1.6463735510420232 -190.22895731610305 0.01 0.3";
        
        Node = "-1.6466408169765077 -190.22497624641326 0.01 0.3";
        
        Node = "-1.6795091695841833 -189.7279669145578 0.01 0.3";
        
        Node = "-1.7133735510420223 -189.23095731610306 0.01 0.3";
        
        Node = "-1.713623350121846 -189.2272401015141 0.01 0.3";
        
        Node = "-1.746500181688826 -188.7310988251397 0.01 0.3";
        
        Node = "-1.7803735510420222 -188.23395731610307 0.01 0.3";
        
        Node = "-1.8143735510420231 -187.73495731610305 0.01 0.3";
        
        Node = "-1.8146408169765076 -187.73097624641326 0.01 0.3";
        
        Node = "-1.8475091695841834 -187.2339669145578 0.01 0.3";
        
        Node = "-1.8813735510420222 -186.73695731610306 0.01 0.3";
        
        Node = "-1.8816408169765075 -186.73297624641327 0.01 0.3";
        
        Node = "-1.9145091695841834 -186.23596691455782 0.01 0.3";
        
        Node = "-1.9823735510420224 -185.23995731610307 0.01 0.3";
        
        Node = "-1.982640816976508 -185.2359762464133 0.01 0.3";
        
        Node = "-2.015509169584191 -184.7389669145577 0.01 0.3";
        
        Node = "-2.0493735510420223 -184.24195731610305 0.01 0.3";
        
        Node = "-2.0496408169765075 -184.23797624641327 0.01 0.3";
        
        Node = "-2.082509169584191 -183.7409669145577 0.01 0.3";
        
        Node = "-2.116373551042022 -183.24395731610306 0.01 0.3";
        
        Node = "-2.116623350121846 -183.2402401015141 0.01 0.3";
        
        Node = "-2.149500181688795 -182.74409882514016 0.01 0.3";
        
        Node = "-2.183373551042023 -182.24695731610305 0.01 0.3";
        
        Node = "-2.2173735510420225 -181.74795731610305 0.01 0.3";
        
        Node = "-2.2176408169765076 -181.74397624641327 0.01 0.3";
        
        Node = "-2.250509169584176 -181.24696691455793 0.01 0.3";
        
        Node = "-2.284373551042022 -180.74995731610306 0.01 0.3";
        
        Node = "-2.284640816976508 -180.74597624641328 0.01 0.3";
        
        Node = "-2.317509169584191 -180.2489669145577 0.01 0.3";
        
        Node = "-2.3513735510420224 -179.75195731610307 0.01 0.3";
        
        Node = "-2.385373551042023 -179.25295731610305 0.01 0.3";
        
        Node = "-2.3856408169765078 -179.24897624641326 0.01 0.3";
        
        Node = "-2.418509169584191 -178.7519669145577 0.01 0.3";
        
        Node = "-2.4523735510420224 -178.25495731610306 0.01 0.3";
        
        Node = "-2.486364293279477 -177.75609318738276 0.01 0.3";
        
        Node = "-2.520355017014161 -177.25822905738653 0.01 0.3";
        
        Node = "-2.520640816976508 -177.2539762464133 0.01 0.3";
        
        Node = "-2.553640816976508 -176.75497624641326 0.01 0.3";
        
        Node = "-2.586640816976508 -176.25597624641327 0.01 0.3";
        
        Node = "-2.619509169584191 -175.7589669145577 0.01 0.3";
        
        Node = "-2.6531024253313844 -175.26593648462097 0.01 0.3";
        
        Node = "-2.688815431346243 -174.77091454013723 0.01 0.3";
        
        Node = "-2.724805061119577 -174.27205828300126 0.01 0.3";
        
        Node = "-2.760794670178684 -173.77420202435027 0.01 0.3";
        
        Node = "-2.773799849852327 -173.5939358880855 0.01 0.3";
        
        Node = "-2.7968154313462428 -173.27491454013722 0.01 0.3";
        
        Node = "-2.797098419225737 -173.27093676287154 0.01 0.3";
        
        Node = "-2.8320984192257366 -172.77193676287155 0.01 0.3";
        
        Node = "-2.8323735510420223 -172.76795731610306 0.01 0.3";
        
        Node = "-2.866373551042022 -172.26895731610307 0.01 0.3";
        
        Node = "-2.900373551042023 -171.76995731610305 0.01 0.3";
        
        Node = "-2.900640816976508 -171.76597624641326 0.01 0.3";
        
        Node = "-2.9336408169765074 -171.26697624641326 0.01 0.3";
        
        Node = "-2.999509169584191 -170.2709669145577 0.01 0.3";
        
        Node = "-3.033364293279256 -169.774093187386 0.01 0.3";
        
        Node = "-3.0673550170141617 -169.2762290573865 0.01 0.3";
        
        Node = "-3.0676408169765077 -169.27197624641326 0.01 0.3";
        
        Node = "-3.100509169584191 -168.7749669145577 0.01 0.3";
        
        Node = "-3.1683735510420226 -167.77895731610306 0.01 0.3";
        
        Node = "-3.1686408169765077 -167.77497624641327 0.01 0.3";
        
        Node = "-3.1936859149412573 -167.39626400749177 0.01 0.3";
        
        Node = "-3.201509169584191 -167.2779669145577 0.01 0.3";
        
        Node = "-3.235158242042815 -166.7841172922973 0.01 0.3";
        
        Node = "-3.2353735510420223 -166.78095731610307 0.01 0.3";
        
        Node = "-3.2355071840093554 -166.77896678125683 0.01 0.3";
        
        Node = "-3.235640816976508 -166.77697624641328 0.01 0.3";
        
        Node = "-3.268509169584191 -166.2799669145577 0.01 0.3";
        
        Node = "-3.302373551042022 -165.78295731610305 0.01 0.3";
        
        Node = "-3.302640816976507 -165.77897624641327 0.01 0.3";
        
        Node = "-3.335509169584176 -165.28196691455793 0.01 0.3";
        
        Node = "-3.369373551042022 -164.78495731610306 0.01 0.3";
        
        Node = "-3.403373551042023 -164.28595731610307 0.01 0.3";
        
        Node = "-3.4036233501218467 -164.2822401015141 0.01 0.3";
        
        Node = "-3.4365001816888423 -163.78609882513942 0.01 0.3";
        
        Node = "-3.470373551042022 -163.28895731610305 0.01 0.3";
        
        Node = "-3.504373551042023 -162.78995731610306 0.01 0.3";
        
        Node = "-3.5383735510420222 -162.29095731610306 0.01 0.3";
        
        Node = "-3.538640816976507 -162.28697624641327 0.01 0.3";
        
        Node = "-3.5715091695841754 -161.78996691455794 0.01 0.3";
        
        Node = "-3.6053735510420224 -161.29295731610307 0.01 0.3";
        
        Node = "-3.605640816976508 -161.28897624641328 0.01 0.3";
        
        Node = "-3.638509169584191 -160.7919669145577 0.01 0.3";
        
        Node = "-3.672373551042022 -160.29495731610305 0.01 0.3";
        
        Node = "-3.6726408169765077 -160.29097624641327 0.01 0.3";
        
        Node = "-3.705509169584176 -159.79396691455793 0.01 0.3";
        
        Node = "-3.773373551042022 -158.79795731610307 0.01 0.3";
        
        Node = "-3.7736408169765077 -158.79397624641328 0.01 0.3";
        
        Node = "-3.806500182896089 -158.29710280417476 0.01 0.3";
        
        Node = "-3.8403550170141614 -157.8012290573865 0.01 0.3";
        
        Node = "-3.8406408169765074 -157.79697624641327 0.01 0.3";
        
        Node = "-3.8735091695841906 -157.2999669145577 0.01 0.3";
        
        Node = "-3.9413735510420222 -156.30395731610307 0.01 0.3";
        
        Node = "-3.9416408169765074 -156.29997624641328 0.01 0.3";
        
        Node = "-3.974509169584132 -155.8029669145586 0.01 0.3";
        
        Node = "-4.008373551042023 -155.30595731610305 0.01 0.3";
        
        Node = "-4.0086408169765075 -155.30197624641326 0.01 0.3";
        
        Node = "-4.041509169584176 -154.80496691455792 0.01 0.3";
        
        Node = "-4.075373551042023 -154.30795731610306 0.01 0.3";
        
        Node = "-4.109373551042022 -153.80895731610306 0.01 0.3";
        
        Node = "-4.1096408169765075 -153.80497624641328 0.01 0.3";
        
        Node = "-4.142509169584206 -153.30796691455748 0.01 0.3";
        
        Node = "-4.176373551042023 -152.81095731610307 0.01 0.3";
        
        Node = "-4.176640816976508 -152.80697624641329 0.01 0.3";
        
        Node = "-4.209632092271022 -152.30810817453562 0.01 0.3";
        
        Node = "-4.242623350121846 -151.8102401015141 0.01 0.3";
        
        Node = "-4.275509169584176 -151.31296691455793 0.01 0.3";
        
        Node = "-4.309373551042023 -150.81595731610307 0.01 0.3";
        
        Node = "-4.34323796935986 -150.31894717667362 0.01 0.3";
        
        Node = "-4.377819436872321 -149.8259142541388 0.01 0.3";
        
        Node = "-4.414524597494948 -149.33089060141745 0.01 0.3";
        
        Node = "-4.414794670178684 -149.32720202435027 0.01 0.3";
        
        Node = "-4.450794670178684 -148.82920202435028 0.01 0.3";
        
        Node = "-4.463779820813539 -148.6492134606466 0.01 0.3";
        
        Node = "-4.522815431346243 -147.83091454013723 0.01 0.3";
        
        Node = "-4.523373551042024 -147.82295731610307 0.01 0.3";
        
        Node = "-4.557373551042024 -147.32395731610305 0.01 0.3";
        
        Node = "-4.557640816976507 -147.31997624641326 0.01 0.3";
        
        Node = "-4.590640816976507 -146.82097624641327 0.01 0.3";
        
        Node = "-4.6565091695841465 -145.82496691455836 0.01 0.3";
        
        Node = "-4.690373551042023 -145.32795731610307 0.01 0.3";
        
        Node = "-4.690640816976507 -145.32397624641328 0.01 0.3";
        
        Node = "-4.723500182896089 -144.82710280417476 0.01 0.3";
        
        Node = "-4.757355017014161 -144.3312290573865 0.01 0.3";
        
        Node = "-4.791373551042023 -143.83195731610306 0.01 0.3";
        
        Node = "-4.825373551042023 -143.33295731610306 0.01 0.3";
        
        Node = "-4.825640816976508 -143.32897624641328 0.01 0.3";
        
        Node = "-4.8585091695841465 -142.83196691455836 0.01 0.3";
        
        Node = "-4.892373551042023 -142.33495731610307 0.01 0.3";
        
        Node = "-4.892640816976508 -142.3309762464133 0.01 0.3";
        
        Node = "-4.925640816976508 -141.83197624641326 0.01 0.3";
        
    };
    
    new DecalRoad(road_7_separator_1) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "-0.9343591830234923 -141.56802375358671 0.01 0.15";
        
        Node = "-0.9014908304158233 -142.06503308544208 0.01 0.15";
        
        Node = "-0.8676264489579772 -142.56204268389695 0.01 0.15";
        
        Node = "-0.8673591830234924 -142.56602375358673 0.01 0.15";
        
        Node = "-0.8344908304158167 -143.06303308544219 0.01 0.15";
        
        Node = "-0.8006264489579775 -143.56004268389694 0.01 0.15";
        
        Node = "-0.7666357067205221 -144.05890681261724 0.01 0.15";
        
        Node = "-0.7326449829858388 -144.5567709426135 0.01 0.15";
        
        Node = "-0.732359183023493 -144.56102375358674 0.01 0.15";
        
        Node = "-0.6994908304158463 -145.05803308544176 0.01 0.15";
        
        Node = "-0.6656264489579773 -145.55504268389694 0.01 0.15";
        
        Node = "-0.6653591830234924 -145.55902375358673 0.01 0.15";
        
        Node = "-0.5993591830234926 -146.55702375358672 0.01 0.15";
        
        Node = "-0.5664908304158753 -147.0540330854413 0.01 0.15";
        
        Node = "-0.5328975746685914 -147.5470635153794 0.01 0.15";
        
        Node = "-0.4735935123874585 -148.36908371199843 0.01 0.15";
        
        Node = "-0.4611949388796219 -148.54094171700982 0.01 0.15";
        
        Node = "-0.42533866090971456 -149.0369535622602 0.01 0.15";
        
        Node = "-0.3884754025050525 -149.53410939858253 0.01 0.15";
        
        Node = "-0.38790158077426296 -149.54206323712845 0.01 0.15";
        
        Node = "-0.3529015807742628 -150.04106323712847 0.01 0.15";
        
        Node = "-0.3526264489579771 -150.04504268389695 0.01 0.15";
        
        Node = "-0.3186264489579773 -150.54404268389695 0.01 0.15";
        
        Node = "-0.2846264489579775 -151.04304268389694 0.01 0.15";
        
        Node = "-0.28435918302349217 -151.04702375358673 0.01 0.15";
        
        Node = "-0.25136790772931017 -151.54589182545936 0.01 0.15";
        
        Node = "-0.21837664987815386 -152.0437598984859 0.01 0.15";
        
        Node = "-0.18549083041580888 -152.5410330854423 0.01 0.15";
        
        Node = "-0.1516264489579775 -153.03804268389695 0.01 0.15";
        
        Node = "-0.15135918302349216 -153.04202375358673 0.01 0.15";
        
        Node = "-0.11849083041583112 -153.53903308544196 0.01 0.15";
        
        Node = "-0.08462644895797733 -154.03604268389694 0.01 0.15";
        
        Node = "-0.05062644895797752 -154.53504268389693 0.01 0.15";
        
        Node = "-0.05035918302349218 -154.53902375358672 0.01 0.15";
        
        Node = "-0.0174908304158602 -155.03603308544152 0.01 0.15";
        
        Node = "0.016373551042023538 -155.53304268389695 0.01 0.15";
        
        Node = "0.0166408169765071 -155.53702375358674 0.01 0.15";
        
        Node = "0.0495091695841683 -156.03403308544196 0.01 0.15";
        
        Node = "0.1173735510420224 -157.03004268389694 0.01 0.15";
        
        Node = "0.11764081697650774 -157.03402375358672 0.01 0.15";
        
        Node = "0.150500182896096 -157.53089719582533 0.01 0.15";
        
        Node = "0.18435501701416146 -158.0267709426135 0.01 0.15";
        
        Node = "0.1846408169765077 -158.03102375358674 0.01 0.15";
        
        Node = "0.21750916958418337 -158.5280330854422 0.01 0.15";
        
        Node = "0.28537355104202233 -159.52404268389694 0.01 0.15";
        
        Node = "0.28564081697650767 -159.52802375358672 0.01 0.15";
        
        Node = "0.31850916958418335 -160.02503308544217 0.01 0.15";
        
        Node = "0.3523735510420223 -160.52204268389693 0.01 0.15";
        
        Node = "0.35264081697650784 -160.5260237535867 0.01 0.15";
        
        Node = "0.38550916958419107 -161.0230330854423 0.01 0.15";
        
        Node = "0.41937355104202223 -161.52004268389695 0.01 0.15";
        
        Node = "0.4196408169765071 -161.52402375358673 0.01 0.15";
        
        Node = "0.4525091695841683 -162.02103308544196 0.01 0.15";
        
        Node = "0.4863735510420224 -162.51804268389694 0.01 0.15";
        
        Node = "0.5203735510420227 -163.01704268389693 0.01 0.15";
        
        Node = "0.5543735510420222 -163.51604268389693 0.01 0.15";
        
        Node = "0.5546233501218465 -163.5197598984859 0.01 0.15";
        
        Node = "0.5875001816888267 -164.01590117486032 0.01 0.15";
        
        Node = "0.6213735510420226 -164.51304268389694 0.01 0.15";
        
        Node = "0.6553735510420222 -165.01204268389694 0.01 0.15";
        
        Node = "0.6556408169765071 -165.01602375358672 0.01 0.15";
        
        Node = "0.6885091695841683 -165.51303308544195 0.01 0.15";
        
        Node = "0.7223735510420224 -166.01004268389693 0.01 0.15";
        
        Node = "0.722640816976508 -166.0140237535867 0.01 0.15";
        
        Node = "0.7555091695841912 -166.5110330854423 0.01 0.15";
        
        Node = "0.7893735510420223 -167.00804268389695 0.01 0.15";
        
        Node = "0.7896408169765077 -167.01202375358673 0.01 0.15";
        
        Node = "0.7974931148362855 -167.13076001516336 0.01 0.15";
        
        Node = "0.8225091695841833 -167.50903308544218 0.01 0.15";
        
        Node = "0.8903735510420223 -168.50504268389693 0.01 0.15";
        
        Node = "0.8906408169765077 -168.50902375358672 0.01 0.15";
        
        Node = "0.9235001828960959 -169.00589719582533 0.01 0.15";
        
        Node = "0.9573550170141614 -169.5017709426135 0.01 0.15";
        
        Node = "0.9913735510420223 -170.00104268389694 0.01 0.15";
        
        Node = "0.9916408169765076 -170.00502375358673 0.01 0.15";
        
        Node = "1.0576408169765077 -171.00302375358672 0.01 0.15";
        
        Node = "1.0905091695841542 -171.50003308544174 0.01 0.15";
        
        Node = "1.1243735510420232 -171.99704268389695 0.01 0.15";
        
        Node = "1.1582379693598748 -172.4940528233266 0.01 0.15";
        
        Node = "1.1929589081247474 -172.98907420743149 0.01 0.15";
        
        Node = "1.216426578321712 -173.31436219155052 0.01 0.15";
        
        Node = "1.228805061120378 -173.4859417170098 0.01 0.15";
        
        Node = "1.264794670178684 -173.9837979756497 0.01 0.15";
        
        Node = "1.3008154313462434 -174.48308545986282 0.01 0.15";
        
        Node = "1.3368154313462428 -174.9820854598628 0.01 0.15";
        
        Node = "1.3373735510420222 -174.99004268389695 0.01 0.15";
        
        Node = "1.3713735510420224 -175.48904268389694 0.01 0.15";
        
        Node = "1.3716408169765075 -175.49302375358673 0.01 0.15";
        
        Node = "1.4046408169765077 -175.99202375358672 0.01 0.15";
        
        Node = "1.4376408169765076 -176.49102375358672 0.01 0.15";
        
        Node = "1.4705001828961166 -176.98789719582567 0.01 0.15";
        
        Node = "1.504355017014161 -177.4837709426135 0.01 0.15";
        
        Node = "1.5383735510420222 -177.98304268389694 0.01 0.15";
        
        Node = "1.5723735510420223 -178.48204268389694 0.01 0.15";
        
        Node = "1.5726408169765076 -178.48602375358672 0.01 0.15";
        
        Node = "1.6055091695841468 -178.98303308544163 0.01 0.15";
        
        Node = "1.639373551042023 -179.48004268389695 0.01 0.15";
        
        Node = "1.6733735510420222 -179.97904268389695 0.01 0.15";
        
        Node = "1.6736408169765076 -179.98302375358674 0.01 0.15";
        
        Node = "1.7065091695841834 -180.4800330854422 0.01 0.15";
        
        Node = "1.7403735510420222 -180.97704268389694 0.01 0.15";
        
        Node = "1.7406408169765077 -180.98102375358673 0.01 0.15";
        
        Node = "1.7735091695841834 -181.47803308544218 0.01 0.15";
        
        Node = "1.8073735510420224 -181.97504268389693 0.01 0.15";
        
        Node = "1.8413735510420233 -182.47404268389695 0.01 0.15";
        
        Node = "1.8416233501218462 -182.4777598984859 0.01 0.15";
        
        Node = "1.8745001816888258 -182.97390117486032 0.01 0.15";
        
        Node = "1.9083735510420223 -183.47104268389694 0.01 0.15";
        
        Node = "1.9086408169765077 -183.47502375358673 0.01 0.15";
        
        Node = "1.9415091695841833 -183.97203308544218 0.01 0.15";
        
        Node = "1.9753735510420223 -184.46904268389693 0.01 0.15";
        
        Node = "1.9756408169765078 -184.47302375358672 0.01 0.15";
        
        Node = "2.0085091695841912 -184.9700330854423 0.01 0.15";
        
        Node = "2.0763735510420225 -185.96604268389694 0.01 0.15";
        
        Node = "2.0766408169765076 -185.97002375358673 0.01 0.15";
        
        Node = "2.109509169584176 -186.46703308544207 0.01 0.15";
        
        Node = "2.143373551042022 -186.96404268389693 0.01 0.15";
        
        Node = "2.1436408169765078 -186.96802375358672 0.01 0.15";
        
        Node = "2.1765091695841616 -187.46503308544186 0.01 0.15";
        
        Node = "2.2103735510420233 -187.96204268389695 0.01 0.15";
        
        Node = "2.244373551042022 -188.46104268389695 0.01 0.15";
        
        Node = "2.244623350121846 -188.4647598984859 0.01 0.15";
        
        Node = "2.2775001816888256 -188.9609011748603 0.01 0.15";
        
        Node = "2.3113735510420224 -189.45804268389693 0.01 0.15";
        
        Node = "2.3116408169765075 -189.46202375358672 0.01 0.15";
        
        Node = "2.344509169584162 -189.95903308544186 0.01 0.15";
        
        Node = "2.3783735510420234 -190.45604268389695 0.01 0.15";
        
        Node = "2.3786408169765076 -190.46002375358674 0.01 0.15";
        
        Node = "2.4036383292061907 -190.83801643851436 0.01 0.15";
        
        Node = "2.411509169584176 -190.95703308544208 0.01 0.15";
        
        Node = "2.4453735510420223 -191.45404268389694 0.01 0.15";
        
    };
    
    new DecalRoad(road_8) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "10";
textureLength = "2.5";
distanceFade = "1000 1000";
drivability = "1";
        Material = "road_rubber_sticky";

        
        Node = "-2.93 -141.7 0.01 11.999999999999998";
        
        Node = "-3.207 -140.967 0.01 11.999999999999998";
        
        Node = "-3.485 -140.234 0.01 12.0";
        
        Node = "-3.765 -139.501 0.01 12.0";
        
        Node = "-4.045 -138.769 0.01 12.000000000000004";
        
        Node = "-4.324 -138.037 0.01 12.000000000000004";
        
        Node = "-4.602 -137.304 0.01 12.000000000000002";
        
        Node = "-4.88 -136.571 0.01 11.999999999999998";
        
        Node = "-5.158 -135.838 0.01 11.999999999999996";
        
        Node = "-5.439 -135.106 0.01 11.999999999999998";
        
        Node = "-5.721 -134.375 0.01 11.999999999999996";
        
        Node = "-6.002 -133.643 0.01 11.999999999999998";
        
        Node = "-6.282 -132.91 0.01 12.000000000000005";
        
        Node = "-6.561 -132.178 0.01 12.000000000000007";
        
        Node = "-6.84 -131.445 0.01 12.000000000000004";
        
        Node = "-7.118 -130.712 0.01 12.000000000000002";
        
        Node = "-7.395 -129.979 0.01 11.999999999999996";
        
        Node = "-7.673 -129.246 0.01 11.999999999999996";
        
        Node = "-7.951 -128.513 0.01 11.999999999999998";
        
        Node = "-8.231 -127.781 0.01 12.0";
        
        Node = "-8.514 -127.05 0.01 12.000000000000002";
        
        Node = "-8.797 -126.319 0.01 12.000000000000004";
        
        Node = "-9.078 -125.587 0.01 12.000000000000004";
        
        Node = "-9.355 -124.854 0.01 12.000000000000004";
        
        Node = "-9.633 -124.12 0.01 12.000000000000005";
        
        Node = "-9.91 -123.387 0.01 12.0";
        
        Node = "-10.189 -122.654 0.01 11.999999999999998";
        
        Node = "-10.467 -121.922 0.01 11.999999999999998";
        
        Node = "-10.746 -121.189 0.01 11.999999999999996";
        
        Node = "-11.026 -120.457 0.01 11.999999999999998";
        
        Node = "-11.307 -119.725 0.01 11.999999999999998";
        
        Node = "-11.589 -118.993 0.01 11.999999999999998";
        
        Node = "-11.87 -118.261 0.01 12.0";
        
        Node = "-12.148 -117.529 0.01 11.999999999999998";
        
        Node = "-12.426 -116.796 0.01 12.0";
        
        Node = "-12.705 -116.063 0.01 12.000000000000002";
        
        Node = "-12.984 -115.33 0.01 12.000000000000004";
        
        Node = "-13.264 -114.598 0.01 12.000000000000004";
        
        Node = "-13.542 -113.865 0.01 12.000000000000004";
        
        Node = "-13.82 -113.132 0.01 12.0";
        
        Node = "-14.098 -112.399 0.01 12.0";
        
        Node = "-14.38 -111.668 0.01 12.0";
        
        Node = "-14.662 -110.936 0.01 12.0";
        
        Node = "-14.943 -110.204 0.01 12.0";
        
        Node = "-15.222 -109.472 0.01 12.0";
        
        Node = "-15.501 -108.739 0.01 12.000000000000002";
        
        Node = "-15.78 -108.006 0.01 11.999999999999998";
        
        Node = "-16.058 -107.273 0.01 11.999999999999998";
        
        Node = "-16.335 -106.54 0.01 11.999999999999996";
        
        Node = "-16.612 -105.807 0.01 12.0";
        
        Node = "-16.89 -105.074 0.01 12.0";
        
        Node = "-17.172 -104.342 0.01 12.000000000000002";
        
        Node = "-17.457 -103.611 0.01 12.000000000000002";
        
        Node = "-17.738 -102.88 0.01 12.0";
        
        Node = "-18.013 -102.15 0.01 11.999999999999996";
        
        Node = "-18.288 -101.418 0.01 11.999999999999998";
        
        Node = "-18.576 -100.68 0.01 12.0";
        
        Node = "-18.875 -99.94 0.01 12.000000000000002";
        
        Node = "-19.151 -99.209 0.01 11.999999999999998";
        
        Node = "-19.37 -98.5 0.01 11.999999999999996";
        
        Node = "-19.588 -97.792 0.01 11.999999999999996";
        
        Node = "-19.942 -97.028 0.01 12.000000000000002";
        
        Node = "-20.495 -96.184 0.01 12.000000000000007";
        
        Node = "-20.885 -95.407 0.01 12.000000000000012";
        
        Node = "-20.597 -94.902 0.01 11.999999999999998";
        
        Node = "-19.873 -94.579 0.01 12.000000000000005";
        
        Node = "-19.165 -94.242 0.01 11.999999999999998";
        
        Node = "-18.452 -93.915 0.01 11.999999999999998";
        
        Node = "-17.742 -93.584 0.01 12.000000000000002";
        
        Node = "-17.032 -93.251 0.01 11.999999999999998";
        
        Node = "-16.319 -92.925 0.01 12.000000000000004";
        
        Node = "-15.611 -92.59 0.01 11.999999999999996";
        
        Node = "-14.899 -92.262 0.01 11.999999999999996";
        
        Node = "-14.185 -91.936 0.01 11.999999999999998";
        
        Node = "-13.479 -91.597 0.01 11.999999999999998";
        
        Node = "-12.766 -91.272 0.01 12.000000000000004";
        
        Node = "-12.058 -90.934 0.01 12.0";
        
        Node = "-11.346 -90.608 0.01 12.000000000000005";
        
        Node = "-10.635 -90.278 0.01 11.999999999999998";
        
        Node = "-9.925 -89.944 0.01 11.999999999999998";
        
        Node = "-9.212 -89.618 0.01 11.999999999999998";
        
        Node = "-8.505 -89.28 0.01 11.999999999999996";
        
        Node = "-7.792 -88.954 0.01 11.999999999999998";
        
        Node = "-7.081 -88.625 0.01 12.000000000000002";
        
        Node = "-6.372 -88.29 0.01 12.0";
        
        Node = "-5.659 -87.963 0.01 12.000000000000002";
        
        Node = "-4.949 -87.632 0.01 12.000000000000004";
        
        Node = "-4.239 -87.299 0.01 11.999999999999998";
        
        Node = "-3.527 -86.972 0.01 11.999999999999995";
        
        Node = "-2.818 -86.636 0.01 11.999999999999996";
        
        Node = "-2.107 -86.307 0.01 12.000000000000002";
        
        Node = "-1.396 -85.976 0.01 12.0";
        
        Node = "-0.686 -85.645 0.01 12.000000000000004";
        
        Node = "0.027 -85.318 0.01 11.999999999999998";
        
        Node = "0.735 -84.983 0.01 11.999999999999996";
        
        Node = "1.447 -84.653 0.01 11.999999999999996";
        
        Node = "2.16 -84.329 0.01 12.0";
        
        Node = "2.867 -83.989 0.01 12.000000000000002";
        
        Node = "3.58 -83.664 0.01 12.000000000000002";
        
        Node = "4.287 -83.326 0.01 12.0";
        
        Node = "5.0 -83.0 0.01 12.0";
        
    };
    
    new DecalRoad(road_8_left_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "-8.33213473617017 -143.74146155787065 0.01 0.15";
        
        Node = "-8.607916762079231 -143.01168457234238 0.01 0.15";
        
        Node = "-8.882254620659237 -142.28834050637423 0.01 0.15";
        
        Node = "-9.159329818892882 -141.5629972195697 0.01 0.15";
        
        Node = "-9.438860108041142 -140.83222517793925 0.01 0.15";
        
        Node = "-9.441316237581244 -140.825792664324 0.01 0.15";
        
        Node = "-9.720316237581244 -140.093792664324 0.01 0.15";
        
        Node = "-9.723694943034072 -140.08490613119164 0.01 0.15";
        
        Node = "-10.001694943034071 -139.35190613119164 0.01 0.15";
        
        Node = "-10.279694943034073 -138.61890613119164 0.01 0.15";
        
        Node = "-10.553568655853567 -137.89678587400928 0.01 0.15";
        
        Node = "-10.828692197151826 -137.18009394436402 0.01 0.15";
        
        Node = "-11.108978507442488 -136.4535361683978 0.01 0.15";
        
        Node = "-11.112398559579045 -136.44464890060343 0.01 0.15";
        
        Node = "-11.393398559579046 -135.71264890060343 0.01 0.15";
        
        Node = "-11.396798970596562 -135.70376904743114 0.01 0.15";
        
        Node = "-11.676798970596561 -134.97076904743113 0.01 0.15";
        
        Node = "-11.957316237581242 -134.234792664324 0.01 0.15";
        
        Node = "-12.237249678420334 -133.49934196491031 0.01 0.15";
        
        Node = "-12.23969494303407 -133.49290613119163 0.01 0.15";
        
        Node = "-12.517694943034073 -132.75990613119163 0.01 0.15";
        
        Node = "-12.52013473617017 -132.75346155787062 0.01 0.15";
        
        Node = "-12.795916762077228 -132.02368457234763 0.01 0.15";
        
        Node = "-13.072694943034072 -131.29390613119165 0.01 0.15";
        
        Node = "-13.347788396524463 -130.56856979519 0.01 0.15";
        
        Node = "-13.62070231974883 -129.85509482447486 0.01 0.15";
        
        Node = "-13.899500756622832 -129.13494762534094 0.01 0.15";
        
        Node = "-14.182500756622815 -128.403947625341 0.01 0.15";
        
        Node = "-14.18839855957905 -128.38864890060344 0.01 0.15";
        
        Node = "-14.469398559579048 -127.65664890060344 0.01 0.15";
        
        Node = "-14.480134736170193 -127.6284615578706 0.01 0.15";
        
        Node = "-14.756377936202004 -126.89746420904996 0.01 0.15";
        
        Node = "-15.033619651615975 -126.16546629856845 0.01 0.15";
        
        Node = "-15.309699888515196 -125.4349046745894 0.01 0.15";
        
        Node = "-15.586249678420334 -124.70834196491032 0.01 0.15";
        
        Node = "-15.86500903665757 -123.97434694846626 0.01 0.15";
        
        Node = "-16.141558549549885 -123.24778496656637 0.01 0.15";
        
        Node = "-16.41863124680001 -122.52343777232676 0.01 0.15";
        
        Node = "-16.697166998692005 -121.79785709480029 0.01 0.15";
        
        Node = "-16.97793162055325 -121.06906382103278 0.01 0.15";
        
        Node = "-16.98039855957905 -121.06264890060342 0.01 0.15";
        
        Node = "-17.26139855957905 -120.33064890060342 0.01 0.15";
        
        Node = "-17.26876691982994 -120.31135137119225 0.01 0.15";
        
        Node = "-17.546766919829942 -119.57935137119225 0.01 0.15";
        
        Node = "-17.82447422886003 -118.84712477683757 0.01 0.15";
        
        Node = "-18.379558549549884 -117.38878496656639 0.01 0.15";
        
        Node = "-18.65786010804114 -116.66122517793923 0.01 0.15";
        
        Node = "-18.66369494303407 -116.64590613119162 0.01 0.15";
        
        Node = "-18.941694943034072 -115.91290613119162 0.01 0.15";
        
        Node = "-19.21969494303406 -115.17990613119167 0.01 0.15";
        
        Node = "-19.491880210016852 -114.46223778335576 0.01 0.15";
        
        Node = "-19.76797850744249 -113.74653616839782 0.01 0.15";
        
        Node = "-20.05093162055325 -113.01206382103283 0.01 0.15";
        
        Node = "-20.053398559579062 -113.0056489006034 0.01 0.15";
        
        Node = "-20.33439855957906 -112.2736489006034 0.01 0.15";
        
        Node = "-20.339316237581244 -112.26079266432399 0.01 0.15";
        
        Node = "-20.618316237581244 -111.52879266432399 0.01 0.15";
        
        Node = "-20.89824967842032 -110.79334196491035 0.01 0.15";
        
        Node = "-21.177249678420335 -110.06034196491032 0.01 0.15";
        
        Node = "-21.17969494303407 -110.05390613119164 0.01 0.15";
        
        Node = "-21.45769494303407 -109.32090613119163 0.01 0.15";
        
        Node = "-21.46013473617018 -109.31446155787063 0.01 0.15";
        
        Node = "-21.73713473617018 -108.58146155787063 0.01 0.15";
        
        Node = "-22.012916762078664 -107.85168457234383 0.01 0.15";
        
        Node = "-22.28435002676268 -107.13599902193596 0.01 0.15";
        
        Node = "-22.55675226805047 -106.42891235306129 0.01 0.15";
        
        Node = "-22.837529270943033 -105.70874397020353 0.01 0.15";
        
        Node = "-22.847450892325966 -105.68311586969025 0.01 0.15";
        
        Node = "-23.128450892325965 -104.95211586969026 0.01 0.15";
        
        Node = "-23.14225255023488 -104.91584856344468 0.01 0.15";
        
        Node = "-23.41725255023488 -104.1858485634447 0.01 0.15";
        
        Node = "-23.68119078415093 -103.48329964860608 0.01 0.15";
        
        Node = "-23.943338808159712 -102.81154533708357 0.01 0.15";
        
        Node = "-24.22943500501785 -102.10348117094637 0.01 0.15";
        
        Node = "-24.277731331251697 -101.97988214422088 0.01 0.15";
        
        Node = "-24.553731331251697 -101.24888214422089 0.01 0.15";
        
        Node = "-24.668769531988048 -100.91336040550829 0.01 0.15";
        
        Node = "-24.88776953198805 -100.20436040550828 0.01 0.15";
        
        Node = "-24.992226121010965 -99.86512386677276 0.01 0.15";
        
        Node = "-25.004135795413333 -99.83942050167838 0.01 0.15";
        
        Node = "-25.32547255307536 -99.34898971783252 0.01 0.15";
        
        Node = "-25.65632529806197 -98.77462659748284 0.01 0.15";
        
        Node = "-26.04632529806197 -97.99762659748285 0.01 0.15";
        
        Node = "-26.275757538073723 -97.47831797793128 0.01 0.15";
        
        Node = "-26.45309023939024 -96.93899088966194 0.01 0.15";
        
        Node = "-26.576609551616873 -96.38485771559243 0.01 0.15";
        
        Node = "-26.645121709472676 -95.82127393360145 0.01 0.15";
        
        Node = "-26.657964570059534 -95.25368635795408 0.01 0.15";
        
        Node = "-26.615014012211283 -94.68758049799692 0.01 0.15";
        
        Node = "-26.516685136075694 -94.12842754288067 0.01 0.15";
        
        Node = "-26.36392825133575 -93.5816314846818 0.01 0.15";
        
        Node = "-26.158219692842586 -93.05247689095705 0.01 0.15";
        
        Node = "-25.90154755242327 -92.54607783148927 0.01 0.15";
        
        Node = "-25.61354755242327 -92.04107783148928 0.01 0.15";
        
        Node = "-25.284460832248154 -91.52882109188684 0.01 0.15";
        
        Node = "-24.903271180278555 -91.05405853450156 0.01 0.15";
        
        Node = "-24.47421566625183 -90.62206732793945 0.01 0.15";
        
        Node = "-24.002063407390153 -90.23764922077547 0.01 0.15";
        
        Node = "-23.492062557826536 -89.90507716826937 0.01 0.15";
        
        Node = "-22.94988197335112 -89.62804783682299 0.01 0.15";
        
        Node = "-22.290811765974002 -89.33401513380807 0.01 0.15";
        
        Node = "-21.647008730149143 -89.02757216336602 0.01 0.15";
        
        Node = "-21.572448411383093 -88.99273175132677 0.01 0.15";
        
        Node = "-20.875820526949095 -88.67324042143909 0.01 0.15";
        
        Node = "-20.18819481347517 -88.35267125079139 0.01 0.15";
        
        Node = "-19.484237605626824 -88.02250540542025 0.01 0.15";
        
        Node = "-19.433360773413703 -87.99894407532537 0.01 0.15";
        
        Node = "-18.754774874264477 -87.68867899380692 0.01 0.15";
        
        Node = "-18.080979822805602 -87.36986353866749 0.01 0.15";
        
        Node = "-18.0273230371562 -87.34481096812439 0.01 0.15";
        
        Node = "-17.315323037156197 -87.01681096812439 0.01 0.15";
        
        Node = "-17.297578039857214 -87.00867263663164 0.01 0.15";
        
        Node = "-16.634388666537617 -86.70587188634846 0.01 0.15";
        
        Node = "-15.978741059285035 -86.39104959334759 0.01 0.15";
        
        Node = "-15.874263441321872 -86.34216051180752 0.01 0.15";
        
        Node = "-15.20782762731972 -86.03838542127357 0.01 0.15";
        
        Node = "-14.546008374550924 -85.7224321621834 0.01 0.15";
        
        Node = "-14.462149294200577 -85.68321994640843 0.01 0.15";
        
        Node = "-13.763725001814377 -85.36343579006308 0.01 0.15";
        
        Node = "-13.079784950256295 -85.04599525980404 0.01 0.15";
        
        Node = "-12.383268958640656 -84.71833844121304 0.01 0.15";
        
        Node = "-12.326360773413702 -84.69194407532535 0.01 0.15";
        
        Node = "-11.658296031246413 -84.38648950878041 0.01 0.15";
        
        Node = "-10.995873173669903 -84.06980078761939 0.01 0.15";
        
        Node = "-10.906360773413702 -84.02794407532537 0.01 0.15";
        
        Node = "-10.205293762678417 -83.70740011249268 0.01 0.15";
        
        Node = "-9.52720633131313 -83.39362969769778 0.01 0.15";
        
        Node = "-8.839132249291607 -83.06851712015589 0.01 0.15";
        
        Node = "-8.779448411383173 -83.0407317513268 0.01 0.15";
        
        Node = "-8.082820526948494 -82.72124042143878 0.01 0.15";
        
        Node = "-7.395194813474256 -82.40067125079096 0.01 0.15";
        
        Node = "-6.691237605626826 -82.07050540542025 0.01 0.15";
        
        Node = "-6.649241029236844 -82.05101341646309 0.01 0.15";
        
        Node = "-5.968782621705599 -81.73849951300423 0.01 0.15";
        
        Node = "-5.291147812335662 -81.41736369361311 0.01 0.15";
        
        Node = "-5.243201835975305 -81.39491031799855 0.01 0.15";
        
        Node = "-4.538266758622139 -81.06871673086889 0.01 0.15";
        
        Node = "-3.8347355051323597 -80.7411937422541 0.01 0.15";
        
        Node = "-3.1261454863689946 -80.41085107153484 0.01 0.15";
        
        Node = "-3.0934484113830867 -80.39573175132676 0.01 0.15";
        
        Node = "-2.4118011159178145 -80.08311090193382 0.01 0.15";
        
        Node = "-1.734979822805597 -79.76286353866749 0.01 0.15";
        
        Node = "-1.6934578567102117 -79.74341820006765 0.01 0.15";
        
        Node = "-0.9814578567102115 -79.41341820006764 0.01 0.15";
        
        Node = "-0.942156419207099 -79.39538108983149 0.01 0.15";
        
        Node = "-0.28629221330509746 -79.09734462038932 0.01 0.15";
        
        Node = "0.3641497231958426 -78.7845436891159 0.01 0.15";
        
        Node = "0.4717365586780433 -78.73416051180757 0.01 0.15";
        
        Node = "1.1367277732949634 -78.43104389925429 0.01 0.15";
        
        Node = "1.7961268263300156 -78.1158007876194 0.01 0.15";
        
        Node = "1.8856392265863824 -78.0739440753253 0.01 0.15";
        
        Node = "2.5986392265863825 -77.74794407532534 0.01 0.15";
        
    };
    
    new DecalRoad(road_8_right_line) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_white";

        
        Node = "7.401360773413618 -88.25205592467468 0.01 0.15";
        
        Node = "6.733296031246786 -88.55751049121939 0.01 0.15";
        
        Node = "6.070873173669984 -88.87419921238059 0.01 0.15";
        
        Node = "5.975263441321957 -88.91883948819243 0.01 0.15";
        
        Node = "5.316315985810671 -89.21920123158819 0.01 0.15";
        
        Node = "4.662850276804157 -89.53345631088409 0.01 0.15";
        
        Node = "4.549156419207099 -89.58661891016851 0.01 0.15";
        
        Node = "3.8558409033583914 -89.90167392718813 0.01 0.15";
        
        Node = "3.184257435859323 -90.21294154555146 0.01 0.15";
        
        Node = "2.496979822805597 -90.53813646133253 0.01 0.15";
        
        Node = "2.434448411383087 -90.56726824867324 0.01 0.15";
        
        Node = "1.7378205269478624 -90.88675957856148 0.01 0.15";
        
        Node = "1.0441454863689947 -91.21014892846516 0.01 0.15";
        
        Node = "0.33032516994806693 -91.54246282729021 0.01 0.15";
        
        Node = "0.3182018359753047 -91.54808968200145 0.01 0.15";
        
        Node = "-0.36877371421819677 -91.86597288314583 0.01 0.15";
        
        Node = "-1.0538521876643374 -92.19063630638688 0.01 0.15";
        
        Node = "-1.1167589707631564 -92.2199865835369 0.01 0.15";
        
        Node = "-1.8077216142593397 -92.53732476390664 0.01 0.15";
        
        Node = "-2.496762394373173 -92.86049459457975 0.01 0.15";
        
        Node = "-2.508854513631092 -92.86614892846521 0.01 0.15";
        
        Node = "-3.2188545136310918 -93.1971489284652 0.01 0.15";
        
        Node = "-3.2515515886168265 -93.2122682486732 0.01 0.15";
        
        Node = "-3.934630480622951 -93.52554566478261 0.01 0.15";
        
        Node = "-4.613867750708394 -93.84648287984413 0.01 0.15";
        
        Node = "-4.655798164024694 -93.86608968200144 0.01 0.15";
        
        Node = "-5.366798164024694 -94.19508968200144 0.01 0.15";
        
        Node = "-5.390639226586298 -94.20605592467463 0.01 0.15";
        
        Node = "-6.058703968753569 -94.51151049121955 0.01 0.15";
        
        Node = "-6.7211268263300985 -94.82819921238061 0.01 0.15";
        
        Node = "-6.810639226586298 -94.87005592467463 0.01 0.15";
        
        Node = "-7.495113455409548 -95.18301328595989 0.01 0.15";
        
        Node = "-8.176731041359345 -95.50366155878697 0.01 0.15";
        
        Node = "-8.203731613543354 -95.51627825082026 0.01 0.15";
        
        Node = "-8.914731613543356 -95.84627825082026 0.01 0.15";
        
        Node = "-8.941850705799423 -95.85878005359156 0.01 0.15";
        
        Node = "-9.611764016369824 -96.16551002444261 0.01 0.15";
        
        Node = "-10.277991625449076 -96.48356783781661 0.01 0.15";
        
        Node = "-10.370736558678127 -96.52683948819248 0.01 0.15";
        
        Node = "-11.031253608726834 -96.82791668491873 0.01 0.15";
        
        Node = "-11.685258940714965 -97.14195040665243 0.01 0.15";
        
        Node = "-11.786421960142784 -97.18932736336836 0.01 0.15";
        
        Node = "-12.491542583633512 -97.51127319426189 0.01 0.15";
        
        Node = "-13.167784346483709 -97.82280029849625 0.01 0.15";
        
        Node = "-13.448245214045109 -97.95550424006838 0.01 0.15";
        
        Node = "-13.221564994982149 -98.51651882905364 0.01 0.15";
        
        Node = "-13.196139247473777 -98.58054214535562 0.01 0.15";
        
        Node = "-12.908139247473777 -99.31854214535562 0.01 0.15";
        
        Node = "-12.881914001018412 -99.38702506868863 0.01 0.15";
        
        Node = "-12.607829626800013 -100.11658783933542 0.01 0.15";
        
        Node = "-12.340587354512207 -100.8259945984994 0.01 0.15";
        
        Node = "-12.071479429054161 -101.52605827647035 0.01 0.15";
        
        Node = "-11.791470729056968 -102.24425602979647 0.01 0.15";
        
        Node = "-11.783068379446753 -102.2659361789672 0.01 0.15";
        
        Node = "-11.501068379446753 -102.9979361789672 0.01 0.15";
        
        Node = "-11.490305056965934 -103.02609386880836 0.01 0.15";
        
        Node = "-11.212305056965931 -103.75909386880836 0.01 0.15";
        
        Node = "-11.209865263829798 -103.76553844212944 0.01 0.15";
        
        Node = "-10.9328652638298 -104.49853844212944 0.01 0.15";
        
        Node = "-10.657083237922283 -105.22831542765365 0.01 0.15";
        
        Node = "-10.381525771139009 -105.95487522316495 0.01 0.15";
        
        Node = "-10.103750321579664 -106.68465803508968 0.01 0.15";
        
        Node = "-9.825216763781667 -107.41643257941202 0.01 0.15";
        
        Node = "-9.549134940724183 -108.14077628721874 0.01 0.15";
        
        Node = "-9.271833001308089 -108.86314290519948 0.01 0.15";
        
        Node = "-8.991544652411928 -109.59069989595122 0.01 0.15";
        
        Node = "-8.710021492557512 -110.3204638316022 0.01 0.15";
        
        Node = "-8.698305056965928 -110.35109386880836 0.01 0.15";
        
        Node = "-8.42030505696593 -111.08409386880837 0.01 0.15";
        
        Node = "-8.142305056965942 -111.81709386880833 0.01 0.15";
        
        Node = "-7.867211603475008 -112.5424302048114 0.01 0.15";
        
        Node = "-7.590139891958856 -113.26677482206077 0.01 0.15";
        
        Node = "-7.5867503215796654 -113.27565803508968 0.01 0.15";
        
        Node = "-7.028750321579666 -114.74165803508969 0.01 0.15";
        
        Node = "-7.026305056965941 -114.74809386880834 0.01 0.15";
        
        Node = "-6.748768791713093 -115.4798711437376 0.01 0.15";
        
        Node = "-6.4749000040893545 -116.20099327517852 0.01 0.15";
        
        Node = "-6.198833001308525 -116.92014290519833 0.01 0.15";
        
        Node = "-5.918068379446753 -117.64893617896719 0.01 0.15";
        
        Node = "-5.915601440420956 -117.65535109939655 0.01 0.15";
        
        Node = "-5.634601440420956 -118.38735109939655 0.01 0.15";
        
        Node = "-5.632139891958856 -118.39377482206076 0.01 0.15";
        
        Node = "-5.352139891958856 -119.12577482206076 0.01 0.15";
        
        Node = "-5.348750321579666 -119.13465803508967 0.01 0.15";
        
        Node = "-5.069750321579666 -119.86765803508968 0.01 0.15";
        
        Node = "-4.790990963342032 -120.60165305153478 0.01 0.15";
        
        Node = "-4.512750321579666 -121.33265803508968 0.01 0.15";
        
        Node = "-4.507865263829808 -121.34553844212941 0.01 0.15";
        
        Node = "-4.231622063798394 -122.076535790949 0.01 0.15";
        
        Node = "-3.9543803483840243 -122.80853370143154 0.01 0.15";
        
        Node = "-3.6811965464626972 -123.53143075198534 0.01 0.15";
        
        Node = "-3.408539482978716 -124.24169755081194 0.01 0.15";
        
        Node = "-3.1284992433771848 -124.965052374659 0.01 0.15";
        
        Node = "-2.8454992433771684 -125.69605237465905 0.01 0.15";
        
        Node = "-2.8371398919588575 -125.71777482206076 0.01 0.15";
        
        Node = "-2.5571398919588573 -126.44977482206076 0.01 0.15";
        
        Node = "-2.5513050569659272 -126.46509386880838 0.01 0.15";
        
        Node = "-2.2733050569659277 -127.19809386880839 0.01 0.15";
        
        Node = "-1.995305056965928 -127.93109386880838 0.01 0.15";
        
        Node = "-1.9928652638298283 -127.93753844212937 0.01 0.15";
        
        Node = "-1.7170832379232548 -128.6673154276511 0.01 0.15";
        
        Node = "-1.4415257711390086 -129.39387522316494 0.01 0.15";
        
        Node = "-1.1642167637831387 -130.12243257940816 0.01 0.15";
        
        Node = "-0.8864416632858003 -130.85121886458396 0.01 0.15";
        
        Node = "-0.6088975796952177 -131.57778962626932 0.01 0.15";
        
        Node = "-0.3313078028479943 -132.30090605563646 0.01 0.15";
        
        Node = "-0.05102149255751165 -133.0274638316022 0.01 0.15";
        
        Node = "-0.047601440420954155 -133.03635109939657 0.01 0.15";
        
        Node = "0.23339855957904554 -133.76835109939657 0.01 0.15";
        
        Node = "0.24169494303407113 -133.79009386880836 0.01 0.15";
        
        Node = "0.5196949430340716 -134.52309386880836 0.01 0.15";
        
        Node = "0.7976949430340721 -135.25609386880836 0.01 0.15";
        
        Node = "1.0740092476987066 -135.98464921168312 0.01 0.15";
        
        Node = "1.3500900901677955 -136.7089903467633 0.01 0.15";
        
        Node = "1.6288601080411422 -137.43777482206076 0.01 0.15";
        
        Node = "1.9097989705965621 -138.17323095256887 0.01 0.15";
        
        Node = "1.9146949430340725 -138.18609386880837 0.01 0.15";
        
        Node = "2.1926949430340725 -138.91909386880837 0.01 0.15";
        
        Node = "2.1951347361701696 -138.92553844212935 0.01 0.15";
        
        Node = "2.4721347361701693 -139.65853844212933 0.01 0.15";
        
    };
    
    new DecalRoad(road_8_left_right_divider) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_yellow_double";

        
        Node = "-4.800869172699626 -142.40699967372143 0.01 0.3";
        
        Node = "-5.07744736349185 -141.67511586920628 0.01 0.3";
        
        Node = "-5.354179089404699 -140.94545991563032 0.01 0.3";
        
        Node = "-5.633166171045847 -140.21511159119117 0.01 0.3";
        
        Node = "-5.913003500620309 -139.4835368581608 0.01 0.3";
        
        Node = "-5.913854108253244 -139.48130914781785 0.01 0.3";
        
        Node = "-6.192854108253244 -138.74930914781785 0.01 0.3";
        
        Node = "-6.1940242226957825 -138.74623156058584 0.01 0.3";
        
        Node = "-6.472024222695783 -138.01323156058584 0.01 0.3";
        
        Node = "-6.7500242226957825 -137.28023156058583 0.01 0.3";
        
        Node = "-7.026595205490252 -136.55099943688674 0.01 0.3";
        
        Node = "-7.305560068276763 -135.82430093311547 0.01 0.3";
        
        Node = "-7.586966582664065 -135.0948393656789 0.01 0.3";
        
        Node = "-7.5881510163044315 -135.0917615240185 0.01 0.3";
        
        Node = "-7.869151016304431 -134.3597615240185 0.01 0.3";
        
        Node = "-7.870328647825649 -134.3566862501926 0.01 0.3";
        
        Node = "-8.15032864782565 -133.6236862501926 0.01 0.3";
        
        Node = "-8.429854108253245 -132.89030914781785 0.01 0.3";
        
        Node = "-8.709177377807908 -132.15646042074815 0.01 0.3";
        
        Node = "-8.710024222695782 -132.15423156058583 0.01 0.3";
        
        Node = "-8.988024222695783 -131.42123156058582 0.01 0.3";
        
        Node = "-8.988869172699626 -131.41899967372143 0.01 0.3";
        
        Node = "-9.265447363492097 -130.68711586920563 0.01 0.3";
        
        Node = "-9.543024222695783 -129.95523156058584 0.01 0.3";
        
        Node = "-9.82001762650127 -129.2248856433577 0.01 0.3";
        
        Node = "-10.09756357393898 -128.49930123791341 0.01 0.3";
        
        Node = "-10.379108487142105 -127.77205978366786 0.01 0.3";
        
        Node = "-10.6621084871421 -127.04105978366789 0.01 0.3";
        
        Node = "-10.664151016304434 -127.03576152401851 0.01 0.3";
        
        Node = "-10.945151016304433 -126.30376152401851 0.01 0.3";
        
        Node = "-10.948869172699633 -126.29399967372143 0.01 0.3";
        
        Node = "-11.225607077471901 -125.56169323257313 0.01 0.3";
        
        Node = "-11.503344468092113 -124.82838659690682 0.01 0.3";
        
        Node = "-11.780025935415887 -124.09623105613653 0.01 0.3";
        
        Node = "-12.058177377807908 -123.36546042074815 0.01 0.3";
        
        Node = "-12.336440359015397 -122.6327695059629 0.01 0.3";
        
        Node = "-12.614591705472348 -121.901999122619 0.01 0.3";
        
        Node = "-12.893577920969355 -121.17264944496253 0.01 0.3";
        
        Node = "-13.173724501712009 -120.44287258694254 0.01 0.3";
        
        Node = "-13.455296665126665 -119.71198314148322 0.01 0.3";
        
        Node = "-13.456151016304434 -119.70976152401852 0.01 0.3";
        
        Node = "-13.737151016304432 -118.97776152401849 0.01 0.3";
        
        Node = "-13.739702829378334 -118.97107839694968 0.01 0.3";
        
        Node = "-14.017702829378335 -118.23907839694971 0.01 0.3";
        
        Node = "-14.295601464540214 -117.50634624306079 0.01 0.3";
        
        Node = "-14.852591705472348 -116.042999122619 0.01 0.3";
        
        Node = "-15.132003500620309 -115.31253685816077 0.01 0.3";
        
        Node = "-15.134024222695782 -115.30723156058585 0.01 0.3";
        
        Node = "-15.412024222695782 -114.57423156058584 0.01 0.3";
        
        Node = "-15.690024222695778 -113.84123156058587 0.01 0.3";
        
        Node = "-15.966010462343512 -113.11354122367294 0.01 0.3";
        
        Node = "-16.245966582664067 -112.3878393656789 0.01 0.3";
        
        Node = "-16.528296665126668 -111.65498314148323 0.01 0.3";
        
        Node = "-16.52915101630444 -111.6527615240185 0.01 0.3";
        
        Node = "-16.810151016304438 -110.92076152401847 0.01 0.3";
        
        Node = "-16.811854108253243 -110.91630914781783 0.01 0.3";
        
        Node = "-17.090854108253243 -110.18430914781783 0.01 0.3";
        
        Node = "-17.370177377807902 -109.45046042074819 0.01 0.3";
        
        Node = "-17.649177377807906 -108.71746042074818 0.01 0.3";
        
        Node = "-17.65002422269578 -108.71523156058583 0.01 0.3";
        
        Node = "-17.928024222695782 -107.98223156058583 0.01 0.3";
        
        Node = "-17.928869172699628 -107.97999967372141 0.01 0.3";
        
        Node = "-18.20586917269963 -107.24699967372143 0.01 0.3";
        
        Node = "-18.48244736349206 -106.51511586920572 0.01 0.3";
        
        Node = "-18.758173169441804 -105.7881122153886 0.01 0.3";
        
        Node = "-19.036849270320317 -105.06474020885287 0.01 0.3";
        
        Node = "-19.32038676049975 -104.33749141825231 0.01 0.3";
        
        Node = "-19.32382281985315 -104.32861588560701 0.01 0.3";
        
        Node = "-19.604822819853148 -103.59761588560701 0.01 0.3";
        
        Node = "-19.609602614799957 -103.58505577954793 0.01 0.3";
        
        Node = "-19.88460261479996 -102.85505577954797 0.01 0.3";
        
        Node = "-20.15577170013886 -102.13325528956051 0.01 0.3";
        
        Node = "-20.4348186348604 -101.41819751933659 0.01 0.3";
        
        Node = "-20.729349785287567 -100.68925754837971 0.01 0.3";
        
        Node = "-20.746075785714872 -100.64645269063925 0.01 0.3";
        
        Node = "-21.022075785714872 -99.91545269063926 0.01 0.3";
        
        Node = "-21.061915855233956 -99.79925468589033 0.01 0.3";
        
        Node = "-21.280915855233957 -99.09025468589033 0.01 0.3";
        
        Node = "-21.459593461821992 -98.50996497550568 0.01 0.3";
        
        Node = "-21.695120621788153 -98.0016521217934 0.01 0.3";
        
        Node = "-22.167890927471987 -97.2801003351801 0.01 0.3";
        
        Node = "-22.282471964696786 -97.08118670042694 0.01 0.3";
        
        Node = "-22.672471964696786 -96.30418670042695 0.01 0.3";
        
        Node = "-22.75192901751471 -96.1243395594567 0.01 0.3";
        
        Node = "-22.813342940048567 -95.93755961546734 0.01 0.3";
        
        Node = "-22.856120191036148 -95.745652022716 0.01 0.3";
        
        Node = "-22.879847345271923 -95.55047149215636 0.01 0.3";
        
        Node = "-22.88429508919811 -95.35390436639102 0.01 0.3";
        
        Node = "-22.86942043712945 -95.1578503889167 0.01 0.3";
        
        Node = "-22.83536714669288 -94.96420434385479 0.01 0.3";
        
        Node = "-22.78246432946693 -94.77483774361275 0.01 0.3";
        
        Node = "-22.711223270248517 -94.591580741457 0.01 0.3";
        
        Node = "-22.622332485687714 -94.41620444380581 0.01 0.3";
        
        Node = "-22.334332485687714 -93.91120444380581 0.01 0.3";
        
        Node = "-22.220363058787242 -93.73379951234176 0.01 0.3";
        
        Node = "-22.0883493265034 -93.56937957904816 0.01 0.3";
        
        Node = "-21.93975867229501 -93.41977223478423 0.01 0.3";
        
        Node = "-21.7762427384901 -93.28664042277939 0.01 0.3";
        
        Node = "-21.59961906764556 -93.17146395437902 0.01 0.3";
        
        Node = "-21.41185089986186 -93.07552306037161 0.01 0.3";
        
        Node = "-20.710337408129902 -92.76255502469559 0.01 0.3";
        
        Node = "-20.024570122995375 -92.43613754575446 0.01 0.3";
        
        Node = "-19.99874836757856 -92.42407160219108 0.01 0.3";
        
        Node = "-19.29141836431191 -92.09967200742506 0.01 0.3";
        
        Node = "-18.58916703496631 -91.77228441585686 0.01 0.3";
        
        Node = "-17.88125977684046 -91.4402659412711 0.01 0.3";
        
        Node = "-17.863640094688726 -91.43210617327287 0.01 0.3";
        
        Node = "-17.162558398013818 -91.11155549569077 0.01 0.3";
        
        Node = "-16.466404267638303 -90.78216053287184 0.01 0.3";
        
        Node = "-16.447821831049765 -90.77348431796514 0.01 0.3";
        
        Node = "-15.735821831049766 -90.44548431796517 0.01 0.3";
        
        Node = "-15.729676377439727 -90.4426658481841 0.01 0.3";
        
        Node = "-15.033273131268633 -90.12470022038053 0.01 0.3";
        
        Node = "-14.344711189362782 -89.79407345224158 0.01 0.3";
        
        Node = "-14.308528464527054 -89.77714216859135 0.01 0.3";
        
        Node = "-13.61165458954807 -89.45949278658833 0.01 0.3";
        
        Node = "-12.919647921922397 -89.12912802153537 0.01 0.3";
        
        Node = "-12.890605816173359 -89.11554803338822 0.01 0.3";
        
        Node = "-12.18330735993744 -88.79170070651617 0.01 0.3";
        
        Node = "-11.481678770650445 -88.46605030642513 0.01 0.3";
        
        Node = "-10.776348557104988 -88.13424707920797 0.01 0.3";
        
        Node = "-10.756640094688729 -88.12510617327285 0.01 0.3";
        
        Node = "-10.059202088743568 -87.80622147490243 0.01 0.3";
        
        Node = "-9.36764006014542 -87.47560200437033 0.01 0.3";
        
        Node = "-9.336640094688729 -87.46110617327287 0.01 0.3";
        
        Node = "-8.627772731662965 -87.13699570995391 0.01 0.3";
        
        Node = "-7.9281710238308545 -86.81327002517648 0.01 0.3";
        
        Node = "-7.2264180949927646 -86.48169424074663 0.01 0.3";
        
        Node = "-7.205748367578588 -86.47207160219111 0.01 0.3";
        
        Node = "-6.498418364312241 -86.14767200742517 0.01 0.3";
        
        Node = "-5.796167034966248 -85.82028441585686 0.01 0.3";
        
        Node = "-5.088259776840459 -85.4882659412711 0.01 0.3";
        
        Node = "-5.073715507960811 -85.48151546890497 0.01 0.3";
        
        Node = "-4.372639003187596 -85.15953229887569 0.01 0.3";
        
        Node = "-3.6745014068694934 -84.82868006705218 0.01 0.3";
        
        Node = "-3.6578967397317075 -84.82090400623326 0.01 0.3";
        
        Node = "-2.948997145844565 -84.4928759241111 0.01 0.3";
        
        Node = "-2.2405837247265548 -84.16308008390001 0.01 0.3";
        
        Node = "-1.53107202991134 -83.83230773040168 0.01 0.3";
        
        Node = "-1.5197483675785581 -83.8270716021911 0.01 0.3";
        
        Node = "-0.8176064470712285 -83.50505139460918 0.01 0.3";
        
        Node = "-0.12040426763830192 -83.17516053287187 0.01 0.3";
        
        Node = "-0.10602436596024634 -83.16842621647365 0.01 0.3";
        
        Node = "0.6059756340397537 -82.83842621647364 0.01 0.3";
        
        Node = "0.619586521486719 -82.83217959821005 0.01 0.3";
        
        Node = "1.3127992334872693 -82.5171712971046 0.01 0.3";
        
        Node = "2.0002120253492097 -82.18659088800553 0.01 0.3";
        
        Node = "2.0374715354729154 -82.16914216859135 0.01 0.3";
        
        Node = "2.7338451162928297 -81.8517208309105 0.01 0.3";
        
        Node = "3.424359939854551 -81.52160200437035 0.01 0.3";
        
        Node = "3.455359905311301 -81.50710617327283 0.01 0.3";
        
        Node = "4.168359905311301 -81.18110617327284 0.01 0.3";
        
    };
    
    new DecalRoad(road_8_separator_2) {
        oneWay = "0";
        flipDirection = "0";
        improvedSpline = "0";
        startTangent = "0";
        endTangent = "0";
        looped = "0";
        smoothness = "0.5";
        detail = "0.1";
annotation = "STREET";
        overObjects = "1";
        breakAngle = "3";
        zBias = "0";
        decalBias = "0.0005";
        startEndFade = "0 0";
        position = "0 0 0";
        scale = "1 1 1";
        rotationMatrix = "1 0 0 0 1 0 0 0 1";
        canSave = "1";
        canSaveDynamicFields = "1";

renderPriority = "9";
textureLength = "16";
distanceFade = "0 0";
drivability = "-1";
        Material = "line_dashed_short";

        
        Node = "5.831640094688699 -84.81889382672716 0.01 0.15";
        
        Node = "5.13420208874352 -85.1377785250976 0.01 0.15";
        
        Node = "4.442640060145449 -85.46839799562964 0.01 0.15";
        
        Node = "4.409528464527085 -85.48385783140864 0.01 0.15";
        
        Node = "3.7152479604536546 -85.80032510184884 0.01 0.15";
        
        Node = "3.0267879746507904 -86.13140911199449 0.01 0.15";
        
        Node = "2.987413478513281 -86.14982040178995 0.01 0.15";
        
        Node = "2.2812306158815687 -86.47072257218642 0.01 0.15";
        
        Node = "1.5832276834148176 -86.7942351672904 0.01 0.15";
        
        Node = "0.8824042676383019 -87.12583946712815 0.01 0.15";
        
        Node = "0.8607483675785581 -87.13592839780891 0.01 0.15";
        
        Node = "0.1534183643121484 -87.46032799257485 0.01 0.15";
        
        Node = "-0.5509279700886599 -87.78869226959833 0.01 0.15";
        
        Node = "-1.2629047030482887 -88.12014729949445 0.01 0.15";
        
        Node = "-1.2671032602682928 -88.12209599376673 0.01 0.15";
        
        Node = "-1.96978310449141 -88.4472460201372 0.01 0.15";
        
        Node = "-2.6704985931305067 -88.77931993294783 0.01 0.15";
        
        Node = "-2.6922844920391884 -88.78948453109503 0.01 0.15";
        
        Node = "-3.396998827449817 -89.11313844637492 0.01 0.15";
        
        Node = "-4.09974022315954 -89.44273405872892 0.01 0.15";
        
        Node = "-4.10392797008869 -89.44469226959835 0.01 0.15";
        
        Node = "-4.81392797008869 -89.77569226959834 0.01 0.15";
        
        Node = "-4.825251632421412 -89.78092839780889 0.01 0.15";
        
        Node = "-5.5278893439389645 -90.10317598780364 0.01 0.15";
        
        Node = "-6.226581905007237 -90.43330575925337 0.01 0.15";
        
        Node = "-6.241103260268293 -90.44009599376673 0.01 0.15";
        
        Node = "-6.9521032602682915 -90.76909599376673 0.01 0.15";
        
        Node = "-6.960359905311272 -90.77289382672714 0.01 0.15";
        
        Node = "-7.6577979112564325 -91.09177852509758 0.01 0.15";
        
        Node = "-8.34935993985458 -91.42239799562965 0.01 0.15";
        
        Node = "-8.380359905311272 -91.43689382672714 0.01 0.15";
        
        Node = "-9.083480850358574 -91.75837689557066 0.01 0.15";
        
        Node = "-9.78365144289501 -92.08775292079203 0.01 0.15";
        
        Node = "-9.793002290404624 -92.09212233794642 0.01 0.15";
        
        Node = "-10.504002290404625 -92.42212233794642 0.01 0.15";
        
        Node = "-10.513394183826641 -92.4264519666118 0.01 0.15";
        
        Node = "-11.210818706967242 -92.74577836344302 0.01 0.15";
        
        Node = "-11.904352078077602 -93.07687197846464 0.01 0.15";
        
        Node = "-11.936471535472945 -93.09185783140866 0.01 0.15";
        
        Node = "-12.631295622069977 -93.40857287789397 0.01 0.15";
        
        Node = "-13.319288810637218 -93.73892654775842 0.01 0.15";
        
        Node = "-13.354323622560273 -93.75533415181589 0.01 0.15";
        
        Node = "-14.065248513811303 -94.07993011056635 0.01 0.15";
        
        Node = "-14.76486470873901 -94.40222521160047 0.01 0.15";
        
        Node = "-15.463595732361696 -94.73283946712814 0.01 0.15";
        
        Node = "-15.487359905311271 -94.74389382672715 0.01 0.15";
        
        Node = "-16.191530258828386 -95.06585670926093 0.01 0.15";
        
        Node = "-16.892740223159542 -95.39473405872891 0.01 0.15";
        
        Node = "-16.89692797008866 -95.39669226959833 0.01 0.15";
        
        Node = "-17.606927970088663 -95.72769226959834 0.01 0.15";
        
        Node = "-17.61825163242144 -95.73292839780892 0.01 0.15";
        
        Node = "-18.225054037133887 -96.01122346981589 0.01 0.15";
        
        Node = "-18.127334588544322 -96.18717335647212 0.01 0.15";
        
        Node = "-17.773334588544323 -96.95117335647211 0.01 0.15";
        
        Node = "-17.67655876727227 -97.20344888596802 0.01 0.15";
        
        Node = "-17.458821076389146 -97.91059698296458 0.01 0.15";
        
        Node = "-17.25821914433916 -98.56003428809444 0.01 0.15";
        
        Node = "-17.01204130221164 -99.21204879025102 0.01 0.15";
        
        Node = "-16.721650214712433 -99.9307424516203 0.01 0.15";
        
        Node = "-16.71284476102988 -99.95291502869459 0.01 0.15";
        
        Node = "-16.42484476102988 -100.69091502869459 0.01 0.15";
        
        Node = "-16.415762424595123 -100.7146320584203 0.01 0.15";
        
        Node = "-16.141079524433497 -101.44578799630507 0.01 0.15";
        
        Node = "-15.868766183380925 -102.16865613800825 0.01 0.15";
        
        Node = "-15.591884650754592 -102.88894226024972 0.01 0.15";
        
        Node = "-15.30861323950025 -103.61550858174769 0.01 0.15";
        
        Node = "-15.305703334873336 -103.62301685851678 0.01 0.15";
        
        Node = "-15.023703334873336 -104.35501685851678 0.01 0.15";
        
        Node = "-15.01997577730422 -104.36476843941415 0.01 0.15";
        
        Node = "-14.741975777304217 -105.09776843941415 0.01 0.15";
        
        Node = "-14.741130827300362 -105.10000032627859 0.01 0.15";
        
        Node = "-14.464130827300364 -105.8330003262786 0.01 0.15";
        
        Node = "-14.1875526365099 -106.5648841307891 0.01 0.15";
        
        Node = "-13.9103985354598 -107.29565375693917 0.01 0.15";
        
        Node = "-13.631822622192091 -108.02753957925184 0.01 0.15";
        
        Node = "-13.352984160614374 -108.76011517902411 0.01 0.15";
        
        Node = "-13.07499478466661 -109.48946364925266 0.01 0.15";
        
        Node = "-12.795275498288024 -110.21812741305737 0.01 0.15";
        
        Node = "-12.513868277892186 -110.94858870855296 0.01 0.15";
        
        Node = "-12.232033417335936 -111.67916063432111 0.01 0.15";
        
        Node = "-12.227975777304218 -111.68976843941415 0.01 0.15";
        
        Node = "-11.949975777304218 -112.42276843941416 0.01 0.15";
        
        Node = "-11.671975777304223 -113.15576843941413 0.01 0.15";
        
        Node = "-11.394982373497667 -113.88611435664508 0.01 0.15";
        
        Node = "-11.11599649937969 -114.61546314183923 0.01 0.15";
        
        Node = "-11.114822622192092 -114.61853957925183 0.01 0.15";
        
        Node = "-10.556822622192092 -116.08453957925184 0.01 0.15";
        
        Node = "-10.555975777304223 -116.08676843941414 0.01 0.15";
        
        Node = "-10.278136378082483 -116.81934498484412 0.01 0.15";
        
        Node = "-10.001567100983523 -117.54757775763706 0.01 0.15";
        
        Node = "-9.72227549828749 -118.27512741305875 0.01 0.15";
        
        Node = "-9.440703334873335 -119.00601685851677 0.01 0.15";
        
        Node = "-9.439848983695569 -119.00823847598149 0.01 0.15";
        
        Node = "-9.158848983695568 -119.74023847598149 0.01 0.15";
        
        Node = "-9.15799649937969 -119.74246314183922 0.01 0.15";
        
        Node = "-8.877996499379691 -120.47446314183922 0.01 0.15";
        
        Node = "-8.876822622192092 -120.47753957925183 0.01 0.15";
        
        Node = "-8.597822622192092 -121.21053957925183 0.01 0.15";
        
        Node = "-8.319559640984604 -121.9432304940371 0.01 0.15";
        
        Node = "-8.040822622192092 -122.67553957925183 0.01 0.15";
        
        Node = "-8.039130827300367 -122.68000032627859 0.01 0.15";
        
        Node = "-7.762392922527306 -123.41230676742896 0.01 0.15";
        
        Node = "-7.484655531907888 -124.14561340309318 0.01 0.15";
        
        Node = "-7.208977158948343 -124.87511454614152 0.01 0.15";
        
        Node = "-6.930866487611133 -125.5995878963865 0.01 0.15";
        
        Node = "-6.648891512857899 -126.32794021633212 0.01 0.15";
        
        Node = "-6.3658915128578935 -127.05894021633215 0.01 0.15";
        
        Node = "-6.362996499379691 -127.06646314183924 0.01 0.15";
        
        Node = "-6.082996499379691 -127.79846314183924 0.01 0.15";
        
        Node = "-6.080975777304217 -127.80376843941416 0.01 0.15";
        
        Node = "-5.802975777304217 -128.53676843941417 0.01 0.15";
        
        Node = "-5.524975777304217 -129.26976843941418 0.01 0.15";
        
        Node = "-5.5241308273003735 -129.27200032627857 0.01 0.15";
        
        Node = "-5.247552636507903 -130.00388413079438 0.01 0.15";
        
        Node = "-4.970398535459801 -130.7346537569392 0.01 0.15";
        
        Node = "-4.691984160623011 -131.46611517900143 0.01 0.15";
        
        Node = "-4.413408368237024 -132.19700220418616 0.01 0.15";
        
        Node = "-4.134258902057744 -132.92777562814837 0.01 0.15";
        
        Node = "-3.854439931723328 -133.65669906688427 0.01 0.15";
        
        Node = "-3.573033417335935 -134.3861606343211 0.01 0.15";
        
        Node = "-3.5718489836955687 -134.3892384759815 0.01 0.15";
        
        Node = "-3.290848983695569 -135.1212384759815 0.01 0.15";
        
        Node = "-3.2879757773042178 -135.12876843941416 0.01 0.15";
        
        Node = "-3.0099757773042173 -135.86176843941416 0.01 0.15";
        
        Node = "-2.7319757773042177 -136.59476843941417 0.01 0.15";
        
        Node = "-2.45455956789835 -137.32622916421454 0.01 0.15";
        
        Node = "-2.1765705315432675 -138.05557674346872 0.01 0.15";
        
        Node = "-1.896996499379691 -138.78646314183922 0.01 0.15";
        
        Node = "-1.6166713521743508 -139.5203137498074 0.01 0.15";
        
        Node = "-1.6149757773042173 -139.52476843941417 0.01 0.15";
        
        Node = "-1.3369757773042172 -140.25776843941418 0.01 0.15";
        
        Node = "-1.3361308273003742 -140.26000032627857 0.01 0.15";
        
        Node = "-1.0591308273003746 -140.99300032627855 0.01 0.15";
        
    };
    

    
    new TSStatic(pole407) {
        
        shapeName = "/levels/drivebuild/art/objects/pole_light_signal1.dae";
        
        position = "67.53093442128605 -28.197108081675168 0";
        
        rotationMatrix = "0.9876883405951377 -0.1564344650402311 0.0 0.1564344650402311 0.9876883405951377 0.0 0.0 0.0 1.0";
        
        scale = "0.75 0.75 0.75";
        
    };
    
    new TSStatic(trafficlight407) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "73.18735182173518 -28.92087751450331 5.9";
        
        rotationMatrix = "0.9876883405951377 -0.1564344650402311 0.0 0.1564344650402311 0.9876883405951377 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
    
    new TSStatic(trafficlight407a) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "69.63167379559268 -28.35771344035848 5.5";
        
        rotationMatrix = "0.9876883405951377 -0.1564344650402311 0.0 0.1564344650402311 0.9876883405951377 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
    
    new TSStatic(pole240) {
        
        shapeName = "/levels/drivebuild/art/objects/pole_light_signal1.dae";
        
        position = "73.19295535848596 -154.58009143192365 0";
        
        rotationMatrix = "0.9510565162951535 -0.3090169943749477 0.0 0.3090169943749477 0.9510565162951535 0.0 0.0 0.0 1.0";
        
        scale = "0.75 0.75 0.75";
        
    };
    
    new TSStatic(trafficlight240) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "78.66651039041207 -156.17980869209066 5.9";
        
        rotationMatrix = "0.9510565162951535 -0.3090169943749477 0.0 0.3090169943749477 0.9510565162951535 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
    
    new TSStatic(trafficlight240a) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "75.24270693174952 -155.06734751234086 5.5";
        
        rotationMatrix = "0.9510565162951535 -0.3090169943749477 0.0 0.3090169943749477 0.9510565162951535 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
    
    new TSStatic(pole600) {
        
        shapeName = "/levels/drivebuild/art/objects/pole_light_signal1.dae";
        
        position = "5.8580639601690905 -132.9213517332533 0";
        
        rotationMatrix = "0.08715574274765789 -0.9961946980917455 0.0 0.9961946980917455 0.08715574274765789 0.0 0.0 0.0 1.0";
        
        scale = "0.75 0.75 0.75";
        
    };
    
    new TSStatic(trafficlight600) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "6.524204792506337 -138.58484503610913 5.9";
        
        rotationMatrix = "0.08715574274765789 -0.9961946980917455 0.0 0.9961946980917455 0.08715574274765789 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
    
    new TSStatic(trafficlight600a) {
        
        shapeName = "/levels/drivebuild/art/objects/trafficlight2a.dae";
        
        position = "6.2104441186147685 -134.99854412297884 5.5";
        
        rotationMatrix = "0.08715574274765789 -0.9961946980917455 0.0 0.9961946980917455 0.08715574274765789 0.0 0.0 0.0 1.0";
        
        scale = "1 1 1";
        
    };
new BeamNGWaypoint(wp_ego_0){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "15.49 0.0 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_1){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "27.38 0.0 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_2){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "37.0 0.01 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_3){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "44.64 0.02 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_4){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "50.64 0.04 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_5){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "55.29 0.07 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_6){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "58.93 0.11 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_7){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "61.86 0.16 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_8){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "64.39 0.23 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_9){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "66.82 0.3 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_10){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.19 0.28 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_11){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "71.41 -0.01 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_12){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "73.42 -0.71 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_13){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "75.13 -1.98 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_14){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "76.46 -3.98 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_15){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "77.34 -6.87 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_16){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "77.68 -10.8 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_17){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "77.4 -15.93 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_18){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "76.51 -22.3 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_19){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "76.01 -25.59 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_20){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "75.52 -28.89 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_21){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "75.02 -32.19 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_22){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "74.53 -35.48 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_23){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "74.03 -38.78 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_24){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "73.29 -43.72 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_25){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "72.55 -48.67 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_26){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "71.81 -53.61 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_27){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "71.07 -58.56 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_28){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "70.32 -63.5 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_29){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.58 -68.45 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_30){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.42 -73.43 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_31){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.34 -78.3 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_32){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.37 -83.01 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_33){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.55 -87.57 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_34){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "69.93 -91.96 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_35){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "70.53 -96.15 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_36){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "71.39 -100.14 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_37){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "72.56 -103.89 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_38){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "74.07 -107.41 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_39){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "75.93 -110.68 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_40){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "78.05 -113.8 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_41){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "80.25 -116.9 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_42){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "82.34 -120.15 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_43){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "84.14 -123.68 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_44){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "85.49 -127.64 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_45){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "86.2 -132.18 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_46){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "86.09 -137.44 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_47){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "84.98 -143.57 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_48){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "82.99 -150.18 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_49){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "81.98 -153.35 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_50){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "80.97 -156.53 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_51){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "79.96 -159.71 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_52){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "78.95 -162.88 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_53){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "77.94 -166.06 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_54){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "71.0 -161.44 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_55){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "64.06 -156.82 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_56){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "57.13 -152.21 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_57){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "50.19 -147.59 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_58){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "43.25 -142.97 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_59){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "36.31 -138.35 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_60){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "35.27 -138.44 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_61){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "34.23 -138.53 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_62){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "33.18 -138.62 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_63){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "32.14 -138.71 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_64){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "31.09 -138.8 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_65){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "30.05 -138.89 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_66){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "29.01 -138.98 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_67){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "27.96 -139.06 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_68){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "26.92 -139.15 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_69){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "25.87 -139.24 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_70){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "24.83 -139.33 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_71){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "23.79 -139.42 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_72){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "22.74 -139.51 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_73){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "21.7 -139.6 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_74){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "20.65 -139.69 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_75){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "19.61 -139.78 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_76){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "18.57 -139.87 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_77){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "17.52 -139.96 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_78){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "13.68 -140.28 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_79){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "10.36 -140.57 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_80){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "7.04 -140.85 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_81){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "3.71 -141.13 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_82){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "0.39 -141.42 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_83){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-2.93 -141.7 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_84){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-5.9 -133.91 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_85){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-8.87 -126.13 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_86){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-11.84 -118.34 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_87){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-14.81 -110.55 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_88){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-17.78 -102.77 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_89){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-20.74 -94.98 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_90){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-19.35 -94.33 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_91){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-17.96 -93.69 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_92){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-16.57 -93.04 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_93){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-15.18 -92.39 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_94){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-13.79 -91.74 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_95){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-12.39 -91.1 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_96){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-11.0 -90.45 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_97){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-9.61 -89.8 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_98){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-8.22 -89.15 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_99){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-6.83 -88.51 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_100){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-5.44 -87.86 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_101){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-4.05 -87.21 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_102){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-2.65 -86.56 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_103){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "-1.26 -85.91 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_104){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "0.13 -85.27 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_105){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "1.52 -84.62 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_106){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "2.91 -83.97 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGWaypoint(wp_ego_107){
   drawDebug = "0";
   directionalWaypoint = "0";
   position = "4.3 -83.32 0";
   scale = "3.0 3.0 3.0";
   rotationMatrix = "1 0 0 0 1 0 0 0 1";
   mode = "Ignore";
   canSave = "1";
   canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_1', 'wp_ego_2', 'wp_ego_3', 'wp_ego_4', 'wp_ego_5', 'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "15.49 0.0 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_2', 'wp_ego_3', 'wp_ego_4', 'wp_ego_5', 'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "27.38 0.0 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_3', 'wp_ego_4', 'wp_ego_5', 'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "37.0 0.01 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_4', 'wp_ego_5', 'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "44.64 0.02 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_5', 'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "50.64 0.04 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_6', 'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "55.29 0.07 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_7', 'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "58.93 0.11 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_8', 'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "61.86 0.16 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_9', 'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "64.39 0.23 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_10', 'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "66.82 0.3 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_11', 'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.19 0.28 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_12', 'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "71.41 -0.01 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_13', 'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "73.42 -0.71 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_14', 'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "75.13 -1.98 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_15', 'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "76.46 -3.98 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_16', 'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "77.34 -6.87 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_17', 'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "77.68 -10.8 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_18', 'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "77.4 -15.93 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_19', 'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "76.51 -22.3 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_20', 'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "76.01 -25.59 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_21', 'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "75.52 -28.89 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_22', 'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "75.02 -32.19 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_23', 'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "74.53 -35.48 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_24', 'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "74.03 -38.78 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_25', 'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "73.29 -43.72 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_26', 'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "72.55 -48.67 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_27', 'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "71.81 -53.61 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_28', 'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "71.07 -58.56 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_29', 'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "70.32 -63.5 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_30', 'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.58 -68.45 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_31', 'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.42 -73.43 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_32', 'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.34 -78.3 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_33', 'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.37 -83.01 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_34', 'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.55 -87.57 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_35', 'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "69.93 -91.96 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_36', 'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "70.53 -96.15 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_37', 'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "71.39 -100.14 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_38', 'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "72.56 -103.89 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_39', 'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "74.07 -107.41 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_40', 'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "75.93 -110.68 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_41', 'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "78.05 -113.8 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_42', 'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "80.25 -116.9 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_43', 'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "82.34 -120.15 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_44', 'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "84.14 -123.68 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_45', 'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "85.49 -127.64 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_46', 'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "86.2 -132.18 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_47', 'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "86.09 -137.44 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_48', 'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "84.98 -143.57 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_49', 'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "82.99 -150.18 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_50', 'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "81.98 -153.35 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_51', 'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "80.97 -156.53 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_52', 'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "79.96 -159.71 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_53', 'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "78.95 -162.88 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_54', 'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "77.94 -166.06 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_55', 'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "71.0 -161.44 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_56', 'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "64.06 -156.82 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_57', 'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "57.13 -152.21 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_58', 'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "50.19 -147.59 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_59', 'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "43.25 -142.97 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_60', 'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "36.31 -138.35 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_61', 'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "35.27 -138.44 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_62', 'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "34.23 -138.53 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_63', 'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "33.18 -138.62 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_64', 'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "32.14 -138.71 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_65', 'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "31.09 -138.8 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_66', 'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "30.05 -138.89 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_67', 'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "29.01 -138.98 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_68', 'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "27.96 -139.06 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_69', 'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "26.92 -139.15 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_70', 'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "25.87 -139.24 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_71', 'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "24.83 -139.33 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_72', 'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "23.79 -139.42 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_73', 'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "22.74 -139.51 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_74', 'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "21.7 -139.6 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_75', 'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "20.65 -139.69 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_76', 'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "19.61 -139.78 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_77', 'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "18.57 -139.87 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_78', 'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "17.52 -139.96 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_79', 'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "13.68 -140.28 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_80', 'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "10.36 -140.57 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_81', 'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "7.04 -140.85 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_82', 'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "3.71 -141.13 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_83', 'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "0.39 -141.42 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_84', 'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-2.93 -141.7 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_85', 'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-5.9 -133.91 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_86', 'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-8.87 -126.13 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_87', 'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-11.84 -118.34 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_88', 'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-14.81 -110.55 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_89', 'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-17.78 -102.77 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_90', 'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-20.74 -94.98 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_91', 'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-19.35 -94.33 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_92', 'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-17.96 -93.69 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_93', 'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-16.57 -93.04 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_94', 'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-15.18 -92.39 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_95', 'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-13.79 -91.74 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_96', 'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-12.39 -91.1 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_97', 'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-11.0 -90.45 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_98', 'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-9.61 -89.8 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_99', 'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-8.22 -89.15 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_100', 'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-6.83 -88.51 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_101', 'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-5.44 -87.86 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_102', 'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-4.05 -87.21 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_103', 'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-2.65 -86.56 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_104', 'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "-1.26 -85.91 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_105', 'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "0.13 -85.27 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_106', 'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "1.52 -84.62 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
new BeamNGTrigger() {
    TriggerType = "Sphere";
    TriggerMode = "Overlaps";
    TriggerTestType = "Race Corners";
    luaFunction = "local sh = require('ge/extensions/scenario/scenariohelper')\r\nlocal function onWaypoint(data)\r\n  if data['event'] == 'enter' then\r\n    local modeFile = io.open('ego_movementMode', 'w')\r\n    modeFile:write('_BEAMNG')\r\n    modeFile:close()\r\n    sh.setAiPath({vehicleName='ego', waypoints={'wp_ego_107'}, driveInLane='on'})\r\n  end\r\nend\r\n\r\nreturn onWaypoint";
    tickPeriod = "100";
    debug = "0";
    ticking = "0";
    triggerColor = "255 192 0 45";
    defaultOnLeave = "1";
    position = "2.91 -83.97 0.5";
    scale = "3.5 3.5 10";
    rotationMatrix = "1 0 0 0 1 0 0 0 1";
    mode = "Ignore";
    canSave = "1";
    canSaveDynamicFields = "1";
};
    
};